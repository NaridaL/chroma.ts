"use strict"
Object.defineProperty(exports, "__esModule", { value: !0 })
const { abs: t, atan2: r, cos: n, floor: e, log: i, max: s, round: o, sin: u, sqrt: h, PI: c } = Math
function a(t, r, n, e = 1e-8) {
	let i,
		s = r
	for (; n-- && Math.abs((i = t(s))) > e; ) {
		const r = (t(s + e) - i) / e
		console.log("fx / dfdx", i / r, "fx", i, "x", s), (s -= i / r)
	}
	return s
}
const l = 2 * c,
	f = c / 180,
	d = 180 / c
class g {
	constructor(t) {
		3 == t.length && t.push(1), (this.t = t)
	}
	interpolate(t, r, n) {
		return p.interpolate(this, t, r, n)
	}
	rgb(t = !0) {
		return (t ? this.t.map(Math.round) : this.t).slice(0, 3)
	}
	rgba(t = !0, r = !0) {
		const n = n => (t && (n = Math.round(n)), r && (n = m(n, 0, 255)), n)
		return [n(this.t[0]), n(this.t[1]), n(this.t[2]), this.t[3]]
	}
	hex(t = "rgb") {
		return (function(t, r = "rgb") {
			let [n, e, i, s] = t
			const u = (
					((n = m(Math.round(n), 0, 255)) << 16) |
					((e = m(Math.round(e), 0, 255)) << 8) |
					(i = m(Math.round(i), 0, 255))
				)
					.toString(16)
					.padStart(6, "0"),
				h = o(255 * m(s))
					.toString(16)
					.padStart(2, "0")
			return "#" + ("argb" == r ? h + u : "rgba" == r ? u + h : u)
		})(this.t, t)
	}
	hsl() {
		const [t, r, n] = this.t
		return (function(t, r, n) {
			const e = Math.min((t /= 255), (r /= 255), (n /= 255)),
				i = Math.max(t, r, n),
				s = (i + e) / 2
			let o,
				u = 0
			return (
				i == e
					? ((o = 0), (u = 0))
					: ((o = s < 0.5 ? (i - e) / (i + e) : (i - e) / (2 - i - e)),
					  t == i
							? (u = (r - n) / (i - e) + (r < n ? 6 : 0))
							: r == i
								? (u = 2 + (n - t) / (i - e))
								: n == i && (u = 4 + (t - r) / (i - e))),
				[60 * u, o, s]
			)
		})(t, r, n)
	}
	hsv() {
		const [t, r, n] = this.t
		return (function(t, r, n) {
			const e = Math.min(t, r, n),
				i = Math.max(t, r, n),
				s = i - e
			let o
			return [
				60 *
					(o =
						0 == s
							? 0
							: t == i
								? (r - n) / s + (r < n ? 6 : 0)
								: r == i
									? 2 + (n - t) / s
									: 4 + (t - r) / s),
				0 == i ? 0 : s / i,
				i / 255,
			]
		})(t, r, n)
	}
	hcg() {
		const [t, r, n] = this.t
		return (function(t, r, n) {
			const e = Math.min((t /= 255), (r /= 255), (n /= 255)),
				i = Math.max(t, r, n),
				s = i - e
			let o
			return [
				60 *
					(o =
						0 === s
							? 0
							: t == i
								? (r - n) / s + (n > r ? 6 : 0)
								: r == i
									? 2 + (n - t) / s
									: 4 + (t - r) / s),
				s,
				s < 1 ? e / (1 - s) : 0,
			]
		})(t, r, n)
	}
	css(t = "rgb") {
		if ("rgb" == t) {
			const [t, r, n, e] = this.t
			return (function(t, r, n, e = 1) {
				return e >= 1
					? "rgb(" + [t, r, n].map(o).join(",") + ")"
					: "rgba(" + [t, r, n].map(o).join(",") + "," + e + ")"
			})(t, r, n, e)
		}
		if ("hsl" == t)
			return (function([t, r, n], e) {
				const i = e < 1 ? "hsla" : "hsl"
				return (
					i + "(" + Y(t) + "," + Y(100 * r) + "%," + Y(100 * n) + "%" + ("hsla" == i ? "," + Y(e) : "") + ")"
				)
			})(this.hsl(), this.alpha())
		throw Error()
	}
	name(t = !1) {
		const r = this.num(),
			n = Object.keys(p.w3cx11).find(t => p.w3cx11[t] == r)
		if (!n && t) {
			const [t, r, n] = this.lab()
			return (e = Object.keys(p.w3cx11))[
				ot(e, e => {
					const [i, s, o] = p.num(p.w3cx11[e]).lab()
					return -Math.hypot(t - i, r - s, n - o)
				})
			]
		}
		var e
		return n
	}
	cmyk() {
		const [t, r, n] = this.t
		return (function(t, r, n) {
			const e = 1 - Math.max((t /= 255), (r /= 255), (n /= 255))
			return 1 == e ? [0, 0, 0, 1] : [(1 - t - e) / (1 - e), (1 - r - e) / (1 - e), (1 - n - e) / (1 - e), e]
		})(t, r, n)
	}
	gl() {
		const [t, r, n, e] = this.t
		return [t / 255, r / 255, n / 255, e]
	}
	luminance(t) {
		const [r, n, e, i] = this.t,
			[, s] = et(r, n, e)
		if (void 0 === t) return s
		const o = (t, r, n) => (n - t) / (r - t)
		return t > s
			? p.interpolate(this, p("white"), o(s, 1, t), "xyz").alpha(i)
			: p.interpolate(p("black"), this, o(0, s, t), "xyz").alpha(i)
	}
	temperature() {
		const [t, r, n] = this.t
		return (function(t, r, n) {
			return a(
				e => {
					const [i, s, o] = C(e),
						[u, h, c] = C(e + 1e-9)
					return ((u - i) / 1e-9) * (i - t) + ((h - s) / 1e-9) * (s - r) + ((c - o) / 1e-9) * (o - n)
				},
				Math.E ** ((n / t + 2.5) / 0.4),
				20,
			)
		})(t, r, n)
	}
	set(t, r) {
		const [n, e] = t.split(".")
		let i
		if (e) {
			i = this[n]()
			const t = n.indexOf(e)
			if (-1 == t) throw Error("invalid channel")
			if ("string" == typeof r)
				switch (r.charAt(0)) {
					case "+":
					case "-":
						i[t] += +r
						break
					case "*":
						i[t] *= +r.substr(1)
						break
					case "/":
						i[t] /= +r.substr(1)
						break
					default:
						i[t] = +r
				}
			else i[t] = r
		} else i = r
		const s = w[n](i)
		return (s[3] = this.alpha()), new g(s)
	}
	clipped() {
		return !!this.i
	}
	alpha(t) {
		if (void 0 === t) return this.t[3]
		const [r, n, e] = this.t
		return p.rgb(r, n, e, t)
	}
	darker(t = 1) {
		const [r, n, e] = this.lab()
		return p.lab(r - T * t, n, e, this.alpha())
	}
	brighter(t = 1) {
		return this.darker(-t)
	}
	saturate(t = 1) {
		const [r, n, e] = this.lch()
		return p.lch(r, s(0, n + t * T), e, this.alpha())
	}
	desaturate(t = 1) {
		return this.saturate(-t)
	}
	premultiplied() {
		const [t, r, n, e] = this.t
		return p.rgb(t * e, r * e, n * e, e)
	}
	hsi() {
		const [t, r, n] = this.t
		return (function(t, r, n) {
			const e = ((t /= 255) + (r /= 255) + (n /= 255)) / 3
			let i, s
			if (t == r && r == n) (i = 0), (s = 0)
			else {
				const o = Math.min(t, r, n)
				;(i = Math.acos((t - r + (t - n)) / 2 / Math.sqrt((t - r) ** 2 + (t - n) * (r - n)))),
					n > r && (i = l - i),
					(s = 1 - o / e)
			}
			return [i * d, s, e]
		})(t, r, n)
	}
	lab() {
		const [t, r, n] = this.t
		return nt(t, r, n)
	}
	num() {
		const [t, r, n] = this.t
		return (function(t, r, n) {
			return (Math.round(t) << 16) + (Math.round(r) << 8) + Math.round(n)
		})(t, r, n)
	}
	lch() {
		const [t, r, n] = this.t
		return z(t, r, n)
	}
	hcl() {
		const [t, r, n] = this.t
		return z(t, r, n).reverse()
	}
	xyz() {
		const [t, r, n] = this.t
		return et(t, r, n)
	}
}
function b(t, r, n) {
	return t + (r - t) * n
}
function m(t, r = 0, n = 1) {
	return t < r ? r : t > n ? n : t
}
function p(...t) {
	return t[0] instanceof g
		? t[0]
		: t.length > 1 && "string" == typeof t[t.length - 1]
			? v(t.slice(0, t.length - 1), t[t.length - 1])
			: Array.isArray(t[0])
				? v(t[0])
				: v(t)
}
;(exports.Color = g),
	(g.prototype.mix = g.prototype.interpolate),
	(g.prototype.toString = g.prototype.hex),
	(g.prototype.kelvin = g.prototype.temperature),
	(exports.chroma = p),
	(exports.default = p),
	(function(s) {
		;(s.brewer = {
			OrRd: [16775148, 16705736, 16635038, 16628612, 16551257, 15689032, 14102559, 11730944, 8323072],
			PuBu: [16775163, 15525874, 13685222, 10927579, 7645647, 3576e3, 356528, 285325, 145496],
			BuPu: [16252157, 14740724, 12571622, 10403034, 9213638, 9202609, 8929693, 8458108, 5046347],
			Oranges: [16774635, 16705230, 16634018, 16625259, 16616764, 15821075, 14239745, 10892803, 8333060],
			BuGn: [16252157, 15070713, 13429990, 10082505, 6734500, 4304502, 2329413, 27948, 17435],
			YlOrBr: [16777189, 16775100, 16704401, 16696399, 16685353, 15495188, 13388802, 10040324, 6694150],
			YlGn: [16777189, 16252089, 14282915, 11394446, 7915129, 4303709, 2327619, 26679, 17705],
			Reds: [16774640, 16703698, 16563105, 16552562, 16476746, 15678252, 13309981, 10817301, 6750221],
			RdPu: [16775155, 16638173, 16565696, 16424885, 16214177, 14496919, 11403646, 7995767, 4784234],
			Greens: [16252149, 15070688, 13101504, 10607003, 7652470, 4303709, 2329413, 27948, 17435],
			YlGnBu: [16777177, 15595697, 13101492, 8375739, 4306628, 1937856, 2252456, 2438292, 531800],
			Purples: [16579581, 15724021, 14342891, 12369372, 10394312, 8420794, 6967715, 5515151, 4128893],
			GnBu: [16252144, 14742491, 13429701, 11066805, 8113348, 5157843, 2854078, 551084, 540801],
			Greys: [16777215, 15790320, 14277081, 12434877, 9868950, 7566195, 5395026, 2434341, 0],
			YlOrRd: [16777164, 16772512, 16701814, 16691788, 16616764, 16535082, 14883356, 12386342, 8388646],
			PuRd: [16250105, 15196655, 13941210, 13210823, 14640560, 15149450, 13505110, 9961539, 6750239],
			Blues: [16251903, 14609399, 13032431, 10406625, 7057110, 4362950, 2191797, 545180, 536683],
			PuBuGn: [16775163, 15524592, 13685222, 10927579, 6793679, 3576e3, 164234, 93273, 83510],
			Viridis: [4456788, 4728695, 4147850, 3237774, 2524047, 2071946, 7130714, 11984427, 16705573],
			Spectral: [
				10355010,
				13975119,
				16018755,
				16625249,
				16703627,
				16777151,
				15136152,
				11263396,
				6734501,
				3311805,
				6180770,
			],
			RdYlGn: [
				10813478,
				14102567,
				16018755,
				16625249,
				16703627,
				16777151,
				14282635,
				10934634,
				6733155,
				1742928,
				26679,
			],
			RdBu: [
				6750239,
				11671595,
				14049357,
				16033154,
				16636871,
				16250871,
				13755888,
				9618910,
				4428739,
				2188972,
				340065,
			],
			PiYG: [
				9306450,
				12917629,
				14579630,
				15840986,
				16638191,
				16250871,
				15136208,
				12116358,
				8371265,
				5083681,
				2581529,
			],
			PRGn: [
				4194379,
				7744131,
				10055851,
				12756431,
				15193320,
				16250871,
				14282963,
				10935200,
				5942881,
				1800247,
				17435,
			],
			RdYlBu: [
				10813478,
				14102567,
				16018755,
				16625249,
				16703632,
				16777151,
				14742520,
				11262441,
				7646673,
				4552116,
				3225237,
			],
			BrBG: [5517317, 9195786, 12550445, 14664317, 16181443, 16119285, 13101797, 8441281, 3512207, 91742, 15408],
			RdGy: [
				6750239,
				11671595,
				14049357,
				16033154,
				16636871,
				16777215,
				14737632,
				12237498,
				8882055,
				5066061,
				1710618,
			],
			PuOr: [
				8338184,
				11753478,
				14713364,
				16627811,
				16703670,
				16250871,
				14211819,
				11709394,
				8418220,
				5515144,
				2949195,
			],
			Set2: [6734501, 16551266, 9281739, 15174339, 10934356, 16767279, 15058068, 11776947],
			Accent: [8374655, 12496596, 16629894, 16777113, 3697840, 15729279, 12540695, 6710886],
			Set1: [14948892, 3636920, 5091146, 9981603, 16744192, 16777011, 10901032, 16220607, 10066329],
			Set3: [
				9294791,
				16777139,
				12499674,
				16482418,
				8434131,
				16626786,
				11787881,
				16567781,
				14277081,
				12353725,
				13429701,
				16772463,
			],
			Dark2: [1810039, 14245634, 7696563, 15149450, 6727198, 15117058, 10909213, 6710886],
			Paired: [
				10931939,
				2062516,
				11722634,
				3383340,
				16489113,
				14883356,
				16629615,
				16744192,
				13284054,
				6962586,
				16777113,
				11622696,
			],
			Pastel2: [11789005, 16633260, 13358568, 16042724, 15136201, 16773806, 15852236, 13421772],
			Pastel1: [16495790, 11783651, 13429701, 14601188, 16701862, 16777164, 15063229, 16636652, 15921906],
		}),
			(s.w3cx11 = {
				aliceblue: 15792383,
				antiquewhite: 16444375,
				aqua: 65535,
				aquamarine: 8388564,
				azure: 15794175,
				beige: 16119260,
				bisque: 16770244,
				black: 0,
				blanchedalmond: 16772045,
				blue: 255,
				blueviolet: 9055202,
				brown: 10824234,
				burlywood: 14596231,
				cadetblue: 6266528,
				chartreuse: 8388352,
				chocolate: 13789470,
				coral: 16744272,
				cornflower: 6591981,
				cornflowerblue: 6591981,
				cornsilk: 16775388,
				crimson: 14423100,
				cyan: 65535,
				darkblue: 139,
				darkcyan: 35723,
				darkgoldenrod: 12092939,
				darkgray: 11119017,
				darkgreen: 25600,
				darkgrey: 11119017,
				darkkhaki: 12433259,
				darkmagenta: 9109643,
				darkolivegreen: 5597999,
				darkorange: 16747520,
				darkorchid: 10040012,
				darkred: 9109504,
				darksalmon: 15308410,
				darkseagreen: 9419919,
				darkslateblue: 4734347,
				darkslategray: 3100495,
				darkslategrey: 3100495,
				darkturquoise: 52945,
				darkviolet: 9699539,
				deeppink: 16716947,
				deepskyblue: 49151,
				dimgray: 6908265,
				dimgrey: 6908265,
				dodgerblue: 2003199,
				firebrick: 11674146,
				floralwhite: 16775920,
				forestgreen: 2263842,
				fuchsia: 16711935,
				gainsboro: 14474460,
				ghostwhite: 16316671,
				gold: 16766720,
				goldenrod: 14329120,
				gray: 8421504,
				green: 32768,
				greenyellow: 11403055,
				grey: 8421504,
				honeydew: 15794160,
				hotpink: 16738740,
				indianred: 13458524,
				indigo: 4915330,
				ivory: 16777200,
				khaki: 15787660,
				laserlemon: 16777044,
				lavender: 15132410,
				lavenderblush: 16773365,
				lawngreen: 8190976,
				lemonchiffon: 16775885,
				lightblue: 11393254,
				lightcoral: 15761536,
				lightcyan: 14745599,
				lightgoldenrod: 16448210,
				lightgoldenrodyellow: 16448210,
				lightgray: 13882323,
				lightgreen: 9498256,
				lightgrey: 13882323,
				lightpink: 16758465,
				lightsalmon: 16752762,
				lightseagreen: 2142890,
				lightskyblue: 8900346,
				lightslategray: 7833753,
				lightslategrey: 7833753,
				lightsteelblue: 11584734,
				lightyellow: 16777184,
				lime: 65280,
				limegreen: 3329330,
				linen: 16445670,
				magenta: 16711935,
				maroon: 8388608,
				maroon2: 8323072,
				maroon3: 11546720,
				mediumaquamarine: 6737322,
				mediumblue: 205,
				mediumorchid: 12211667,
				mediumpurple: 9662683,
				mediumseagreen: 3978097,
				mediumslateblue: 8087790,
				mediumspringgreen: 64154,
				mediumturquoise: 4772300,
				mediumvioletred: 13047173,
				midnightblue: 1644912,
				mintcream: 16121850,
				mistyrose: 16770273,
				moccasin: 16770229,
				navajowhite: 16768685,
				navy: 128,
				oldlace: 16643558,
				olive: 8421376,
				olivedrab: 7048739,
				orange: 16753920,
				orangered: 16729344,
				orchid: 14315734,
				palegoldenrod: 15657130,
				palegreen: 10025880,
				paleturquoise: 11529966,
				palevioletred: 14381203,
				papayawhip: 16773077,
				peachpuff: 16767673,
				peru: 13468991,
				pink: 16761035,
				plum: 14524637,
				powderblue: 11591910,
				purple: 8388736,
				purple2: 8323199,
				purple3: 10494192,
				rebeccapurple: 6697881,
				red: 16711680,
				rosybrown: 12357519,
				royalblue: 4286945,
				saddlebrown: 9127187,
				salmon: 16416882,
				sandybrown: 16032864,
				seagreen: 3050327,
				seashell: 16774638,
				sienna: 10506797,
				silver: 12632256,
				skyblue: 8900331,
				slateblue: 6970061,
				slategray: 7372944,
				slategrey: 7372944,
				snow: 16775930,
				springgreen: 65407,
				steelblue: 4620980,
				tan: 13808780,
				teal: 32896,
				thistle: 14204888,
				tomato: 16737095,
				turquoise: 4251856,
				violet: 15631086,
				wheat: 16113331,
				white: 16777215,
				whitesmoke: 16119285,
				yellow: 16776960,
				yellowgreen: 10145074,
			})
		class o {
			start(t) {
				return void 0 === t ? this.s : ((this.s = t), this)
			}
			rotations(t) {
				return void 0 === t ? this.o : ((this.o = t), this)
			}
			gamma(t) {
				return void 0 === t ? this.u : ((this.u = t), this)
			}
			hue(t) {
				return void 0 === t ? this.h : ((this.h = Array.isArray(t) ? t : [t, t]), this)
			}
			lightness(t) {
				return void 0 === t ? this.l : ((this.l = Array.isArray(t) ? t : [t, t]), this)
			}
			scale() {
				return s.scale(this)
			}
			at(t) {
				const r = l * ((this.s + 120) / 360 + this.o * t),
					n = b(this.l[0], this.l[1], t) ** this.u,
					e = (b(this.h[0], this.h[1], t) * n * (1 - n)) / 2,
					i = Math.cos(r),
					o = Math.sin(r),
					u = n + e * (-0.14861 * i + 1.78277 * o),
					h = n + e * (-0.29227 * i - 0.90649 * o),
					c = n + e * (1.97294 * i)
				return s.rgb([255 * u, 255 * h, 255 * c, 1])
			}
		}
		function u(t, r, n = 0.5, e = "rgb") {
			const i = s(t),
				o = s(r),
				u = y[e] && y[e](i, o, n, e)
			if (!u) throw Error("color mode " + e + " is not supported")
			return u.alpha(b(i.alpha(), o.alpha(), n))
		}
		function f(t) {
			return new g(E(t))
		}
		let p, w
		;(s.cubehelix = function(t = 300, r = -1.5, n = 1, e = 1, i = [0, 1]) {
			const s = t => s.at(t)
			return (
				Object.getOwnPropertyNames(o.prototype).forEach(t => (s[t] = o.prototype[t])),
				s.start(t),
				s.rotations(r),
				s.hue(n),
				s.gamma(e),
				s.lightness(i),
				s
			)
		}),
			(s.random = function() {
				return f((16777216 * Math.random()) | 0)
			}),
			(s.interpolate = u),
			(s.mix = u),
			(s.css = function(t) {
				return new g($(t))
			}),
			(s.cmyk = function(...t) {
				return v(t, "cmyk")
			}),
			(s.gl = function(...t) {
				return v(t, "gl")
			}),
			(s.hcg = function(...t) {
				return v(t, "hcg")
			}),
			(s.hcl = function(...t) {
				return v(t, "hcl")
			}),
			(s.lch = function(...t) {
				return v(t, "lch")
			}),
			(s.hsi = function(...t) {
				return v(t, "hsi")
			}),
			(s.hsl = function(...t) {
				return v(t, "hsl")
			}),
			(s.hsv = function(...t) {
				return v(t, "hsv")
			}),
			(s.kelvin = function(t) {
				return new g(C(t))
			}),
			(s.lab = function(...t) {
				return v(t, "lab")
			}),
			(s.num = f),
			(s.rgb = function(...t) {
				return v(t, "rgb")
			}),
			(s.xyz = function(...t) {
				return v(t, "xyz")
			}),
			(s.average = function(t, n = "rgb") {
				const e = t.map(t => s(t))
				if ("lrgb" == n)
					return (function(t) {
						let r = 0,
							n = 0,
							e = 0,
							i = 0
						for (const s of t) {
							const t = s.t
							;(r += t[0] ** 2), (n += t[1] ** 2), (e += t[2] ** 2), (i += t[3])
						}
						return new g([
							Math.sqrt(r) / t.length,
							Math.sqrt(n) / t.length,
							Math.sqrt(e) / t.length,
							i / t.length,
						])
					})(e)
				const i = [0, 0, 0]
				let o = 0,
					u = 0,
					h = 0
				for (const t of e) {
					const r = t[n]()
					h += t.alpha()
					for (let t = 0; t < i.length; t++)
						if ("h" == n.charAt(t)) {
							const n = (r[t] / 180) * c
							;(o += Math.cos(n)), (u += Math.sin(n))
						} else i[t] += r[t]
				}
				for (let t = 0; t < i.length; t++)
					if ("h" == n.charAt(t)) {
						const n = r(u / e.length, o / e.length) * d
						i[t] = (n + 360) % 360
					} else i[t] = i[t] / e.length
				return v(i, n).alpha(h / e.length)
			}),
			(s.bezier = function(...t) {
				const r = M(Array.isArray(t[0]) ? t[0] : t)
				return (r.scale = o.prototype.scale), r
			}),
			(s.blend = function(t, r, n) {
				if (!p[n]) throw Error("unknown blend mode " + n)
				return p[n](t, r)
			}),
			(function(t) {
				;(t.normal = L(_((t, r) => t))),
					(t.multiply = L(_((t, r) => (t * r) / 255))),
					(t.screen = L(_(D))),
					(t.overlay = L(_(J))),
					(t.darken = L(_(Math.min))),
					(t.lighten = L(_(Math.max))),
					(t.dodge = L(_(H))),
					(t.burn = L(_(V)))
			})(p || (p = {}))
		class k {
			init(t) {
				;(this.g = t),
					(this.m = "rgb"),
					this.domain(0, 1),
					(this.p = 0),
					(this.k = 0),
					(this.M = !1),
					(this.v = new Map()),
					(this.u = 1)
			}
			setColors(t = ["#fff", "#000"]) {
				if ("function" == typeof t) this.g = t
				else {
					const r = "string" == typeof t ? s.brewer[t] : t
					;(this.g = r.map(t => s(t))), (this.A = r.map((t, n) => n / (r.length - 1)))
				}
				return this.resetCache(), this.g
			}
			classes(t) {
				if (void 0 === t) return this.R
				if (Array.isArray(t)) (this.R = t), (this.P = [t[0], t[t.length - 1]])
				else {
					const r = s.analyze(this.P)
					this.R = 0 == t ? [r.min, r.max] : s.limits(r, "e", t)
				}
				return this
			}
			domain(...t) {
				if (void 0 === t[0])
					return "function" != typeof this.g ? this.A.map(t => b(this.B, this.G, t)) : [this.B, this.G]
				if (((this.B = t[0]), (this.G = t[t.length - 1]), 2 == t.length))
					"function" != typeof this.g && (this.A = this.g.map((t, r) => r / (this.g.length - 1)))
				else {
					if (t.length != this.g.length || "function" == typeof this.g) throw Error("invalid domain " + t)
					this.A = t.map(t => (t - this.B) / (this.G - this.B))
				}
				return this
			}
			mode(t) {
				return void 0 === t ? this.m : ((this.m = t), this.resetCache(), this)
			}
			out(t) {
				return (this.q = t), this
			}
			correctLightness(t = !0) {
				return this.M != t && this.resetCache(), (this.M = t), this
			}
			padding(t, r = t) {
				return t ? ((this.p = t), (this.k = r), this) : [this.p, this.k]
			}
			colors(t, r = "hex") {
				let n
				if (void 0 === t) n = this.g.slice()
				else if (1 == t) n = [this((this.B + this.G) / 2)]
				else if (t > 1) n = Array.from({ length: t }, (r, n) => this(b(this.B, this.G, n / (t - 1))))
				else {
					let t
					n = (t =
						this.R && this.R.length > 2
							? Array.from({ length: this.R.length - 1 }, (t, r) => 0.5 * (this.R[r] + this.R[r + 1]))
							: this.P).map(this)
				}
				return r ? n.map(t => t[r]()) : n
			}
			cache(t) {
				return void 0 === t ? !!this.v : ((this.v = t ? this.v || new Map() : void 0), this)
			}
			gamma(t) {
				return void 0 === t ? this.u : ((this.u = t), this)
			}
			at(t) {
				const r = this.color(t)
				return this.q ? r[this.q]() : r
			}
			getClass(t) {
				return this.R.findIndex(r => t <= r) - 1
			}
			color(t, r = !1) {
				let n
				if (r) n = t
				else {
					const r = this.P[0],
						e = this.P[1]
					;(n =
						this.R && this.R.length > 2
							? this.getClass(t) / (this.R.length - 2)
							: e !== r
								? (t - r) / (e - r)
								: 1),
						this.M && (n = this.tCorrectedLightness(n))
				}
				n = n ** this.u
				const e = (n = m((n = this.O[0] + n * (1 - this.O[0] - this.O[1])), 0, 1)),
					i = this.v && this.v.get(e)
				if (i) return i
				{
					let t
					if (Array.isArray(this.g))
						for (let r = 0; r < this.A.length; r++) {
							const e = this.A[r]
							if (n <= e) {
								t = this.g[r]
								break
							}
							if (n >= e && r == this.A.length - 1) {
								t = this.g[r]
								break
							}
							if (n > e && n < this.A[r + 1]) {
								;(n = (n - e) / (this.A[r + 1] - e)),
									(t = s.interpolate(this.g[r], this.g[r + 1], n, this.m))
								break
							}
						}
					else t = this.g(n)
					return this.v && this.v.set(e, t), t
				}
			}
			tCorrectedLightness(t) {
				const r = b(this.color(0, !0).lab()[0], this.color(1, !0).lab()[0], t)
				return a(t => this.color(t, !0).lab()[0] - r, t, 8)
			}
			resetCache() {
				this.v.clear()
			}
		}
		;(s.scale = function(...t) {
			const r = t => r.at(t)
			return (
				Object.getOwnPropertyNames(k.prototype).forEach(t => (r[t] = k.prototype[t])),
				r.init(),
				r.setColors(t.length > 1 ? t : t[0]),
				r
			)
		}),
			(function(t) {
				;(t.cool = function() {
					return s.scale([s.hsl(180, 1, 0.9), s.hsl(250, 0.7, 0.4)])
				}),
					(t.hot = function() {
						return s.scale(["#000", "#f00", "#ff0", "#fff"]).mode("rgb")
					})
			})((w = s.scales || (s.scales = {}))),
			(s.contrast = function(t, r) {
				const n = s(t).luminance(),
					e = s(r).luminance()
				return n > e ? (n + 0.05) / (e + 0.05) : (e + 0.05) / (n + 0.05)
			}),
			(s.distance = function(t, r, n = "lab") {
				const e = s(t)[n](),
					i = s(r)[n](),
					o = e.map((t, r) => t - i[r])
				return Math.hypot(...o)
			}),
			(s.deltaE = function(e, i, o = 1, u = 1) {
				const [a, l, f] = s(e).lab(),
					[d, g, b] = s(i).lab(),
					m = h(l * l + f * f),
					p = h(g * g + b * b),
					y = a < 16 ? 0.511 : (0.040975 * a) / (1 + 0.01765 * a),
					w = (0.0638 * m) / (1 + 0.0131 * m) + 0.638
				let k = m < 1e-6 ? 0 : (180 * r(f, l)) / c
				for (; k < 0; ) k += 360
				for (; k >= 360; ) k -= 360
				const M =
						k >= 164 && k <= 345
							? 0.56 + t(0.2 * n((c * (k + 168)) / 180))
							: 0.36 + t(0.4 * n((c * (k + 35)) / 180)),
					v = m * m * m * m,
					A = h(v / (v + 1900)),
					x = w * (A * M + 1 - A),
					E = m - p,
					R = l - g,
					P = f - b,
					B = (a - d) / (o * y),
					G = E / (u * w)
				return h(B * B + G * G + (R * R + P * P - E * E) / (x * x))
			}),
			(s.analyze = function(t) {
				const r = { min: 1 / 0, max: -1 / 0, sum: 0, values: [], count: 0 }
				return (
					t.forEach(
						t => (
							(t = t),
							void (
								void 0 == t ||
								isNaN(t) ||
								(r.values.push(t),
								(r.sum += t),
								t < r.min && (r.min = t),
								t > r.max && (r.max = t),
								(r.count += 1))
							)
						),
					),
					(r.domain = [r.min, r.max]),
					(r.limits = function(t, r) {
						return s.limits(this, t, r)
					}),
					r
				)
			}),
			(s.limits = function(r, n = "e", o = 7) {
				const u = Array.isArray(r) ? s.analyze(r) : r,
					{ min: h, max: c, values: a } = u
				if ((a.sort((t, r) => t - r), 1 == o)) return [h, c]
				if (n.startsWith("c")) return [h, c]
				if (n.startsWith("e")) return Array.from({ length: o + 1 }, (t, r) => b(h, c, r / o))
				if (n.startsWith("l")) {
					if (h <= 0) throw Error("Logarithmic scales are only possible for values > 0")
					const t = Math.LOG10E * i(h),
						r = Math.LOG10E * i(c)
					return Array.from({ length: o + 1 }, (n, e) => 10 ** b(t, r, e / o))
				}
				if (n.startsWith("q"))
					return Array.from({ length: o + 1 }, (t, r) => {
						const n = ((a.length - 1) * r) / o,
							i = e(n)
						return i == n ? a[i] : b(a[i], a[i + 1], n - i)
					})
				if (n.startsWith("k")) {
					const r = a.length,
						n = Array(r),
						e = Array(o)
					let i = !0,
						s = 0,
						u = Array.from({ length: o + 1 }, (t, r) => b(h, c, r / o))
					do {
						e.fill(0)
						for (let r = 0; r < a.length; r++) {
							const i = a[r],
								s = ot(u, r => -t(r - i))
							e[s]++, (n[r] = s)
						}
						const r = Array(o).fill(0)
						for (let t = 0; t < n.length; t++) r[n[t]] += a[t]
						for (let t = 0; t < r.length; t++) r[t] /= e[t]
						;(i = r.some((t, r) => t != u[r])), (u = r)
					} while (s++ < 200 && i)
					const l = Array.from({ length: o }, () => [])
					for (let t = 0; t < n.length; t++) l[n[t]].push(a[t])
					const f = []
					for (const t of l) f.push(t[0], t[t.length - 1])
					f.sort((t, r) => t - r)
					const d = []
					d.push(f[0])
					for (let t = 1; t < f.length; t += 2) {
						const r = f[t]
						isNaN(r) || -1 != d.indexOf(r) || d.push(r)
					}
					return d
				}
				throw Error("unknown mode")
			})
	})(p || (p = {})),
	(exports.chroma = p)
const y = {},
	w = {}
function k(t, r, n, e) {
	const i = t[e](),
		s = r[e]()
	return v([b(i[0], s[0], n), b(i[1], s[1], n), b(i[2], s[2], n), b(t.alpha(), r.alpha(), n)], e)
}
function M(t) {
	const r = t.map(t => p(t)),
		[n, e, i, s] = r.map(t => t.lab())
	if (2 == t.length) return t => p.lab([0, 1, 2].map(r => b(n[r], e[r], t)))
	if (3 == t.length) {
		const t = (t, r, n, e) => (1 - e) ** 2 * t + 2 * (1 - e) * e * r + e ** 2 * n
		return r => p.lab([0, 1, 2].map(s => t(n[s], e[s], i[s], r)))
	}
	if (4 == t.length) {
		const t = (t, r, n, e, i) => (1 - i) ** 3 * t + 3 * (1 - i) ** 2 * i * r + 3 * (1 - i) * i ** 2 * n + i ** 3 * e
		return r => p.lab([0, 1, 2].map(o => t(n[o], e[o], i[o], s[o], r)))
	}
	if (5 == t.length) {
		const t = M(r.slice(0, 3)),
			n = M(r.slice(2, 5))
		return r => (r < 0.5 ? t(2 * r) : n(2 * (r - 0.5)))
	}
	throw Error()
}
function v(t, r) {
	if ((Array.isArray(t[0]) && (t = t[0]), !r))
		if (1 == t.length && t[0] in p.w3cx11) r = "name"
		else if (1 == t.length && "string" == typeof t[0]) r = "css"
		else if (3 == t.length) r = "rgb"
		else if (4 == t.length && "number" == typeof t[3] && t[3] >= 0 && t[3] <= 1) r = "rgb"
		else {
			if (!(1 == t.length && "number" == typeof t[0] && t[0] >= 0 && t[0] <= 16777215))
				throw Error("could not guess mode. args " + JSON.stringify(t))
			r = "num"
		}
	const n = w[r](...t)
	if (n.some(t => "number" != typeof t)) throw Error("invalid rgb")
	return new g(n)
}
function A(t) {
	let r
	if ((r = t.match(/^#?([A-F\d]{2})([A-F\d]{2})([A-F\d]{2})([A-F\d]{2})?$/i)))
		return [parseInt(r[1], 16), parseInt(r[2], 16), parseInt(r[3], 16), r[4] ? parseInt(r[4], 16) / 255 : 1]
	if ((r = t.match(/^#?([A-F\d])([A-F\d])([A-F\d])([A-F\d])?$/i)))
		return [
			17 * parseInt(r[1], 16),
			17 * parseInt(r[2], 16),
			17 * parseInt(r[3], 16),
			r[4] ? (17 * parseInt(r[4], 16)) / 255 : 1,
		]
	throw Error("invalid hex color: " + t)
}
function x(t) {
	return ((t % 360) + 360) % 360
}
function E(t) {
	if (!("number" == typeof t && t >= 0 && t <= 16777215)) throw Error("unknown num color: " + t)
	return [t >> 16, (t >> 8) & 255, 255 & t, 1]
}
;(y.xyz = k),
	(y.rgb = k),
	(y.lab = k),
	(y.num = function(t, r, n) {
		const e = t.num(),
			i = r.num()
		return p.num(b(e, i, n))
	}),
	(y.lrgb = function(t, r, n) {
		const e = t.t,
			i = r.t
		return new g([
			Math.sqrt(e[0] ** 2 * (1 - n) + i[0] ** 2 * n),
			Math.sqrt(e[1] ** 2 * (1 - n) + i[1] ** 2 * n),
			Math.sqrt(e[2] ** 2 * (1 - n) + i[2] ** 2 * n),
			b(e[3], i[3], n),
		])
	}),
	(w.lrgb = w.rgb),
	(w.hex = A),
	(w.hsl = K),
	(w.hsv = function(t, r, n, i = 1) {
		if (((n *= 255), 0 == r)) return [n, n, n, i]
		{
			const s = x(t / 60),
				o = s - e(s),
				u = n * (1 - r),
				h = n * (1 - r * o),
				c = n * (1 - r * (1 - o))
			return t < 60
				? [n, c, u, i]
				: t < 120
					? [h, n, u, i]
					: t < 180
						? [u, n, c, i]
						: t < 240
							? [u, h, n, i]
							: t < 300
								? [c, u, n, i]
								: [n, u, h, i]
		}
	}),
	(w.num = E),
	(w.hcg = function(t, r, n, i = 1) {
		if (0 == r) return [255 * n, 255 * n, 255 * n, i]
		{
			const s = x(t / 60),
				o = e(s),
				u = s - o,
				h = n * (1 - r),
				c = 255 * (h + r * (1 - u)),
				a = 255 * (h + r * u),
				l = 255 * (h + r)
			return 0 == o
				? [l, a, h, i]
				: 1 == o
					? [c, l, h, i]
					: 2 == o
						? [h, l, a, i]
						: 3 == o
							? [h, c, l, i]
							: 4 == o
								? [a, h, l, i]
								: [l, h, c, i]
		}
	})
const R = "\\s*",
	P = "([+-]?(?:\\d*\\.?)?\\d+(?:[eE][+-]?\\d+)?)",
	B = RegExp(["^rgba?\\(", P, ",", P, ",", P, "(?:,", P + "(%)?", ")?\\)$"].join(R), "i"),
	G = RegExp(["^rgba?\\(", P, P, P, "(?:/", P + "(%)?", ")?\\)$"].join(R), "i"),
	q = RegExp(["^rgba?\\(", P + "%", ",", P + "%", ",", P + "%", "(?:,", P + "(%)?", ")?\\)$"].join(R), "i"),
	O = RegExp(["^rgba?\\(", P + "%", P + "%", P + "%", "(?:/", P + "(%)?", ")?\\)$"].join(R), "i"),
	I = RegExp(
		["^hsla?\\(", P + "(deg|rad|turn)?", ",", P + "%", ",", P + "%", "(?:,", P + "(%)?", ")?\\)$"].join(R),
		"i",
	),
	F = RegExp(["^hsla?\\(", P + "(deg|rad|turn)?\\s+" + P + "%", P + "%", "(?:/", P + "(%)?", ")?\\)$"].join(R), "i")
function $(t) {
	if (p.w3cx11 && p.w3cx11[t]) return A(p.w3cx11[t])
	let r
	if ((r = t.match(B) || t.match(G)))
		return [m(+r[1], 0, 255), m(+r[2], 0, 255), m(+r[3], 0, 255), r[4] ? m(r[5] ? +r[4] / 100 : +r[4]) : 1]
	if ((r = t.match(q) || t.match(O)))
		return [
			255 * m(+r[1] / 100),
			255 * m(+r[2] / 100),
			255 * m(+r[3] / 100),
			r[4] ? m(r[5] ? +r[4] / 100 : +r[4]) : 1,
		]
	if ((r = t.match(I) || t.match(F))) {
		const t = { deg: 1, rad: d, turn: 360 },
			n = r[2] ? r[2].toLowerCase() : "deg"
		return K(
			(((+r[1] * t[n]) % 360) + 360) % 360,
			m(+r[3] / 100),
			m(+r[4] / 100),
			r[5] ? m(r[6] ? +r[5] / 100 : +r[5]) : 1,
		)
	}
	return A(t)
}
function Y(t) {
	return o(100 * t) / 100
}
function j(t, r, e, i = 1) {
	const [, s, o] = (function(t, r, e) {
		return [t, n(e * f) * r, u(e * f) * r]
	})(t, r, e)
	return Q(t, s, o, i)
}
function z(t, r, n) {
	const [e, i, s] = nt(t, r, n)
	return (function(t, r, n) {
		return [t, Math.hypot(r, n), (Math.atan2(n, r) * d + 360) % 360]
	})(e, i, s)
}
function N(t) {
	const r = t / 255
	return r <= 0.04045 ? r / 12.92 : ((r + 0.055) / 1.055) ** 2.4
}
function S(t) {
	return t <= 0.0031308 ? 12.92 * t * 255 : 255 * (1.055 * t ** (1 / 2.4) - 0.055)
}
function C(t) {
	const r = t / 100
	let n, e, s
	return (
		r < 66
			? ((n = 255),
			  (e = -155.25485562709179 - 0.44596950469579133 * (r - 2) + 104.49216199393888 * i(r - 2)),
			  (s = r < 20 ? 0 : 0.8274096064007395 * (r - 10) - 254.76935184120902 + 115.67994401066147 * i(r - 10)))
			: ((n = 351.97690566805693 + 0.114206453784165 * (r - 55) - 40.25366309332127 * i(r - 55)),
			  (e = 325.4494125711974 + 0.07943456536662342 * (r - 50) - 28.0852963507957 * i(r - 50)),
			  (s = 255)),
		[n, e, s]
	)
}
function L(t) {
	return function(r, n) {
		const [e, i, s] = t(p(n).rgb(), p(r).rgb())
		return p.rgb(e, i, s)
	}
}
function _(t) {
	return function(r, n) {
		return r.map((r, e) => t(r, n[e]))
	}
}
function D(t, r) {
	return 255 * (1 - (1 - t / 255) * (1 - r / 255))
}
function J(t, r) {
	return r < 128 ? (2 * t * r) / 255 : 255 * (1 - 2 * (1 - t / 255) * (1 - r / 255))
}
function V(t, r) {
	return 255 * (1 - (1 - r / 255) / (t / 255))
}
function H(t, r) {
	return 255 == t ? 255 : (t = ((r / 255) * 255) / (1 - t / 255)) > 255 ? 255 : t
}
function K(t, r, n, e = 1) {
	let i, s, o
	if (0 == r) i = s = o = 255 * n
	else {
		const e = [0, 0, 0],
			u = [0, 0, 0],
			h = n < 0.5 ? n * (1 + r) : n + r - n * r,
			c = 2 * n - h
		;(t /= 360), (e[0] = t + 1 / 3), (e[1] = t), (e[2] = t - 1 / 3)
		for (let t = 0; t <= 2; t++)
			e[t] < 0 && (e[t] += 1),
				e[t] > 1 && (e[t] -= 1),
				6 * e[t] < 1
					? (u[t] = c + 6 * (h - c) * e[t])
					: 2 * e[t] < 1
						? (u[t] = h)
						: 3 * e[t] < 2
							? (u[t] = c + (h - c) * (2 / 3 - e[t]) * 6)
							: (u[t] = c)
		;[i, s, o] = [255 * u[0], 255 * u[1], 255 * u[2]]
	}
	return [i, s, o, e]
}
function Q(t, r, n, e = 1) {
	const [i, s, o] = (function(t, r, n) {
		function e(t) {
			return t > Z ? t ** 3 : tt * (t - 4 / 29)
		}
		return [U * e((t + 16) / 116 + r / 500), W * e((t + 16) / 116), X * e((t + 16) / 116 - n / 200)]
	})(t, r, n)
	return it(i, s, o, e)
}
;(w.css = $),
	(w.name = function(t) {
		return E(p.w3cx11[t])
	}),
	(w.lch = j),
	(w.hcl = (t, r, n) => j(n, r, t)),
	(w.cmyk = function(t, r, n, e, i = 1) {
		return 1 == e
			? [0, 0, 0, i]
			: [
					t >= 1 ? 0 : 255 * (1 - t) * (1 - e),
					r >= 1 ? 0 : 255 * (1 - r) * (1 - e),
					n >= 1 ? 0 : 255 * (1 - n) * (1 - e),
					i,
			  ]
	}),
	(w.gl = function(t, r, n, e = 1) {
		return [255 * t, 255 * r, 255 * n, e]
	}),
	(w.rgb = (...t) => t),
	(w.temperature = w.kelvin = w.K = C)
const T = 18,
	U = 0.95047,
	W = 1,
	X = 1.08883,
	Z = 0.206896552,
	tt = 0.12841855,
	rt = 0.008856452
function nt(t, r, n) {
	const [e, i, s] = et(t, r, n)
	return (function(t, r, n) {
		function e(t) {
			return t > rt ? Math.cbrt(t) : t / tt + 4 / 29
		}
		return [116 * e(r / W) - 16, 500 * (e(t / U) - e(r / W)), 200 * (e(r / W) - e(n / X))]
	})(e, i, s)
}
function et(t, r, n) {
	const e = N(t),
		i = N(r),
		s = N(n)
	return [
		0.4124564 * e + 0.3575761 * i + 0.1804375 * s,
		0.2126729 * e + 0.7151522 * i + 0.072175 * s,
		0.0193339 * e + 0.119192 * i + 0.9503041 * s,
	]
}
function it(t, r, n, e = 1) {
	const i = -0.969266 * t + 1.8760108 * r + 0.041556 * n,
		s = 0.0556434 * t - 0.2040259 * r + 1.0572252 * n
	return [S(3.2404542 * t - 1.5371385 * r - 0.4985314 * n), S(i), S(s), e]
}
function st(t, r, n, e) {
	if (("lch" == e && (e = "hcl"), "h" !== e.substr(0, 1))) throw Error()
	const [i, s, o] = t[e](),
		[u, h, c] = r[e]()
	let a
	const l = i + n * (a = u > i && u - i > 180 ? u - (i + 360) : u < i && i - u > 180 ? u + 360 - i : u - i)
	return p[e](l, b(s, h, n), b(o, c, n))
}
function ot(t, r) {
	let n = -1 / 0,
		e = -1
	for (let i = 0; i < t.length; i++) {
		const s = r(t[i])
		s > n && ((n = s), (e = i))
	}
	return e
}
;(w.xyz = it),
	(w.lab = Q),
	(w.hsi = function(t, r, e, i = 1) {
		let s,
			o,
			u,
			h = t * f
		return (
			h < (2 * c) / 3
				? (o = 1 - ((u = (1 - r) / 3) + (s = (1 + (r * n(h)) / n(c / 3 - h)) / 3)))
				: h < (4 * c) / 3
					? (u = 1 - ((s = (1 - r) / 3) + (o = (1 + (r * n((h -= (2 * c) / 3))) / n(c / 3 - h)) / 3)))
					: (s = 1 - ((o = (1 - r) / 3) + (u = (1 + (r * n((h -= (4 * c) / 3))) / n(c / 3 - h)) / 3))),
			[3 * e * s * 255, 3 * e * o * 255, 3 * e * u * 255, i]
		)
	}),
	["hsv", "hsl", "hsi", "hcl", "lch", "hcg"].forEach(t => (y[t] = st))
