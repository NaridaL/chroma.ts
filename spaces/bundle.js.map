{"version":3,"file":"bundle.js","sources":["../../nla/ts3dutils/node_modules/tosource/tosource.js","../../javasetmap.ts/src/JavaMap.ts","../../nla/ts3dutils/src/Vector.ts","../../nla/ts3dutils/src/Matrix.ts","../../nla/ts3dutils/src/NLA.ts","../../nla/ts3dutils/src/V3.ts","../../nla/ts3dutils/src/Transformable.ts","../../nla/ts3dutils/src/M4.ts","../../nla/ts3dutils/src/toSource.ts","../../nla/ts3dutils/src/AABB.ts","../node_modules/tslib/tslib.es6.js","../../nla/tsgl/node_modules/tslib/tslib.es6.js","../src/index.ts","../../nla/tsgl/src/Buffer.ts","../../nla/tsgl/src/Mesh.ts","../../nla/tsgl/src/Shader.ts","../../nla/tsgl/src/Texture.ts","../../nla/tsgl/src/KhronosGroupWebGLDebug.ts","../../nla/tsgl/src/shaders/posCoordVS.glslx","../../nla/tsgl/src/shaders/sdfRenderFS.glslx","../../nla/tsgl/src/TSGLContext.ts","../../nla/tsgl/src/shaders/posVS.glslx","../node_modules/lodash.memoize/index.js","../../nla/tsgl/src/shaders/colorFS.glslx","interpolationVS.glslx","../../nla/tsgl/src/shaders/varyingColorFS.glslx","colorSpaces.tsx","../ntc2.js","SpacesCanvas.tsx","../node_modules/classnames/index.js","Picker.tsx","../src/colorsExtended.js","App.tsx","index.ts"],"sourcesContent":["/* toSource by Marcello Bastea-Forte - zlib license */\nmodule.exports = function (object, filter, indent, startingIndent) {\n  var seen = []\n  return walk(object, filter, indent === undefined ? '  ' : (indent || ''), startingIndent || '', seen)\n\n  function walk (object, filter, indent, currentIndent, seen) {\n    var nextIndent = currentIndent + indent\n    object = filter ? filter(object) : object\n\n    switch (typeof object) {\n      case 'string':\n        return JSON.stringify(object)\n      case 'boolean':\n      case 'number':\n      case 'undefined':\n        return '' + object\n      case 'function':\n        return object.toString()\n    }\n\n    if (object === null) {\n      return 'null'\n    }\n    if (object instanceof RegExp) {\n      return stringifyRegExp(object)\n    }\n    if (object instanceof Date) {\n      return 'new Date(' + object.getTime() + ')'\n    }\n\n    var seenIndex = seen.indexOf(object) + 1\n    if (seenIndex > 0) {\n      return '{$circularReference:' + seenIndex + '}'\n    }\n    seen.push(object)\n\n    function join (elements) {\n      return indent.slice(1) + elements.join(',' + (indent && '\\n') + nextIndent) + (indent ? ' ' : '')\n    }\n\n    if (Array.isArray(object)) {\n      return '[' + join(object.map(function (element) {\n        return walk(element, filter, indent, nextIndent, seen.slice())\n      })) + ']'\n    }\n    var keys = Object.keys(object)\n    return keys.length ? '{' + join(keys.map(function (key) {\n      return (legalKey(key) ? key : JSON.stringify(key)) + ':' + walk(object[key], filter, indent, nextIndent, seen.slice())\n    })) + '}' : '{}'\n  }\n}\n\nvar KEYWORD_REGEXP = /^(abstract|boolean|break|byte|case|catch|char|class|const|continue|debugger|default|delete|do|double|else|enum|export|extends|false|final|finally|float|for|function|goto|if|implements|import|in|instanceof|int|interface|long|native|new|null|package|private|protected|public|return|short|static|super|switch|synchronized|this|throw|throws|transient|true|try|typeof|undefined|var|void|volatile|while|with)$/\n\nfunction legalKey (string) {\n  return /^[a-z_$][0-9a-z_$]*$/gi.test(string) && !KEYWORD_REGEXP.test(string)\n}\n\n// Node.js 0.10 doesn't escape slashes in re.toString() or re.source\n// when they were not escaped initially.\n// Here we check if the workaround is needed once and for all,\n// then apply it only for non-escaped slashes.\nvar isRegExpEscaped = (new RegExp('/')).source === '\\\\/'\n\nfunction stringifyRegExp (re) {\n  if (isRegExpEscaped) {\n    return re.toString()\n  }\n  var source = re.source.replace(/\\//g, function (found, offset, str) {\n    if (offset === 0 || str[offset - 1] !== '\\\\') {\n      return '\\\\/'\n    }\n    return '/'\n  })\n  var flags = (re.global && 'g' || '') + (re.ignoreCase && 'i' || '') + (re.multiline && 'm' || '')\n  return '/' + source + '/' + flags\n}\n","import {Equalable, int} from './Equalable'\n\n/**\n * Java style map.\n */\nexport class JavaMap<K extends Equalable & {hashCodes?(): int[], like?(x: any): boolean }, V> implements Map<K, V> {\n    [Symbol.toStringTag]: 'Map' = 'Map'\n\n    toString() {\n        return '{' + Array.from(this.entries2()).map(({key, value}) => key + ':' + value).join(', ') + '}'\n    }\n\n    forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                callbackfn.call(thisArg, value, key, this)\n            }\n        }\n    }\n\n    * keys(): IterableIterator<K> {\n        for (const bucket of this._map.values()) {\n            for (const {key} of bucket) {\n                yield key\n            }\n        }\n    }\n\n    * values(): IterableIterator<V> {\n        for (const bucket of this._map.values()) {\n            for (const {value} of bucket) {\n                yield value\n            }\n        }\n    }\n\n    protected _map: Map<int, { key: K, value: V }[]>\n    protected _size: int\n\n    constructor() {\n        this._map = new Map()\n        this._size = 0\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    set(key: K, value: V): this {\n        this.set2(key, value)\n        return this\n    }\n\n    /**\n     * Like {@link #set} except it returns true if key was new and false if the value was only updated.\n     *\n     */\n    set2(key: K, val: V): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        if (bucket) {\n            const pairIndex = bucket.findIndex(pair => pair.key.equals(key))\n            if (-1 == pairIndex) {\n                bucket.push({key: key, value: val})\n            } else {\n                bucket[pairIndex].value = val\n                return false\n            }\n        } else {\n            this._map.set(hashCode, [{key: key, value: val}])\n        }\n        this._size++\n        return true\n    }\n\n    has(key: K): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        return undefined !== bucket && bucket.some(pair => pair.key.equals(key))\n    }\n\n    get(key: K): V | undefined {\n        const\n                hashCode = key.hashCode(),\n                bucket = this._map.get(hashCode),\n                pair = bucket && bucket.find(pair => pair.key.equals(key))\n        return pair && pair.value\n    }\n\n    getLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            const canonVal = bucket && bucket.find(x => x.key.like!(key))\n            if (canonVal) return canonVal\n        }\n    }\n\n    setLike(key: K, val: V) {\n        return !this.getLike(key) && this.set(key, val)\n    }\n\n    'delete'(key: K) {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        if (bucket) {\n            const index = bucket.findIndex(x => x.key.equals(key))\n            if (-1 != index) {\n                if (1 == bucket.length) {\n                    this._map.delete(hashCode)\n                } else {\n                    bucket.splice(index, 1)\n                }\n                this._size--\n                return true\n            }\n        }\n        return false\n    }\n\n    deleteLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            if (bucket) {\n                const index = bucket.findIndex(x => x.key.like!(key))\n                if (-1 != index) {\n                    const deleted = bucket[index]\n                    if (1 == bucket.length) {\n                        this._map.delete(hashCode)\n                    } else {\n                        bucket.splice(index, 1)\n                    }\n                    this._size--\n                    return deleted\n                }\n            }\n        }\n    }\n\n    * entries2(): IterableIterator<{ key: K, value: V }> {\n        for (const bucket of this._map.values()) {\n            yield* bucket\n        }\n    }\n\n    * entries(): IterableIterator<[K, V]> {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                yield [key, value]\n            }\n        }\n    }\n\n    clear() {\n        this._map.clear()\n        this._size = 0\n    }\n\n    get size() {\n        return this._size\n    }\n}\n","import { Matrix } from './Matrix'\nimport { ArrayLikeWriteAble, assert, assertInst, assertNumbers, callsce, clamp, eq, eq0, FloatArray, int } from './NLA'\nimport { V3 } from './V3'\n\nexport class Vector {\n\tconstructor(readonly v: Float64Array) {\n\t\tassertInst(Float64Array, v)\n\t}\n\n\tstatic fromFunction(dims: int, f: (dim: int) => number): Vector {\n\t\tassertNumbers(dims)\n\t\tconst e = new Float64Array(dims)\n\t\tlet i = dims\n\t\twhile (i--) {\n\t\t\te[i] = f(i)\n\t\t}\n\t\treturn new Vector(e)\n\t}\n\n\tstatic random(dims: int): Vector {\n\t\treturn Vector.fromFunction(dims, i => Math.random())\n\t}\n\n\tstatic from(f64a: Float64Array): Vector\n\tstatic from(...args: number[]): Vector\n\tstatic from(...args: any[]): Vector {\n\t\tassert(\n\t\t\targs[0] instanceof Float64Array || args.every(a => 'number' == typeof a),\n\t\t\t'args[0] instanceof Float64Array || args.every(a => \"number\" == typeof a)',\n\t\t)\n\t\treturn new Vector(args[0] instanceof Float64Array ? args[0] : Float64Array.from(args))\n\t}\n\n\tstatic Zero(dims: int): Vector {\n\t\tassertNumbers(dims)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tstatic Unit(dims: int, dir: int): Vector {\n\t\tassertNumbers(dims, dir)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = +(i == dir) // +true === 1, +false === 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\t/**\n\t * Pack an array of Vectors into an array of numbers (Float32Array by default).\n\t *\n\t * @param vectors source array\n\t * @param dest destination array. If provided, must be large enough to fit v3count items.\n\t * @param srcStart starting index in source array\n\t * @param destStart starting index in destination array\n\t * @param vectorCount Number of V3s to copy.\n\t * @returns Packed array.\n\t */\n\tstatic pack<T extends FloatArray = Float32Array>(\n\t\tvectors: ReadonlyArray<Vector>,\n\t\tdest?: T,\n\t\tsrcStart: number = 0,\n\t\tdestStart: number = 0,\n\t\tvectorCount: number = vectors.length - srcStart,\n\t): T {\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\n\t\tconst dim = vectors[0].dim()\n\t\tconst result = dest || (new Float32Array(dim * vectorCount) as any) // TODO\n\t\tassert(\n\t\t\tresult.length - destStart >= vectorCount * dim,\n\t\t\t'dest.length - destStart >= v3count * 3',\n\t\t\tresult.length,\n\t\t\tdestStart,\n\t\t\tvectorCount * 3,\n\t\t)\n\n\t\tlet i = vectorCount,\n\t\t\tsrcIndex = srcStart,\n\t\t\tdestIndex = destStart\n\t\twhile (i--) {\n\t\t\tconst v = vectors[srcIndex++]\n\t\t\tfor (let d = 0; d < dim; d++) {\n\t\t\t\tresult[destIndex++] = v.v[d]\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic lerp(a: Vector, b: Vector, t: number) {\n\t\tassert(a.dim() == b.dim())\n\t\tconst n = new Float64Array(a.v.length)\n\t\tlet i = a.v.length\n\t\twhile (i--) {\n\t\t\tn[i] = a.v[i] * (1 - t) + b.v[i] * t\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tstatic add(...vs: Vector[]): Vector {\n\t\tconst dim = vs[0].v.length\n\t\tconst result = new Float64Array(dim)\n\t\tlet i = vs.length\n\t\twhile (i--) {\n\t\t\tlet d = dim\n\t\t\twhile (d--) {\n\t\t\t\tresult[d] += vs[i].v[d]\n\t\t\t}\n\t\t}\n\t\treturn new Vector(result)\n\t}\n\n\t/**\n\t * Create a new 4D Vector from a V3 and a weight.\n\t * @param v3\n\t * @param weight\n\t */\n\tstatic fromV3AndWeight(v3: V3, weight: number) {\n\t\treturn new Vector(new Float64Array([v3.x * weight, v3.y * weight, v3.z * weight, weight]))\n\t}\n\n\tget x() {\n\t\treturn this.v[0]\n\t}\n\tget y() {\n\t\treturn this.v[1]\n\t}\n\tget z() {\n\t\treturn this.v[2]\n\t}\n\tget w() {\n\t\treturn this.v[3]\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.v[Symbol.iterator]()\n\t}\n\n\tdim(): int {\n\t\treturn this.v.length\n\t}\n\n\te(index: int): number {\n\t\tif (0 > index || index >= this.v.length) {\n\t\t\tthrow new Error('array index out of bounds')\n\t\t}\n\t\treturn this.v[index]\n\t}\n\n\tplus(vector: Vector): Vector {\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] + v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tminus(vector: Vector): Vector {\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] - v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\ttimes(factor: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * factor\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdiv(val: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] / val\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdot(vector: Vector): number {\n\t\tassert(this.dim == vector.dim, 'passed vector must have the same dim')\n\t\tlet result = 0\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * v[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tcross(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst n = new Float64Array(3)\n\t\tn[0] = this.v[1] * vector.v[2] - this.v[2] * vector.v[1]\n\t\tn[1] = this.v[2] * vector.v[0] - this.v[0] * vector.v[2]\n\t\tn[2] = this.v[0] * vector.v[1] - this.v[1] * vector.v[0]\n\n\t\treturn new Vector(n)\n\t}\n\n\tschur(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj === this) return true\n\t\tif (obj.constructor !== Vector) return false\n\t\tif (this.v.length != obj.v.length) return false\n\t\tlet i = this.v.length\n\t\twhile (i--) {\n\t\t\tif (this.v[i] !== obj.v[i]) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tlike(obj: any): boolean {\n\t\tif (obj === this) return true\n\t\tif (obj.constructor !== Vector) return false\n\t\tif (this.v.length != obj.v.length) return false\n\t\tlet i = this.v.length\n\t\twhile (i--) {\n\t\t\tif (!eq(this.v[i], obj.v[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tmap(f: (el: number, dim: number) => number): Vector {\n\t\treturn new Vector(this.v.map(f))\n\t}\n\n\ttoString(roundFunction?: (x: number) => any): string {\n\t\troundFunction = roundFunction || (v => +v.toFixed(6))\n\t\treturn 'Vector(' + this.v.map(roundFunction).join(', ') + ')'\n\t}\n\n\ttoSource() {\n\t\treturn callsce('VV', ...this.v)\n\t}\n\n\tangleTo(vector: Vector): number {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn Math.acos(clamp(this.dot(vector) / this.length() / vector.length(), -1, 1))\n\t}\n\n\t/**\n\t * Returns true iff this is parallel to vector, using eq\n\t * Throw a DebugError\n\t * - if vector is not a Vector or\n\t * - if this has a length of 0 or\n\t * - if vector has a length of 0\n\t */\n\tisParallelTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\n\t\t// in both cases the vectors are paralle, so check if abs(a . b) == |a|*|b|\n\t\treturn eq(Math.sqrt(this.lengthSquared() * vector.lengthSquared()), Math.abs(this.dot(vector)))\n\t}\n\n\tisPerpendicularTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn eq0(this.dot(vector))\n\t}\n\n\t/**\n\t * Returns true iff the length of this vector is 0, as returned by NLA.isZero.\n\t * Definition: Vector.prototype.isZero = () => NLA.isZero(this.length())\n\t */\n\tisZero(): boolean {\n\t\treturn eq0(this.length())\n\t}\n\n\t/*/ Returns the length of this Vector, i.e. the euclidian norm.*/\n\tlength(): number {\n\t\treturn Math.hypot.apply(undefined, this.v)\n\t\t//return Math.sqrt(this.lengthSquared())\n\t}\n\n\tlengthSquared(): number {\n\t\tlet result = 0\n\t\tconst u = this.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * u[i]\n\t\t}\n\t\treturn result\n\t}\n\n\t/**\n\t * Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\n\t */\n\tunit(): Vector {\n\t\tconst length = this.length()\n\t\tif (eq0(length)) {\n\t\t\tthrow new Error('cannot normalize zero vector')\n\t\t}\n\t\treturn this.div(this.length())\n\t}\n\n\t/**\n\t * Documentation stub. You want {@link unit}\n\t */\n\tnormalized(): V3 {\n\t\tthrow new Error('documentation stub. use .unit()')\n\t}\n\n\tasRowMatrix(): Matrix {\n\t\treturn new Matrix(this.v.length, 1, this.v)\n\t}\n\n\tasColMatrix(): Matrix {\n\t\treturn new Matrix(1, this.v.length, this.v)\n\t}\n\n\t/**\n\t * Returns a new Vector which is the projection of this vector onto the passed vector.\n\t * @example\n\t * VV(3, 4).projectedOn(VV(1, 0)) // returns VV(3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(2, 0)) // returns VV(3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(-1, 0)) // returns VV(-3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(0, 1)) // returns VV(0, 4)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(1, 1)) // returns\n\t */\n\tprojectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn b.times(this.dot(b) / b.dot(b))\n\t}\n\n\trejectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\n\t}\n\n\tto(a: Vector): Vector {\n\t\treturn a.minus(this)\n\t}\n\n\t/**\n\t * Returns true iff the length() of this vector is equal to 'length', using equals\n\t * E.g. NLA.V(3, 4).hasLength(5) === true\n\t * NLA.V(1, 1).hasLength(1) === false\n\t */\n\thasLength(length: number): boolean {\n\t\tassertNumbers(length)\n\t\treturn eq(length, this.length())\n\t}\n\n\tV3(): V3 {\n\t\t//assert(this.dim() == 3)\n\t\treturn new V3(this.v[0], this.v[1], this.v[2])\n\t}\n\n\t/**\n\t * Project into 3 dimensions.\n\t */\n\tp3(): V3 {\n\t\tassert(this.v.length == 4)\n\t\tconst w = this.v[3]\n\t\treturn new V3(this.v[0] / w, this.v[1] / w, this.v[2] / w)\n\t}\n\n\ttransposed() {\n\t\treturn new Matrix(this.v.length, 1, this.v)\n\t}\n}\n\nexport function VV(...values: number[]) {\n\treturn new Vector(new Float64Array(values))\n}\n\nexport function vArrGet(vArr: ArrayLike<number>, dim: int, i: int) {\n\tassert(vArr.length % dim == 0)\n\treturn new Vector(Float64Array.prototype.slice.call(vArr, i * dim, (i + 1) * dim))\n}\n\nexport function vArrSet(vArr: ArrayLikeWriteAble<number>, i: int, vector: Vector) {\n\tconst dim = vector.dim()\n\tassert(vArr.length % dim == 0)\n\tlet d = dim\n\twhile (d--) {\n\t\tvArr[i * dim + d] = vector.v[d]\n\t}\n}\n","import { Equalable } from 'javasetmap.ts'\n\nimport {\n\tarrayCopy,\n\tarrayCopyBlocks,\n\tarrayCopyStep,\n\tarrayFromFunction,\n\tarraySwap,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertInts,\n\tassertNumbers,\n\tassertVectors,\n\teq,\n\teq0,\n\tFloatArray,\n\tfloatHashCode,\n\tint,\n\tNLA_PRECISION,\n} from './NLA'\nimport { Vector } from './Vector'\n\nexport class Matrix implements Equalable {\n\tconstructor(public width: int, public height: int, public readonly m: Float64Array) {\n\t\tassertInts(width, height)\n\t\tassertf(() => 0 < width)\n\t\tassertf(() => 0 < height)\n\t\tassert(width * height == m.length, 'width * height == m.length', width, height, m.length)\n\t}\n\n\tstatic random(width: int, height: int): Matrix {\n\t\treturn Matrix.fromFunction(width, height, () => Math.random())\n\t}\n\n\tstatic fromFunction(width: int, height: int, f: (row: int, col: int, elIndex: int) => number): Matrix {\n\t\tconst m = new Float64Array(height * width)\n\t\tlet elIndex = height * width\n\t\twhile (elIndex--) {\n\t\t\tm[elIndex] = f(Math.floor(elIndex / width), elIndex % width, elIndex)\n\t\t}\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tstatic identityN(dim: int): Matrix {\n\t\tassertInts(dim)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Arrays are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= dim + 1\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\t/**\n\t * Create new dim x dim matrix equal to an identity matrix with rows/colums i and k swapped. Note that i and k\n\t * are 0-indexed.\n\t */\n\tstatic permutation(dim: int, i: int, k: int): Matrix {\n\t\tassertInts(dim, i, k)\n\t\tassertf(() => 0 <= i && i < dim)\n\t\tassertf(() => 0 <= k && k < dim)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Array are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= dim + 1\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\tm[i * dim + i] = 0\n\t\tm[k * dim + k] = 0\n\t\tm[i * dim + k] = 1\n\t\tm[k * dim + i] = 1\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\tstatic fromRowArrays(...rowArrays: ArrayLike<number>[]): Matrix {\n\t\tif (0 == rowArrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst height = rowArrays.length\n\t\tconst width = rowArrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopy(rowArrays[0], 0, m, 0, width)\n\t\tfor (let rowIndex = 1; rowIndex < height; rowIndex++) {\n\t\t\tif (rowArrays[rowIndex].length != width) {\n\t\t\t\tthrow new Error('all row arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopy(rowArrays[rowIndex], 0, m, rowIndex * width, width)\n\t\t}\n\t\treturn this.new(width, height, m)\n\t}\n\n\tstatic fromColVectors(colVectors: Vector[]): Matrix {\n\t\treturn Matrix.fromColArrays(...colVectors.map(v => v.v))\n\t}\n\n\tstatic forWidthHeight(width: int, height: int): Matrix {\n\t\treturn new Matrix(width, height, new Float64Array(width * height))\n\t}\n\n\tstatic fromColArrays(...colArrays: ArrayLike<number>[]): Matrix {\n\t\tif (0 == colArrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst width = colArrays.length\n\t\tconst height = colArrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopyStep(colArrays[0], 0, 1, m, 0, width, height)\n\t\tfor (let colIndex = 1; colIndex < width; colIndex++) {\n\t\t\tif (colArrays[colIndex].length != height) {\n\t\t\t\tthrow new Error('all col arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopyStep(colArrays[colIndex], 0, 1, m, colIndex, width, height)\n\t\t}\n\t\treturn this.new(width, height, m)\n\t}\n\n\tstatic product(...m4s: Matrix[]): Matrix\n\tstatic product(ms: Matrix[], result?: Matrix): Matrix\n\tstatic product(...args: any[]): Matrix {\n\t\tconst [ms, result]: [Matrix[], Matrix | undefined] = Array.isArray(args[0])\n\t\t\t? [args[0], args[1]]\n\t\t\t: [args, undefined]\n\t\tif (0 == ms.length) throw new Error(\"Can't guess matrix size.\")\n\t\tif (1 == ms.length) return Matrix.copy(ms[0], result)\n\t\treturn Matrix.copy(ms.reduce((a, b) => a.times(b)), result)\n\t}\n\n\t/**\n\t * Numerically calculate all the partial derivatives of f at x0.\n\t *\n\t * @param f\n\t * @param x0\n\t * @param fx0 f(x0), pass it if you have it already\n\t * @param EPSILON\n\t */\n\tstatic jacobi(\n\t\tf: (x: FloatArray) => ArrayLike<number>,\n\t\tx0: FloatArray,\n\t\tfx0: ArrayLike<number> = f(x0),\n\t\tEPSILON: number = 1e-6,\n\t): Matrix {\n\t\tconst jacobi = Matrix.forWidthHeight(x0.length, fx0.length)\n\t\tfor (let colIndex = 0; colIndex < x0.length; colIndex++) {\n\t\t\tx0[colIndex] += EPSILON\n\t\t\tconst fx = f(x0)\n\t\t\tfor (let rowIndex = 0; rowIndex < fx0.length; rowIndex++) {\n\t\t\t\tconst value = (fx[rowIndex] - fx0[rowIndex]) / EPSILON\n\t\t\t\tjacobi.setEl(rowIndex, colIndex, value)\n\t\t\t}\n\t\t\tx0[colIndex] -= EPSILON\n\t\t}\n\t\treturn jacobi\n\t}\n\n\tstatic copy<T extends Matrix>(src: T, result: T = src.new()): T {\n\t\tassertInst(Matrix, src, result)\n\t\tassert(src.width == result.width)\n\t\tassert(src.height == result.height)\n\t\tassert(result != src, 'result != src')\n\t\tconst s = src.m,\n\t\t\td = result.m\n\t\tlet i = s.length\n\t\twhile (i--) {\n\t\t\td[i] = s[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tprotected static new(width: int, height: int, m: Float64Array) {\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tcopy(): this {\n\t\treturn Matrix.copy<this>(this)\n\t}\n\n\te(rowIndex: number, colIndex: number): number {\n\t\tassertInts(rowIndex, colIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\treturn this.m[rowIndex * this.width + colIndex]\n\t}\n\n\tsetEl(rowIndex: number, colIndex: number, val: number): void {\n\t\tassertInts(rowIndex, colIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\tassertNumbers(val)\n\t\tthis.m[rowIndex * this.width + colIndex] = val\n\t}\n\n\tplus(m: this): this {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] + m.m[i]\n\t\treturn r\n\t}\n\n\tminus(m: Matrix): Matrix {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] - m.m[i]\n\t\treturn r\n\t}\n\n\tmulScalar(scalar: number): this {\n\t\tassertNumbers(scalar)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] * scalar\n\t\treturn r\n\t}\n\n\tdivScalar(scalar: number): this {\n\t\tassertNumbers(scalar)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] / scalar\n\t\treturn r\n\t}\n\n\tnew(): this {\n\t\treturn new Matrix(this.width, this.height, new Float64Array(this.width * this.height)) as this\n\t}\n\n\ttoString(f?: (el: number) => string, colNames?: ReadonlyArray<string>, rowNames?: ReadonlyArray<string>): string {\n\t\tf = f || (v => v.toFixed(6))\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\n\t\tassert(!colNames || colNames.length == this.width)\n\t\tassert(!rowNames || rowNames.length == this.height)\n\t\tconst rounded: string[] = Array.from(this.m).map(f)\n\t\tconst rows = arrayFromFunction(this.height, rowIndex =>\n\t\t\trounded.slice(rowIndex * this.width, (rowIndex + 1) * this.width),\n\t\t) // select matrix row\n\t\tif (colNames) {\n\t\t\trows.unshift(Array.from(colNames))\n\t\t}\n\t\tif (rowNames) {\n\t\t\trows.forEach((row, rowIndex) => row.unshift(rowNames[rowIndex - (colNames ? 1 : 0)] || ''))\n\t\t}\n\t\tconst colWidths = arrayFromFunction(this.width, colIndex => rows.map(row => row[colIndex].length).max())\n\t\treturn rows\n\t\t\t.map((row, rowIndex) =>\n\t\t\t\trow\n\t\t\t\t\t.map((x, colIndex) => {\n\t\t\t\t\t\t// pad numbers with spaces to col width\n\t\t\t\t\t\tconst padder =\n\t\t\t\t\t\t\t(rowIndex == 0 && colNames) || (colIndex == 0 && rowNames)\n\t\t\t\t\t\t\t\t? String.prototype.padEnd\n\t\t\t\t\t\t\t\t: String.prototype.padStart\n\t\t\t\t\t\treturn padder.call(x, colWidths[colIndex])\n\t\t\t\t\t})\n\t\t\t\t\t.join('  '),\n\t\t\t)\n\t\t\t.map(x => x + '\\n')\n\t\t\t.join('') // join rows\n\t}\n\n\trow(rowIndex: int): Vector {\n\t\tassertInts(rowIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tconst v = new Float64Array(this.width)\n\t\tarrayCopy(this.m, rowIndex * this.width, v, 0, this.width)\n\t\treturn new Vector(v)\n\t}\n\n\tcol(colIndex: int): Vector {\n\t\tassertInts(colIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\tconst v = new Float64Array(this.height)\n\t\tarrayCopyStep(this.m, colIndex, this.width, v, 0, 1, this.height)\n\t\treturn new Vector(v)\n\t}\n\n\tdim(): { width: int; height: int } {\n\t\treturn { width: this.width, height: this.height }\n\t}\n\n\tdimString(): string {\n\t\treturn this.width + 'x' + this.height\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj.constructor != this.constructor) return false\n\t\tif (this.width != obj.width || this.height != obj.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (this.m[elIndex] != obj.m[elIndex]) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tequalsMatrix(matrix: Matrix, precision: number = NLA_PRECISION): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\tif (this.width != matrix.width || this.height != matrix.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (Math.abs(this.m[elIndex] - matrix.m[elIndex]) >= precision) return false\n\t\t}\n\t\treturn true\n\t}\n\n\thashCode(): int {\n\t\tlet result = 0\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tresult = result * 31 + floatHashCode(this.m[elIndex])\n\t\t}\n\t\treturn result\n\t}\n\n\t// todo rename\n\tisZero(): boolean {\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (!eq0(this.m[elIndex])) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisOrthogonal(): boolean {\n\t\treturn (\n\t\t\tthis.isSquare() &&\n\t\t\tthis.transposed()\n\t\t\t\t.times(this)\n\t\t\t\t.equalsMatrix(Matrix.identityN(this.width))\n\t\t)\n\t}\n\n\t/**\n\t * Returns L, U, P such that L * U == P * this\n\t */\n\tluDecomposition(): { L: Matrix; U: Matrix; P: Matrix } {\n\t\tassertf(() => this.isSquare(), this.dim().toSource())\n\t\tconst dim = this.width\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(dim, row => new Float64Array(dim))\n\t\tconst pRowArrays = Matrix.identityN(dim).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < dim; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0,\n\t\t\t\tpivotRowIndex = -1,\n\t\t\t\tnumberOfNonZeroRows = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < dim; rowIndex++) {\n\t\t\t\tconst el = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[colIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < dim; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < dim; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays(...lRowArrays),\n\t\t\tU: Matrix.fromRowArrays(...uRowArrays),\n\t\t\tP: Matrix.fromRowArrays(...pRowArrays),\n\t\t}\n\t}\n\n\tgauss(): { L: Matrix; U: Matrix; P: Matrix } {\n\t\tconst width = this.width,\n\t\t\theight = this.height\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(height, row => new Float64Array(width))\n\t\tconst pRowArrays = Matrix.identityN(height).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < width; colIndex++) {\n\t\t\t// console.log('currentRowIndex', currentRowIndex)\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0,\n\t\t\t\tpivotRowIndex = -1,\n\t\t\t\tnumberOfNonZeroRows = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < height; rowIndex++) {\n\t\t\t\tconst el = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[currentRowIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < height; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < width; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays(...lRowArrays),\n\t\t\tU: Matrix.fromRowArrays(...uRowArrays),\n\t\t\tP: Matrix.fromRowArrays(...pRowArrays),\n\t\t}\n\t}\n\n\tqrDecompositionGivensRotation(): { Q: Matrix; R: Matrix } {\n\t\t// function sigma(c: number, s: number) {\n\t\t// \tif (0 == c) {\n\t\t// \t\treturn 1\n\t\t// \t}\n\t\t// \tif (Math.abs(s) < Math.abs(c)) {\n\t\t// \t\treturn 0.5 * Math.sign(c) * s\n\t\t// \t}\n\t\t// \treturn (2 * Math.sign(s)) / c\n\t\t// }\n\t\tconst R = this.copy()\n\n\t\tfunction matrixForCS(dim: int, i: int, k: int, c: number, s: number) {\n\t\t\tconst m = Matrix.identityN(dim)\n\t\t\tm.setEl(i, i, c)\n\t\t\tm.setEl(k, k, c)\n\t\t\tm.setEl(i, k, s)\n\t\t\tm.setEl(k, i, -s)\n\t\t\treturn m\n\t\t}\n\n\t\tlet qTransposed = Matrix.identityN(this.height)\n\t\tfor (let colIndex = 0; colIndex < this.width; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tfor (let rowIndex = colIndex + 1; rowIndex < this.height; rowIndex++) {\n\t\t\t\t//console.log('row ', rowIndex, 'col ', colIndex)\n\t\t\t\tconst xi = R.e(colIndex, colIndex)\n\t\t\t\tconst xk = R.e(rowIndex, colIndex)\n\t\t\t\tif (xk == 0) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tconst r = Math.hypot(xi, xk)\n\t\t\t\tconst c = xi / r\n\t\t\t\tconst s = xk / r\n\n\t\t\t\t// apply transformation on every column:\n\t\t\t\tfor (let col2 = colIndex; col2 < this.width; col2++) {\n\t\t\t\t\tconst x1 = R.e(colIndex, col2) * c + R.e(rowIndex, col2) * s\n\t\t\t\t\tconst x2 = R.e(rowIndex, col2) * c - R.e(colIndex, col2) * s\n\t\t\t\t\tR.setEl(colIndex, col2, x1)\n\t\t\t\t\tR.setEl(rowIndex, col2, x2)\n\t\t\t\t}\n\t\t\t\t//console.log('r ', r, 'c ', c, 's ', s, 'sigma', sigma(c, s))\n\t\t\t\t//console.log(this.toString(),'cs\\n', matrixForCS(this.height, colIndex, rowIndex, c, s).toString())\n\t\t\t\tqTransposed = matrixForCS(this.height, colIndex, rowIndex, c, s).times(qTransposed)\n\t\t\t}\n\t\t}\n\t\t//console.log(qTransposed.transposed().toString(), this.toString(),\n\t\t// qTransposed.transposed().times(this).toString())\n\t\treturn { Q: qTransposed.transposed(), R }\n\t}\n\n\tisPermutation(): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tif (this.m.some(value => !eq0(value) && !eq(1, value))) return false\n\n\t\tconst rows = this.asRowArrays(Array)\n\t\tif (rows.some(row => (row as number[]).filter(value => eq(1, value)).length != 1)) return false\n\n\t\tconst cols = this.asColArrays(Array)\n\t\tif (cols.some(col => (col as number[]).filter(value => eq(1, value)).length != 1)) return false\n\n\t\treturn true\n\t}\n\n\tisDiagonal(precision?: number): boolean {\n\t\tlet i = this.m.length\n\t\twhile (i--) {\n\t\t\tif (0 !== i % (this.width + 1) && !eq0(this.m[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tisIdentity(precision?: number): boolean {\n\t\treturn this.isLowerUnitriangular(precision) && this.isUpperTriangular(precision)\n\t}\n\n\tisUpperTriangular(precision: number = NLA_PRECISION) {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 1; rowIndex < this.height; rowIndex++) {\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex], precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisSymmetric(precision = NLA_PRECISION) {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\tconst a = this.m[rowIndex * this.width + colIndex]\n\t\t\t\tconst b = this.m[colIndex * this.width + rowIndex]\n\t\t\t\tif (!eq(a, b, precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\t/**\n\t * Returns x, so that this * x = b\n\t * More efficient than calculating the inverse for few (~ <= this.height) values\n\t */\n\tsolveLinearSystem(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\tconst { L, U, P } = this.luDecomposition()\n\t\tconst y = L.solveForwards(P.timesVector(b))\n\t\tconst x = U.solveBackwards(y)\n\t\treturn x\n\t}\n\n\tisLowerUnitriangular(precision: number = NLA_PRECISION): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex; colIndex < this.width; colIndex++) {\n\t\t\t\tconst el = this.m[rowIndex * this.width + colIndex]\n\t\t\t\tif (rowIndex == colIndex ? !eq(1, el, precision) : !eq0(el, precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisLowerTriangular(precision: number = NLA_PRECISION): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex], precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tsolveBackwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassert(this.isUpperTriangular(), 'this.isUpperTriangular()\\n' + this.str)\n\t\tconst v = new Float64Array(this.width)\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tsolveBackwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveBackwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveForwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassertf(() => this.isLowerTriangular(), this.toString())\n\t\tconst v = new Float64Array(this.width)\n\t\tfor (let rowIndex = 0; rowIndex < this.height; rowIndex++) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\t/**\n\t * Calculates rank of matrix.\n\t * Number of linearly independant row/column vectors.\n\t * Is equal to the unmber of dimensions the image of the affine transformation represented this matrix has.\n\t */\n\trank(): int {\n\t\tconst U = this.gauss().U\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex-- && U.row(rowIndex).isZero()) {}\n\t\treturn rowIndex + 1\n\t}\n\n\trowsIndependent(): boolean {\n\t\treturn this.height == this.rank()\n\t}\n\n\tcolsIndependent(): boolean {\n\t\treturn this.width == this.rank()\n\t}\n\n\tasRowArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T = Float64Array as any): T[] {\n\t\treturn arrayFromFunction(this.height, rowIndex => this.rowArray(rowIndex, arrayConstructor))\n\t}\n\n\tasColArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T = Float64Array as any): T[] {\n\t\treturn arrayFromFunction(this.width, colIndex => this.colArray(colIndex, arrayConstructor))\n\t}\n\n\trowArray<T extends FloatArray>(rowIndex: int, arrayConstructor: new (length: int) => T = Float64Array as any): T {\n\t\tconst result = new arrayConstructor(this.width)\n\t\treturn arrayCopy(this.m, rowIndex * this.width, result, 0, this.width)\n\t\treturn result\n\t}\n\n\tcolArray<T extends FloatArray>(colIndex: int, arrayConstructor: new (length: int) => T = Float64Array as any): T {\n\t\tconst result = new arrayConstructor(this.width)\n\t\tarrayCopyStep(this.m, colIndex, this.height, result, 0, 1, this.height)\n\t\treturn result\n\t}\n\n\tsubMatrix(firstColIndex: int, subWidth: int, firstRowIndex: int, subHeight: int): Matrix {\n\t\tassert(0 < firstColIndex && 0 < subWidth && 0 < firstRowIndex && 0 < subHeight)\n\t\tassert(firstColIndex + subWidth <= this.width && firstRowIndex + subHeight <= this.height)\n\t\tconst m = new Float64Array(subWidth * subHeight)\n\t\tarrayCopyBlocks(this.m, firstColIndex, this.width, m, 0, subWidth, subHeight, subWidth)\n\t\treturn new Matrix(subWidth, subHeight, m)\n\t}\n\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): Matrix {\n\t\treturn new Matrix(this.width, this.height, this.m.map(fn))\n\t}\n\n\tdimEquals(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.width && this.height == matrix.height\n\t}\n\n\tinversed(): Matrix {\n\t\tif (this.isSquare()) {\n\t\t\tif (2 == this.width) return this.inversed2()\n\t\t\tif (3 == this.width) return this.inversed3()\n\t\t\tif (4 == this.width) return this.inversed4()\n\t\t}\n\t\tconst { L, U, P } = this.luDecomposition()\n\t\tconst y = L.solveForwardsMatrix(P)\n\t\tconst inverse = U.solveBackwardsMatrix(y)\n\t\treturn inverse\n\t}\n\n\tinversed2(): Matrix {\n\t\tassertf(() => 2 == this.width && 2 == this.height)\n\t\tconst result = Matrix.forWidthHeight(2, 2),\n\t\t\tm = this.m,\n\t\t\tr = result.m\n\n\t\tconst det = m[0] * m[3] - m[1] * r[2]\n\n\t\tr[0] = m[3] / det\n\t\tr[1] = -m[2] / det\n\n\t\tr[2] = -m[1] / det\n\t\tr[3] = m[0] / det\n\n\t\treturn result\n\t}\n\n\tinversed3(result = Matrix.forWidthHeight(3, 3)): Matrix {\n\t\tassertInst(Matrix, result)\n\t\tassertf(() => 3 == this.width && 3 == this.height)\n\t\tassertf(() => 3 == result.width && 3 == result.height)\n\t\tassert(() => this != result)\n\t\tconst m = this.m,\n\t\t\tr = result.m\n\n\t\tr[0] = m[4] * m[8] - m[5] * m[7]\n\t\tr[1] = -m[1] * m[8] + m[2] * m[7]\n\t\tr[2] = m[1] * m[5] - m[2] * m[4]\n\n\t\tr[3] = -m[3] * m[8] + m[5] * m[6]\n\t\tr[4] = m[0] * m[8] - m[2] * m[6]\n\t\tr[5] = -m[0] * m[5] + m[2] * m[3]\n\n\t\tr[6] = m[3] * m[7] - m[4] * m[6]\n\t\tr[7] = -m[0] * m[7] + m[1] * m[6]\n\t\tr[8] = m[0] * m[4] - m[1] * m[3]\n\n\t\tconst det = m[0] * r[0] + m[1] * r[3] + m[2] * r[6]\n\t\tlet i = 9\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\n\t\treturn result\n\t}\n\n\t// prettier-ignore\n\tinversed4(result: Matrix = Matrix.forWidthHeight(4, 4)): Matrix {\n\t\tassertInst(Matrix, result)\n\t\tassertf(() => 4 == this.width && 4 == this.height)\n\t\tassertf(() => 4 == result.width && 4 == result.height)\n\t\tassert(() => this != result)\n\t\tconst m = this.m,\n\t\t\tr = result.m\n\n\t\t// first compute transposed cofactor matrix:\n\t\t// cofactor of an element is the determinant of the 3x3 matrix gained by removing the column and row belonging\n\t\t// to the element\n\t\tr[0] = m[5] * m[10] * m[15] - m[5] * m[14] * m[11] - m[6] * m[9] * m[15]\n\t\t\t+ m[6] * m[13] * m[11] + m[7] * m[9] * m[14] - m[7] * m[13] * m[10]\n\t\tr[1] = -m[1] * m[10] * m[15] + m[1] * m[14] * m[11] + m[2] * m[9] * m[15]\n\t\t\t- m[2] * m[13] * m[11] - m[3] * m[9] * m[14] + m[3] * m[13] * m[10]\n\t\tr[2] = m[1] * m[6] * m[15] - m[1] * m[14] * m[7] - m[2] * m[5] * m[15]\n\t\t\t+ m[2] * m[13] * m[7] + m[3] * m[5] * m[14] - m[3] * m[13] * m[6]\n\t\tr[3] = -m[1] * m[6] * m[11] + m[1] * m[10] * m[7] + m[2] * m[5] * m[11]\n\t\t\t- m[2] * m[9] * m[7] - m[3] * m[5] * m[10] + m[3] * m[9] * m[6]\n\n\n\t\tr[4] = -m[4] * m[10] * m[15] + m[4] * m[14] * m[11] + m[6] * m[8] * m[15]\n\t\t\t- m[6] * m[12] * m[11] - m[7] * m[8] * m[14] + m[7] * m[12] * m[10]\n\t\tr[5] = m[0] * m[10] * m[15] - m[0] * m[14] * m[11] - m[2] * m[8] * m[15]\n\t\t\t+ m[2] * m[12] * m[11] + m[3] * m[8] * m[14] - m[3] * m[12] * m[10]\n\t\tr[6] = -m[0] * m[6] * m[15] + m[0] * m[14] * m[7] + m[2] * m[4] * m[15]\n\t\t\t- m[2] * m[12] * m[7] - m[3] * m[4] * m[14] + m[3] * m[12] * m[6]\n\t\tr[7] = m[0] * m[6] * m[11] - m[0] * m[10] * m[7] - m[2] * m[4] * m[11]\n\t\t\t+ m[2] * m[8] * m[7] + m[3] * m[4] * m[10] - m[3] * m[8] * m[6]\n\n\n\t\tr[8] = m[4] * m[9] * m[15] - m[4] * m[13] * m[11] - m[5] * m[8] * m[15]\n\t\t\t+ m[5] * m[12] * m[11] + m[7] * m[8] * m[13] - m[7] * m[12] * m[9]\n\t\tr[9] = -m[0] * m[9] * m[15] + m[0] * m[13] * m[11] + m[1] * m[8] * m[15]\n\t\t\t- m[1] * m[12] * m[11] - m[3] * m[8] * m[13] + m[3] * m[12] * m[9]\n\t\tr[10] = m[0] * m[5] * m[15] - m[0] * m[13] * m[7] - m[1] * m[4] * m[15]\n\t\t\t+ m[1] * m[12] * m[7] + m[3] * m[4] * m[13] - m[3] * m[12] * m[5]\n\t\tr[11] = -m[0] * m[5] * m[11] + m[0] * m[9] * m[7] + m[1] * m[4] * m[11]\n\t\t\t- m[1] * m[8] * m[7] - m[3] * m[4] * m[9] + m[3] * m[8] * m[5]\n\n\n\t\tr[12] = -m[4] * m[9] * m[14] + m[4] * m[13] * m[10] + m[5] * m[8] * m[14]\n\t\t\t- m[5] * m[12] * m[10] - m[6] * m[8] * m[13] + m[6] * m[12] * m[9]\n\t\tr[13] = m[0] * m[9] * m[14] - m[0] * m[13] * m[10] - m[1] * m[8] * m[14]\n\t\t\t+ m[1] * m[12] * m[10] + m[2] * m[8] * m[13] - m[2] * m[12] * m[9]\n\t\tr[14] = -m[0] * m[5] * m[14] + m[0] * m[13] * m[6] + m[1] * m[4] * m[14]\n\t\t\t- m[1] * m[12] * m[6] - m[2] * m[4] * m[13] + m[2] * m[12] * m[5]\n\t\tr[15] = m[0] * m[5] * m[10] - m[0] * m[9] * m[6] - m[1] * m[4] * m[10]\n\t\t\t+ m[1] * m[8] * m[6] + m[2] * m[4] * m[9] - m[2] * m[8] * m[5]\n\n\t\t// calculate determinant using laplace expansion (cf https://en.wikipedia.org/wiki/Laplace_expansion),\n\t\t// as we already have the cofactors. We multiply a column by a row as the cofactor matrix is transposed.\n\t\tconst det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12]\n\t\t// assert(!isZero(det), 'det may not be zero, i.e. the matrix is not invertible')\n\t\tlet i = 16\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\t\treturn result\n\t}\n\n\tcanMultiply(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.height\n\t}\n\n\ttimes(matrix: Matrix): Matrix {\n\t\tassertInst(Matrix, matrix)\n\t\tassert(this.canMultiply(matrix), `Cannot multiply this {this.dimString()} by matrix {matrix.dimString()}`)\n\t\tconst nWidth = matrix.width,\n\t\t\tnHeight = this.height,\n\t\t\tn = this.width\n\t\tconst nM = new Float64Array(nWidth * nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet nColIndex = nWidth\n\t\t\twhile (nColIndex--) {\n\t\t\t\tlet result = 0\n\t\t\t\tlet i = n\n\t\t\t\twhile (i--) {\n\t\t\t\t\tresult += this.m[nRowIndex * n + i] * matrix.m[i * nWidth + nColIndex]\n\t\t\t\t}\n\t\t\t\tnM[nRowIndex * nWidth + nColIndex] = result\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(nWidth, nHeight, nM)\n\t}\n\n\ttimesVector(v: Vector): Vector {\n\t\tassertVectors(v)\n\t\tassert(this.width == v.dim())\n\t\tconst nHeight = this.height,\n\t\t\tn = this.width\n\t\tconst nM = new Float64Array(nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet result = 0\n\t\t\tlet i = n\n\t\t\twhile (i--) {\n\t\t\t\tresult += this.m[nRowIndex * n + i] * v.v[i]\n\t\t\t}\n\t\t\tnM[nRowIndex] = result\n\t\t}\n\t\treturn new Vector(nM)\n\t}\n\n\ttransposed(): Matrix {\n\t\tconst tWidth = this.height,\n\t\t\ttHeight = this.width\n\t\tconst tM = new Float64Array(tWidth * tHeight)\n\t\tlet tRowIndex = tHeight\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = tWidth\n\t\t\twhile (tColIndex--) {\n\t\t\t\ttM[tRowIndex * tWidth + tColIndex] = this.m[tColIndex * tHeight + tRowIndex]\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(tWidth, tHeight, tM)\n\t}\n\n\t/**\n\t * In-place transpose.\n\t */\n\ttranspose(): void {\n\t\tconst h = this.height,\n\t\t\tw = this.width,\n\t\t\ttM = this.m\n\t\tlet tRowIndex = h\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = Math.min(tRowIndex, w)\n\t\t\twhile (tColIndex--) {\n\t\t\t\tconst temp = tM[tRowIndex * w + tColIndex]\n\t\t\t\ttM[tRowIndex * w + tColIndex] = tM[tColIndex * h + tRowIndex]\n\t\t\t\ttM[tColIndex * h + tRowIndex] = temp\n\t\t\t}\n\t\t}\n\t\tthis.width = h\n\t\tthis.height = w\n\t}\n\n\tisSquare(): boolean {\n\t\treturn this.height == this.width\n\t}\n\n\tdiagonal(): Vector {\n\t\tif (!this.isSquare()) {\n\t\t\tthrow new Error('!!')\n\t\t}\n\t\tconst v = new Float64Array(this.width)\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\tlet vIndex = this.width\n\t\twhile (vIndex--) {\n\t\t\telIndex -= this.width + 1\n\t\t\tv[vIndex] = this.m[elIndex]\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tmaxEl(): number {\n\t\treturn Math.max.apply(undefined, this.m)\n\t}\n\n\tminEl(): number {\n\t\treturn Math.min.apply(undefined, this.m)\n\t}\n\n\tmaxAbsColSum(): number {\n\t\tlet result = 0\n\t\tlet colIndex = this.width\n\t\twhile (colIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet rowIndex = this.height\n\t\t\twhile (rowIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tmaxAbsRowSum(): number {\n\t\tlet result = 0\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet colIndex = this.width\n\t\t\twhile (colIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tgetTriangularDeterminant(): number {\n\t\tassert(this.isUpperTriangular() || this.isLowerTriangular(), 'not a triangular matrix')\n\n\t\tlet product = 1\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= this.width + 1\n\t\t\tproduct *= this.m[elIndex]\n\t\t}\n\t\treturn product\n\t}\n\n\t/**\n\t * Calculates the determinant by first calculating the LU decomposition. If you already have that, use\n\t * U.getTriangularDeterminant()\n\t */\n\tgetDeterminant(): number {\n\t\t// PA = LU\n\t\t// det(A) * det(B) = det(A * B)\n\t\t// det(P) == 1 (permutation matrix)\n\t\t// det(L) == 1 (main diagonal is 1s\n\t\t// =>  det(A) == det(U)\n\t\treturn this.luDecomposition().U.getTriangularDeterminant()\n\t}\n\n\thasFullRank(): boolean {\n\t\treturn Math.min(this.width, this.height) == this.rank()\n\t}\n\n\tpermutationAsIndexMap(): int[] {\n\t\tassertf(() => this.isPermutation())\n\t\tconst result = new Array(this.height)\n\t\tlet i = this.height\n\t\twhile (i--) {\n\t\t\tconst searchIndexStart = i * this.width\n\t\t\tlet searchIndex = searchIndexStart\n\t\t\twhile (this.m[searchIndex] < 0.5) searchIndex++\n\t\t\tresult[i] = searchIndex - searchIndexStart\n\t\t}\n\t\treturn result\n\t}\n\n\tgetDependentRowIndexes(gauss: { L: Matrix; U: Matrix; P: Matrix } = this.gauss()): int[] {\n\t\tconst { L, U, P } = gauss\n\t\t// rows which end up as zero vectors in U are not linearly independent\n\t\tconst dependents = new Array(this.height)\n\t\tlet uRowIndex = this.height\n\t\twhile (uRowIndex--) {\n\t\t\tconst uRow = U.row(uRowIndex)\n\t\t\tif (uRow.length() < NLA_PRECISION) {\n\t\t\t\tdependents[uRowIndex] = true\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// figure out from which other rows the rows which end up as zero vectors are created by\n\t\tlet lRowIndex = this.height\n\t\twhile (lRowIndex--) {\n\t\t\tif (dependents[lRowIndex]) {\n\t\t\t\tlet lColIndex = Math.min(lRowIndex, this.width)\n\t\t\t\twhile (lColIndex--) {\n\t\t\t\t\tif (0 !== L.e(lRowIndex, lColIndex)) {\n\t\t\t\t\t\tdependents[lColIndex] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconsole.log('m\\n', this.toString(x => '' + x))\n\t\tconsole.log('L\\n', L.toString(x => '' + x))\n\t\tconsole.log('U\\n', U.toString(x => '' + x))\n\t\tconsole.log('P\\n', P.toString(x => '' + x))\n\t\t// gauss algorithm permutes the order of the rows, so map our results back to the original indices\n\t\tconst indexMap = P.permutationAsIndexMap()\n\t\tconst dependentRowIndexes = dependents.map((b, index) => b && indexMap[index]).filter(x => x != undefined)\n\t\treturn dependentRowIndexes\n\t}\n\n\tlerp(b: Matrix, t: number, result = this.new()): this {\n\t\tassertInst(Matrix, b, result)\n\t\tassertNumbers(t)\n\t\tassert(this.width == b.width && this.height == b.height)\n\t\tconst s = 1 - t\n\t\tlet i = this.m.length\n\t\twhile (i--) {\n\t\t\tresult.m[i] = s * this.m[i] + t * b.m[i]\n\t\t}\n\t\treturn result\n\t}\n}\n","import 'tosource'\n\nimport { Matrix } from './Matrix'\nimport { V, V3 } from './V3'\nimport { Vector } from './Vector'\n\nconst { abs, sign } = Math\nexport const PI = Math.PI\nexport const TAU = 2 * PI\nexport type int = number\nexport type colorstr = string // e.g. '#abcdef\nexport type raddd = number\nexport type FloatArray = Float32Array | Float64Array | number[]\n\n/** @define {boolean} */\nexport const NLA_DEBUG = process.env.NODE_ENV != 'production'\nexport const NLA_PRECISION = 1 / (1 << 26)\nconsole.log('NLA_PRECISION', NLA_PRECISION)\nconsole.log('NLA_DEBUG', NLA_DEBUG)\n\nlet oldConsole: any = undefined\nexport function disableConsole() {\n\toldConsole = console.log\n\tconsole.log = function() {}\n}\nexport function enableConsole() {\n\tif (oldConsole) {\n\t\tconsole.log = oldConsole\n\t}\n}\nexport function hasConstructor<T>(instance: any, cons: { new (...args: any[]): T }): instance is T {\n\treturn instance.constructor == cons\n}\n\nexport function getIntervals(ts: number[], min: number, max: number): [number, number][] {\n\tts.sort((a, b) => a - b)\n\tif (!eq(ts[0], min)) {\n\t\tts.splice(0, 0, min)\n\t}\n\tif (!eq(ts.last, max)) {\n\t\tts.push(max)\n\t}\n\treturn arrayFromFunction(ts.length - 1, i => [ts[i], ts[i + 1]] as [number, number])\n}\n\nexport function assertVectors(...vectors: (Vector | V3)[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\tif (!(arguments[i] instanceof V3 || arguments[i] instanceof Vector)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'assertVectors arguments[' +\n\t\t\t\t\t\ti +\n\t\t\t\t\t\t'] is not a vector. ' +\n\t\t\t\t\t\ttypeof arguments[i] +\n\t\t\t\t\t\t' == typeof ' +\n\t\t\t\t\t\targuments[i],\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertInst<T>(what: Function & { prototype: T }, ...objs: T[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < objs.length; i++) {\n\t\t\tif (!(objs[i] instanceof what)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'assertInst objs[' +\n\t\t\t\t\t\ti +\n\t\t\t\t\t\t'] is not a ' +\n\t\t\t\t\t\twhat.prototype.name +\n\t\t\t\t\t\t'. ' +\n\t\t\t\t\t\tobjs[i].constructor.name +\n\t\t\t\t\t\tobjs[i],\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertNumbers(...numbers: number[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < numbers.length; i++) {\n\t\t\tif ('number' !== typeof numbers[i]) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertInts(...numbers: number[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < numbers.length; i++) {\n\t\t\tif ('number' !== typeof numbers[i] || numbers[i] % 1 !== 0) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`assertNumbers arguments[${i}] is not an int. ${typeof numbers[i]} == typeof ${numbers[i]}`,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assert(value: any, ...messages: (any | (() => string))[]): value is true {\n\tif (NLA_DEBUG && !value) {\n\t\tthrow new Error(\n\t\t\t'assert failed: ' +\n\t\t\t\tmessages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'),\n\t\t)\n\t}\n\treturn true\n}\nexport function assertNever(value?: never): never {\n\tthrow new Error()\n}\nexport function assertf(f: () => any, ...messages: (any | (() => any))[]) {\n\tif (NLA_DEBUG && !f()) {\n\t\tthrow new Error(\n\t\t\t'assertf failed: ' +\n\t\t\t\tf.toString() +\n\t\t\t\tmessages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'),\n\t\t)\n\t}\n}\n\nexport function lerp(a: number, b: number, t: number) {\n\treturn a * (1 - t) + b * t\n}\nexport function lerpInv(a: number, b: number, t: number) {\n\treturn (t - a) / (b - a)\n}\nconst originalNumberToString = Number.prototype.toString\nNumber.prototype.toString = function(radix) {\n\tif (PI == this) {\n\t\treturn 'PI'\n\t}\n\treturn originalNumberToString.call(this, radix)\n}\n\nexport const eq0 = (x: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x) <= EPS\nexport const eq = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x - y) <= EPS\nexport const lt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y < -EPS\nexport const gt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x < -EPS\nexport const le = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y <= EPS\nexport const ge = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x <= EPS\n\nexport const eqAngle = (x: number, y: number): boolean => zeroAngle(x - y)\nexport const zeroAngle = (x: number): boolean =>\n\t((x % (2 * Math.PI)) + 2 * Math.PI + NLA_PRECISION) % (2 * Math.PI) < 2 * NLA_PRECISION\nexport const snap = (x: number, to: number): number => (Math.abs(x - to) <= NLA_PRECISION ? to : x)\nexport const snap2 = (x: number, ...to: number[]): number =>\n\tto.reduce((x, to) => (Math.abs(x - to) <= NLA_PRECISION ? to : x), x)\nexport const snapEPS = (x: number, EPS: number, ...to: number[]): number =>\n\tto.reduce((x, to) => (Math.abs(x - to) <= EPS ? to : x), x)\nexport const snap0 = (x: number, EPS = NLA_PRECISION): number => (Math.abs(x) <= EPS ? 0 : x)\nexport const canonAngle = (x: number): number => ((x % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI)\n\n/** @deprecated */ export const eq02 = eq0\n/** @deprecated */ export const eq2 = eq\n\n/**\n * Decimal adjustment of a number.\n *\n * @param f  The type of adjustment.\n * @param value The number.\n * @param exp The exponent (the 10 logarithm of the adjustment base).\n * @returns The adjusted value.\n */\nfunction decimalAdjust(f: (x: number) => number, value: number, exp: number): number {\n\t// If the exp is undefined or zero...\n\tif (typeof exp === 'undefined' || +exp === 0) {\n\t\treturn f(value)\n\t}\n\tvalue = +value\n\texp = +exp\n\t// If the value is not a number or the exp is not an integer...\n\tif (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n\t\treturn NaN\n\t}\n\t// Shift\n\tlet vs = value.toString().split('e')\n\tvalue = f(+(vs[0] + 'e' + (vs[1] ? +vs[1] - exp : -exp)))\n\t// Shift back\n\tvs = value.toString().split('e')\n\treturn +(vs[0] + 'e' + (vs[1] ? +vs[1] + exp : exp))\n}\n\nexport const round10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.round)\nexport const floor10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.floor)\nexport const ceil10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.ceil)\n\nexport const GOLDEN_RATIO = (1 + Math.sqrt(5)) / 2\n\nexport function mod(a: number, b: number) {\n\treturn ((a % b) + b) % b\n}\nexport function arraySwap(arr: any[], i: int, j: int) {\n\tconst temp = arr[i]\n\tarr[i] = arr[j]\n\tarr[j] = temp\n}\nexport type ArrayLikeWriteAble<T> = {\n\treadonly length: int\n\t[index: number]: T\n}\nexport function arrayCopy<T, A extends ArrayLikeWriteAble<T>>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tdst: A,\n\tdstart: int,\n\tlength: int,\n): A {\n\tassertInts(sstart, dstart, length)\n\tdstart += length\n\tlength += sstart\n\twhile (length-- > sstart) {\n\t\tdst[--dstart] = src[length]\n\t}\n\treturn dst\n}\nexport function clamp(val: number, min: number, max: number) {\n\tassertNumbers(val, min, max)\n\treturn Math.max(min, Math.min(max, val))\n}\n\nexport function between(val: number, min: number, max: number) {\n\tassertNumbers(val, min, max)\n\treturn min <= val && val <= max\n}\nexport function fuzzyBetween(val: number, min: number, max: number) {\n\treturn le(min, val) && le(val, max)\n}\n\nexport function mapPush<T, U>(map: Map<T, U[]>, key: T, val: U) {\n\tconst array = map.get(key)\n\tif (array) {\n\t\tarray.push(val)\n\t} else {\n\t\tmap.set(key, [val])\n\t}\n}\n\n/**\n * Copies a number of items from one array to another, with a definable step size between items in the source and\n * destination array.\n *\n * @param src The source array.\n * @param sstart The location of the first item in the source array.\n * @param sstep The offset between items in the source array.\n * @param dst The destination array.\n * @param dstart The location of the first item in the destination array.\n * @param dstep The offset between items in the destination array.\n * @param count The number of items to copy.\n */\nexport function arrayCopyStep<T>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tsstep: int,\n\tdst: ArrayLikeWriteAble<T>,\n\tdstart: int,\n\tdstep: int,\n\tcount: int,\n): void {\n\tlet srcIndex = sstart + count * sstep\n\tlet dIndex = dstart + count * dstep\n\twhile (srcIndex > sstart) {\n\t\tdst[(dIndex -= dstep)] = src[(srcIndex -= sstep)]\n\t}\n}\n\n/**\n * Copies a number of contiguous, evenly-spaced blocks from one array to another.\n *\n * @param src The source array.\n * @param sstart The start of the first block in the source array.\n * @param sstep The offset from the start of one block to the start of the next block in the source array.\n * @param dst The destination array.\n * @param dstart The start of the first block in the destination array.\n * @param dstep The offset from the start of one block to the start of the next block in the destination array.\n * @param blockSize The length of one block.\n * @param blockCount The number of blocks to copy.\n */\nexport function arrayCopyBlocks<T>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tsstep: int,\n\tdst: ArrayLikeWriteAble<T>,\n\tdstart: int,\n\tdstep: int,\n\tblockSize: int,\n\tblockCount: int,\n): void {\n\tfor (let i = 0; i < blockCount; i++) {\n\t\tarrayCopy(src, sstart + sstep * i, dst, dstart + dstep * i, blockSize)\n\t}\n}\nexport function arrayRange(startInclusive: int, endExclusive: int, step: int = 1) {\n\tassertNumbers(startInclusive, step)\n\t//console.log(Math.ceil((endExclusive - startInclusive) / step))\n\tconst arrLength = Math.ceil((endExclusive - startInclusive) / step)\n\tconst result = new Array(arrLength) // '- startInclusive' so that chunk in the last row will also be selected, even\n\t// if the row is not complete\n\tfor (let i = startInclusive, index = 0; index < arrLength; i += step, index++) {\n\t\tresult[index] = i\n\t}\n\treturn result\n}\n\n/**\n * Returns a number of evenly-spaced values between t0 and t1 (inclusive).\n * @param t0 First value.\n * @param t1 Last value.\n * @param count Total number of values.\n */\nexport function arraySamples(t0: number, t1: number, count: int = 64) {\n\treturn arrayFromFunction(count, i => lerp(t0, t1, i / (count - 1)))\n}\n\nexport function arrayFromFunction<T>(length: 1, f: (i: int, total: int) => T): [T]\nexport function arrayFromFunction<T>(length: 2, f: (i: int, total: int) => T): [T, T]\nexport function arrayFromFunction<T>(length: 3, f: (i: int, total: int) => T): [T, T, T]\nexport function arrayFromFunction<T>(length: 4, f: (i: int, total: int) => T): [T, T, T, T]\nexport function arrayFromFunction<T>(length: 5, f: (i: int, total: int) => T): [T, T, T, T, T]\nexport function arrayFromFunction<T>(length: int, f: (i: int, total: int) => T): T[]\nexport function arrayFromFunction<T>(length: int, f: (i: int, total: int) => T): T[] {\n\tassertNumbers(length)\n\tassert('function' == typeof f)\n\tconst a = new Array(length)\n\tlet elIndex = length\n\twhile (elIndex--) {\n\t\ta[elIndex] = f(elIndex, length)\n\t}\n\treturn a\n}\n\nexport function fuzzyUniques(vals: number[]): number[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i],\n\t\t\troundVal = round(val)\n\t\tlet key\n\t\tif (\n\t\t\t!map.has(roundVal) &&\n\t\t\t!((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, val)) &&\n\t\t\t!((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, val))\n\t\t) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\nexport function fuzzyUniquesF<T>(vals: T[], f: (o: T) => number): T[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i],\n\t\t\troundVal = round(f(val))\n\t\tlet key\n\t\tif (\n\t\t\t!map.has(roundVal) &&\n\t\t\t!((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, f(val))) &&\n\t\t\t!((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, f(val)))\n\t\t) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\nexport function addOwnProperties(target: any, props: any, ...exclude: string[]) {\n\tObject.getOwnPropertyNames(props).forEach(key => {\n\t\t//console.log(props, key)\n\t\tif (!exclude.includes(key)) {\n\t\t\tif (target.hasOwnProperty(key)) {\n\t\t\t\tconsole.warn('target ', target, ' already has property ', key, target[key])\n\t\t\t}\n\t\t\tObject.defineProperty(target, key, Object.getOwnPropertyDescriptor(props, key)!)\n\t\t}\n\t})\n}\n\nexport let defaultRoundFunction = (x: number) => x // Math.round10(x, -4)\n\nexport function forceFinite(val: string): number {\n\tconst valNum = parseFloat(val.replace(',', '.').replace(/^[^0-9,\\.\\-]/, ''))\n\treturn Number.isFinite(valNum) ? valNum : 0\n}\n\nexport const MINUS = (a: number, b: number) => a - b\n\nexport function floatHashCode(f: number) {\n\treturn ~~(f * (1 << 28))\n}\n\n/**\n * combinations(2) will generate\n * [0,0] [0,1] [1,1] [0,2] [1,2] [2,2]\n */\nexport function* combinations(n: int): IterableIterator<{ i: number; j: number }> {\n\tfor (let i = 0; i < n; i++) {\n\t\tfor (let j = i; j < n; j++) {\n\t\t\tyield { i: i, j: j }\n\t\t}\n\t}\n}\n\n/* The arithmetic-geometric mean of two non-negative numbers */\nexport function arithmeticGeometricMean(x: number, y: number): number {\n\tassertf(() => lt(0, x))\n\tassertf(() => lt(0, y))\n\tlet a = x,\n\t\tg = y\n\tlet i = 30\n\twhile (i-- && a != g) {\n\t\t;[a, g] = [(a + g) / 2, Math.sqrt(a * g)]\n\t}\n\tassert(i != -1)\n\n\treturn a\n}\n\n/**\n * incomplete elliptic integral of the first kind\n * EllipticF(phi, k2) = INT[0; phi] 1 / sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticF(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, -0.5), 0, phi)\n}\n\n/**\n * incomplete elliptic integral of the second kind\n * EllipticE(phi, k2) = INT[0; phi] sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticE(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, 0.5), 0, phi)\n}\n\n/**\n * One degree in radians. Use like Math.sin(30 * DEG).\n */\nexport const DEG = 0.017453292519943295\nexport function rad2deg(rad: number): number {\n\t//  discuss at: http://phpjs.org/functions/deg2rad/\n\t// original by: Enrique Gonzalez\n\t// improved by: Thomas Grainger (http://graingert.co.uk)\n\t//   example 1: deg2rad(45)\n\t//   returns 1: 0.7853981633974483\n\n\treturn rad / DEG\n}\n\n/**\n * numberToStr(2/3) == '0.6p'\n * numberToStr(7/12) == '0.583p'\n * numberToStr(2/7) == '0.285714pppppp'\n * numberToStr(NLA_PRECISION) == '0+'\n * numberToStr(-NLA_PRECISION) == '0-'\n * numberToStr(2-NLA_PRECISION) == '2-'\n * numberToStr(0) == '0='\n *\n */\nexport function numberToStr(value: number, length: int) {\n\tlet minAbsDiff = Infinity,\n\t\tclosestValue: number | undefined = undefined,\n\t\tclosestValueStr: string | undefined = undefined\n\tfunction test(testValue: number, testValueStr: string) {\n\t\tconst absDiff = Math.abs(testValue - value)\n\t\tconsole.log(testValue, testValueStr, absDiff)\n\t\tif (absDiff < minAbsDiff) {\n\t\t\tminAbsDiff = absDiff\n\t\t\tclosestValue = testValue\n\t\t\tclosestValueStr = testValueStr\n\t\t}\n\t\treturn 0 == absDiff\n\t}\n\n\tfunction overline(str: string) {\n\t\treturn str\n\t\t\t.split('')\n\t\t\t.map(c => c + '\\u0304')\n\t\t\t.join('')\n\t}\n\n\tif (test(parseFloat(value.toFixed(length)), value.toFixed(length))) return closestValueStr + '='\n\n\tconst valueStr = '' + value\n\tconst toDecimal = valueStr.substr(0, valueStr.indexOf('.') + 1)\n\tconst decimals = valueStr.substr(valueStr.indexOf('.') + 1)\n\n\tfor (let startPos = 0; startPos < length; startPos++) {\n\t\tfor (let endPos = startPos + 1; endPos <= length; endPos++) {\n\t\t\tconst prefixDecimals = decimals.substr(0, startPos)\n\t\t\tconst period = decimals.substr(startPos, endPos)\n\t\t\tconst testValue = parseFloat(\n\t\t\t\ttoDecimal + prefixDecimals + period.repeat(Math.ceil((17 - startPos) / period.length)),\n\t\t\t)\n\t\t\tif (test(testValue, toDecimal + prefixDecimals + overline(period))) return closestValueStr + '='\n\t\t}\n\t}\n\n\treturn closestValueStr + (closestValue! < value ? '-' : '+')\n}\n\nexport function time(f: () => void) {\n\tconst start = performance.now()\n\tf()\n\treturn performance.now() - start\n}\n\nexport type Tuple2<T> = [T, T]\nexport type Tuple3<T> = [T, T, T]\nexport type Tuple4<T> = [T, T, T, T]\nexport type Tuple5<T> = [T, T, T, T, T]\nexport type Tuple6<T> = [T, T, T, T, T, T]\nexport type Tuple7<T> = [T, T, T, T, T, T, T]\nexport type Tuple8<T> = [T, T, T, T, T, T, T, T]\n//console.log(numberToStr(29 / 99, 4))\n//console.log(numberToStr(77 / 99, 4))\n\n// interface Object {\n//    cw(f: (x: any) => any): any\n// }\n//Object.prototype.cw = function (f) {\n//    return f(this)\n//}\n//Object.construct = function <T>(cons: {new(...args: any[]): T}, args: any[]) {\n//    return f(this)\n//}\ndeclare global {\n\tinterface Object {\n\t\tsce: string\n\t\tstr: string\n\t\ttoSource(): string\n\t}\n\tinterface ObjectConstructor {\n\t\tconstruct<T>(cons: { new (...args: any[]): T }, args: any[]): T\n\t\tmap<T, S, K extends string>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: undefined, v: T, key: string, o: { [k in K]: T }) => S,\n\t\t): { [k in K]: S }\n\t\tmap<T, S, K extends string, C>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: C, v: T, key: string, o: { [k in K]: T }) => S,\n\t\t\tcontext: C,\n\t\t): { [k in K]: S }\n\t}\n\t// tslint:disable-next-line:class-name\n\tinterface __NLAReadonlyArray<T> {\n\t\t/**\n\t\t * this[this.length - 1]\n\t\t */\n\t\treadonly last: T\n\n\t\tbinaryIndexOf<S>(searchElement: S, cmp?: (a: T, b: S) => number): int\n\n\t\tconcatenated(): T\n\n\t\tflatMap<U>(f: (el: T, elIndex: int, arr: this) => U | ReadonlyArray<U>): U[]\n\n\t\t/**\n\t\t * this.length == 0\n\t\t */\n\t\tisEmpty(): boolean\n\n\t\t/**\n\t\t * this[index % this.length]\n\t\t */\n\t\temod(index: int): T\n\n\t\t/**\n\t\t * this.map(f).filter(v => v)\n\t\t */\n\t\tmapFilter<U>(f: (el: T, elIndex: int, arr: this) => U | undefined | false | null): U[]\n\n\t\t/**\n\t\t * Math.max.apply(undefined, this)\n\t\t */\n\t\tmax(this: number[]): number\n\n\t\t/**\n\t\t * Math.min.apply(undefined, this)\n\t\t */\n\t\tmin(this: number[]): number\n\n\t\t/**\n\t\t * There is no indexWithMin, use indexWithMax(-f) instead\n\t\t * @param f\n\t\t */\n\t\tindexWithMax(f: (el: T, elIndex: int, arr: this) => number): int\n\n\t\tsum(this: number[]): number\n\n\t\tabsSum(): number\n\n\t\tsliceStep(start: int, end: int, step: int, chunkSize?: int): T[]\n\n\t\tunique(): T[]\n\n\t\t/**\n\t\t * Return the element in the array for which f(el) is highest. There is no `withMin`, call withMax(x => -f(x))\n\t\t * instead.\n\t\t * @param f\n\t\t */\n\t\twithMax(f: (el: T, elIndex: int, arr: this) => number): T\n\n\t\tequals(this: { equals(obj: any): boolean }[], obj: any): boolean\n\n\t\thashCode(this: { hashCode(): int }[]): int\n\n\t\t/**\n\t\t * Like .splice(), but returns a new array.\n\t\t * @param start\n\t\t * @param end\n\t\t * @param items\n\t\t */\n\t\tsplicePure(start: int, end: int, ...items: T[]): T[]\n\n\t\t/**\n\t\t * If this array is not sorted according to comparator, returns the first unsorted index, i.e. the index of the\n\t\t * first element which is \"smaller\" than the previous one. Otherwise, returns -1\n\t\t * @example [1, 2, 3].firstUnsorted() // -1\n\t\t * @example [1, 3, 2].firstUnsorted() // 2, as [2] < [3]\n\t\t * @param comparator\n\t\t */\n\t\tfirstUnsorted(comparator: (a: T, b: T) => number): int\n\t}\n\tinterface Array<T> extends __NLAReadonlyArray<T> {\n\t\t/**\n\t\t * this[this.length - 1]\n\t\t */\n\t\tlast: T\n\t\tbinaryInsert(this: number[], newEl: number, cmp?: (a: number, b: number) => number): void\n\n\t\tbinaryInsert(newEl: T, cmp: (a: T, b: T) => number): void\n\n\t\t/**\n\t\t * this.length == 0\n\t\t */\n\t\tisEmpty(): boolean\n\n\t\tremove(el: T): boolean\n\n\t\tbagRemove(el: T): boolean\n\t\tbagRemoveIndex(el: T): boolean\n\t\tbagToggle(el: T): boolean\n\n\t\tremoveIndex(index: int): T\n\n\t\tremoveMatch(matcher: (el: T) => boolean): T | undefined\n\n\t\tremoveAll(els: T[]): void\n\n\t\tsumInPlaceTree(): number\n\n\t\ttoggle(el: T): void\n\n\t\tclear(...newItems: T[]): void\n\n\t\t//filter<U extends T>(pred: (a: T) => a is U): U[]\n\n\t\tmap<U>(this: [T], callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): [U]\n\t\tmap<U>(this: Tuple2<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple2<U>\n\t\tmap<U>(this: Tuple3<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple3<U>\n\t\tmap<U>(this: Tuple4<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple4<U>\n\t\tmap<U>(this: Tuple5<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple5<U>\n\t\tmap<U>(this: Tuple6<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple6<U>\n\t\tmap<U>(this: Tuple7<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple7<U>\n\t\tmap<U>(this: Tuple8<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple8<U>\n\t}\n\tinterface ReadonlyArray<T> extends __NLAReadonlyArray<T> {}\n\n\tinterface String {\n\t\tcapitalizeFirstLetter(): string\n\t\tequals(x: any): boolean\n\t}\n}\nObject.map = function<T, S, K extends string>(\n\to: { [k in K]: T },\n\tf: (v: T, key: string, o: { [k in K]: T }) => S,\n\tcontext: any = undefined,\n): { [k in K]: S } {\n\tconst result = {} as { [k in K]: S }\n\tfor (const key in o) {\n\t\tresult[key] = f.call(context, o[key], key, o)\n\t}\n\treturn result\n}\nArray.prototype.emod = function(i) {\n\treturn this[i % this.length]\n}\nArray.prototype.sliceStep = function(start, end, step, chunkSize = 1) {\n\tassertNumbers(start, step)\n\tstart < 0 && (start = this.length + start)\n\tend <= 0 && (end = this.length + end)\n\tconst resultLength = Math.ceil((end - start) / step)\n\tconst result = new Array(resultLength) // '- start' so that chunk in the last row\n\t// will also be selected, even if the row is\n\t// not complete\n\tlet index = 0\n\tfor (let i = start; i < end; i += step) {\n\t\tfor (let j = i; j < Math.min(i + chunkSize, end); j++) {\n\t\t\tresult[index++] = this[j]\n\t\t}\n\t}\n\tassert(resultLength == index)\n\treturn result\n}\nArray.prototype.splicePure = function(start = 0, deleteCount = 0, ...items) {\n\tconst arrayLength = this.length\n\tconst _deleteCount = deleteCount < 0 ? 0 : deleteCount\n\tlet _start\n\tif (start < 0) {\n\t\tif (Math.abs(start) > arrayLength) {\n\t\t\t_start = 0\n\t\t} else {\n\t\t\t_start = arrayLength + start\n\t\t}\n\t} else if (start > arrayLength) {\n\t\t_start = arrayLength\n\t} else {\n\t\t_start = start\n\t}\n\tconst newLength = this.length - _deleteCount + items.length\n\tconst result = new Array(newLength)\n\tlet dst = newLength\n\tlet src = this.length\n\twhile (src-- > _start + _deleteCount) {\n\t\tresult[--dst] = this[src]\n\t}\n\tsrc = items.length\n\twhile (src--) {\n\t\tresult[--dst] = items[src]\n\t}\n\tsrc = _start\n\twhile (src--) {\n\t\tresult[--dst] = items[src]\n\t}\n\treturn result\n}\nArray.prototype.equals = function(obj: any): boolean {\n\tif (this === obj) return true\n\tif (Object.getPrototypeOf(obj) !== Array.prototype) return false\n\tif (this.length !== obj.length) return false\n\tfor (let i = 0; i < this.length; i++) {\n\t\tif (!equals(this[i], obj[i])) return false\n\t}\n\treturn true\n}\nexport function equals(a: any, b: any) {\n\treturn 'object' === typeof a ? a.equals(b) : a === b\n}\nArray.prototype.hashCode = function(): int {\n\tlet result = 0\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult = (result * 31 + hashCode(this[i])) | 0\n\t}\n\treturn result | 0\n}\nexport function hashCode(o: any) {\n\tif ('number' === typeof o || undefined === o) {\n\t\treturn o | 0\n\t} else {\n\t\treturn null === o ? 0 : o.hashCode()\n\t}\n}\nArray.prototype.mapFilter = function(f) {\n\tconst length = this.length,\n\t\tresult = []\n\tfor (let i = 0; i < length; i++) {\n\t\tif (i in this) {\n\t\t\tconst val = f(this[i], i, this)\n\t\t\tif (val) {\n\t\t\t\tresult.push(val)\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.flatMap = function(f) {\n\treturn Array.prototype.concat.apply([], this.map(f))\n}\nArray.prototype.clear = function(...newItems) {\n\treturn this.splice(0, this.length, ...newItems)\n}\n/**\n *\n * @returns Array.prototype.concat.apply([], this)\n */\nArray.prototype.concatenated = function() {\n\treturn Array.prototype.concat.apply([], this)\n}\nArray.prototype.min = function() {\n\tlet i = this.length,\n\t\tmax = Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max > val) max = val\n\t}\n\treturn max\n}\nArray.prototype.max = function() {\n\t// faster and no limit on array size, see https://jsperf.com/math-max-apply-vs-loop/2\n\tlet i = this.length,\n\t\tmax = -Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max < val) max = val\n\t}\n\treturn max\n}\nArray.prototype.indexWithMax = function(f) {\n\tif (this.length == 0) {\n\t\treturn -1\n\t}\n\tlet i = this.length,\n\t\tresult = -1,\n\t\tmaxVal = -Infinity\n\twhile (i--) {\n\t\tconst val = f(this[i], i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = i\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.withMax = function(f) {\n\tlet i = this.length,\n\t\tresult = undefined,\n\t\tmaxVal = -Infinity\n\twhile (i--) {\n\t\tconst el = this[i],\n\t\t\tval = f(el, i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = el\n\t\t}\n\t}\n\treturn result\n}\n\n/**\n * Returns the sum of the absolute values of the components of this vector.\n * E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\n */\nArray.prototype.absSum = function() {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += Math.abs(this[i])\n\t}\n\treturn result\n}\n\nArray.prototype.sum = function() {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += this[i]\n\t}\n\treturn result\n}\n\nArray.prototype.sumInPlaceTree = function() {\n\tif (0 == this.length) return 0\n\tlet l = this.length\n\twhile (l != 1) {\n\t\tconst lHalfFloor = Math.floor(l / 2)\n\t\tconst lHalfCeil = Math.ceil(l / 2)\n\t\tfor (let i = 0; i < lHalfFloor; i++) {\n\t\t\tthis[i] += this[i + lHalfCeil]\n\t\t}\n\t\tl = lHalfCeil\n\t}\n\treturn this[0]\n}\n\nArray.prototype.isEmpty = function() {\n\treturn 0 == this.length\n}\n\nArray.prototype.unique = function() {\n\tconst uniqueSet = new Set(this)\n\treturn Array.from(uniqueSet)\n}\n\nArray.prototype.remove = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn true\n\t}\n\treturn false\n}\n\nArray.prototype.removeIndex = function(i) {\n\tconst result = this[i]\n\tthis.splice(i, 1)\n\treturn result\n}\nArray.prototype.bagRemoveIndex = function(i) {\n\tconst result = this[i]\n\tif (i == this.length - 1) {\n\t\tthis.pop()\n\t} else {\n\t\tthis[i] = this.pop()\n\t}\n\treturn result\n}\n\nArray.prototype.removeMatch = function<T>(matcher: (el: T) => boolean) {\n\tconst index = this.findIndex(matcher)\n\tif (-1 != index) {\n\t\treturn this.removeIndex(index)\n\t}\n}\n\nArray.prototype.removeAll = function(o) {\n\tlet i = o.length\n\twhile (i--) {\n\t\tthis.remove(o[i])\n\t}\n}\n\nArray.prototype.toggle = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\nArray.prototype.bagToggle = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.bagRemoveIndex(index)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\n\nArray.prototype.binaryIndexOf = function(searchElement, cmp = (a: any, b: any) => a - b) {\n\tlet minIndex = 0\n\tlet maxIndex = this.length - 1\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex <= maxIndex) {\n\t\tcurrentIndex = ((minIndex + maxIndex) / 2) | 0\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, searchElement) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t} else if (cmp(currentElement, searchElement) > 0) {\n\t\t\tmaxIndex = currentIndex - 1\n\t\t} else {\n\t\t\treturn currentIndex\n\t\t}\n\t}\n\n\treturn -minIndex - 1\n}\n\nArray.prototype.binaryInsert = function(el: any, cmp = MINUS) {\n\tlet minIndex = 0\n\tlet maxIndex = this.length\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex < maxIndex) {\n\t\tcurrentIndex = ~~((minIndex + maxIndex) / 2)\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, el) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t} else {\n\t\t\tmaxIndex = currentIndex\n\t\t}\n\t}\n\n\tthis.splice(minIndex, 0, el)\n}\n\nArray.prototype.firstUnsorted = function(c) {\n\tfor (let i = 1; i < this.length; i++) {\n\t\tif (c(this[i - 1], this[i]) > 0) return i\n\t}\n\treturn -1\n}\nObject.defineProperty(Array.prototype, 'last', {\n\tget() {\n\t\treturn this[this.length - 1]\n\t},\n\tset(val) {\n\t\tthis[this.length - 1] = val\n\t},\n})\n\nString.prototype.capitalizeFirstLetter = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1)\n}\nString.prototype.equals = function(x: any) {\n\treturn this == x\n}\n\nexport function SCE(o: any) {\n\tswitch (typeof o) {\n\t\tcase 'undefined':\n\t\t\treturn 'undefined'\n\t\tcase 'function':\n\t\t\treturn o.toString()\n\t\tcase 'number':\n\t\t\treturn '' + o\n\t\tcase 'string':\n\t\t\treturn JSON.stringify(o)\n\t\tcase 'object':\n\t\t\tif (null == o) {\n\t\t\t\treturn 'null'\n\t\t\t} else {\n\t\t\t\treturn o.sce\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new Error()\n\t}\n}\nexport function STR(o: any) {\n\treturn o.str\n}\nObject.defineProperty(Object.prototype, 'sce', {\n\tget: function() {\n\t\treturn this.toSource()\n\t},\n})\nObject.defineProperty(Object.prototype, 'str', {\n\tget: function() {\n\t\treturn this.toString()\n\t},\n})\n\n//const NLA = {}\n//for (let key in ARRAY_UTILITIES) {\n//    const nlaName = 'array' + key.capitalizeFirstLetter()\n//    assert(!NLA[nlaName])\n//    NLA[nlaName] = (arr, ...rest) => ARRAY_UTILITIES[key].apply(arr, rest)\n//}\n\nexport function isCCW(vertices: V3[], normal: V3) {\n\tconst dsa = doubleSignedArea(vertices, normal)\n\tassert(0 != dsa)\n\treturn dsa < 0\n}\nexport function doubleSignedArea(vertices: V3[], normal: V3) {\n\tassert(!normal.likeO(), '!normal.likeO()')\n\tconst absMaxDim = normal.maxAbsDim()\n\t// order is important, coord0 and coord1 must be set so that coord0, coord1 and maxDim span a right-hand coordinate\n\t// system var [coord0, coord1] = [['y', 'z'], ['z', 'x'], ['x', 'y']][maxAbsDim]\n\tconst doubleSignedArea = vertices\n\t\t.map((v0, i, vertices) => {\n\t\t\tconst v1 = vertices[(i + 1) % vertices.length]\n\t\t\t//return (v1[coord0] - v0[coord0]) * (v1[coord1] + v0[coord1])\n\t\t\tswitch (absMaxDim) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn (v1.y - v0.y) * (v1.z + v0.z)\n\t\t\t\tcase 1:\n\t\t\t\t\treturn (v1.z - v0.z) * (v1.x + v0.x)\n\t\t\t\tcase 2:\n\t\t\t\t\treturn (v1.x - v0.x) * (v1.y + v0.y)\n\t\t\t}\n\t\t})\n\t\t.reduce((a, b) => a + b)\n\treturn snap(doubleSignedArea * Math.sign(normal.e(absMaxDim)), 0)\n}\n\n/**\n * solves x² + px + q = 0\n */\nexport function pqFormula(p: number, q: number): number[] {\n\t// 4 times the discriminant:in\n\tconst discriminantX4 = (p * p) / 4 - q\n\tif (discriminantX4 < -NLA_PRECISION) {\n\t\treturn []\n\t} else if (discriminantX4 <= NLA_PRECISION) {\n\t\treturn [-p / 2]\n\t} else {\n\t\tconst root = Math.sqrt(discriminantX4)\n\t\treturn [-p / 2 - root, -p / 2 + root]\n\t}\n}\n\n/**\n * from pomax' library\n * solves ax³ + bx² + cx + d = 0\n * This function from pomax' utils\n * @returns 0-3 roots\n */\nexport function solveCubicReal2(a: number, b: number, c: number, d: number): number[] {\n\tif (eq0(a)) {\n\t\tif (eq0(b)) {\n\t\t\treturn [-d / c]\n\t\t} else {\n\t\t\treturn pqFormula(c / b, d / b)\n\t\t}\n\t}\n\tconst divisor = a\n\ta = b / divisor\n\tb = c / divisor\n\tc = d / divisor\n\tconst p = (3 * b - a * a) / 3,\n\t\tpDiv3 = p / 3,\n\t\tpDiv3Pow3 = pDiv3 * pDiv3 * pDiv3,\n\t\tq = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n\t\tqDiv2 = q / 2,\n\t\tdiscriminant = qDiv2 * qDiv2 + pDiv3Pow3\n\t// 18abcd - 4b³d + b²c² - 4ac³ - 27a²d²\n\tif (discriminant < -NLA_PRECISION / 8) {\n\t\tconst r = Math.sqrt(-pDiv3Pow3),\n\t\t\tt = -q / (2 * r),\n\t\t\tcosphi = t < -1 ? -1 : t > 1 ? 1 : t, // clamp t to [-1;1]\n\t\t\tphi = Math.acos(cosphi),\n\t\t\tt1 = 2 * Math.cbrt(r)\n\t\tconst x1 = t1 * Math.cos(phi / 3) - a / 3\n\t\tconst x2 = t1 * Math.cos((phi + 2 * Math.PI) / 3) - a / 3\n\t\tconst x3 = t1 * Math.cos((phi + 4 * Math.PI) / 3) - a / 3\n\t\treturn [x1, x2, x3]\n\t} else if (discriminant <= NLA_PRECISION / 8) {\n\t\tif (0 == qDiv2) {\n\t\t\t// TODO: compare with likeO?\n\t\t\treturn [-a / 3]\n\t\t}\n\t\tconst u1 = qDiv2 < 0 ? Math.cbrt(-qDiv2) : -Math.cbrt(qDiv2)\n\t\tconst x1 = 2 * u1 - a / 3\n\t\tconst x2 = -u1 - a / 3\n\t\treturn [x1, x2]\n\t} else {\n\t\tconst sd = Math.sqrt(discriminant)\n\t\tconst u1 = Math.cbrt(-qDiv2 + sd)\n\t\tconst v1 = Math.cbrt(qDiv2 + sd)\n\t\treturn [u1 - v1 - a / 3]\n\t}\n}\nexport function checkDerivate(\n\tf: (x: number) => number,\n\tdf: (x: number) => number,\n\ta: number,\n\tb: number,\n\tmaxFaults: int = 0,\n) {\n\tconst eps = 1e-4\n\tlet faults = 0\n\tfor (let t = a; t < b; t += (b - a) / 100) {\n\t\tconst dfdt = df(t)\n\t\tconst df2 = (f(t + eps) - f(t)) / eps\n\t\tassert((faults += +!eq2(df2, dfdt, 0.1)) <= maxFaults, `df2 == ${df2} != ${df(t)} = df(t)`)\n\t}\n}\nexport function getRoots(\n\tf: (x: number) => number,\n\ta: number,\n\tb: number,\n\tstepSize: number,\n\tdf: (x: number) => number,\n): number[] {\n\tconst results: number[] = []\n\tfor (let startT = a; startT <= b; startT += stepSize) {\n\t\tconst dt = stepSize * abs(df(startT))\n\t\tif (abs(f(startT)) <= dt) {\n\t\t\t//const t = newtonIterate1d(f, startT, 16)\n\t\t\tlet t = newtonIterateWithDerivative(f, startT, 16, df)\n\t\t\tif (!eq0(f(t)) || eq0(df(t))) {\n\t\t\t\tt = newtonIterate1d(df, startT, 16)\n\t\t\t\t// const a = startT - dt,\n\t\t\t\t// \tb = startT + dt\n\t\t\t\t//if (f(a) * f(b) < 0) {\n\t\t\t\t//    t = bisect(f, a, b, 16)\n\t\t\t\t//} else if (df(a) * df(b) < 0) {\n\t\t\t\t//    t = bisect(df, a, b, 16)\n\t\t\t\t//}\n\t\t\t}\n\t\t\tif (eq0(f(t)) && !results.some(r => eq(r, t))) {\n\t\t\t\tresults.push(t)\n\t\t\t}\n\t\t}\n\t}\n\treturn results\n}\n\nexport function bisect(f: (x: number) => number, a: number, b: number, steps: int) {\n\tassert(a < b)\n\tlet fA = f(a),\n\t\tfB = f(b)\n\tassert(fA * fB < 0)\n\twhile (steps--) {\n\t\tconst c = (b + a) / 2\n\t\tconst fC = f(c)\n\t\tif (sign(fA) == sign(fC)) {\n\t\t\ta = c\n\t\t\tfA = fC\n\t\t} else {\n\t\t\tb = c\n\t\t\tfB = fC\n\t\t}\n\t}\n\tassert(a <= (b + a) / 2)\n\tassert(b >= (b + a) / 2)\n\treturn lerp(a, b, 0.5)\n}\nexport function newtonIterate(\n\tf: (x: number[]) => number[],\n\tx: number[],\n\tsteps: int = 4,\n\tEPSILON?: number,\n\tstepize = 1,\n) {\n\tEPSILON = EPSILON || 1e-8\n\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = Matrix.jacobi(f, x, fx, EPSILON)\n\t\tassert(!dfdx.isZero())\n\t\tconst dx = dfdx.solveLinearSystem(new Vector(new Float64Array(fx))).v\n\t\tassert(!isNaN(dx[0]))\n\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\tfor (let j = 0; j < x.length; j++) x[j] -= dx[j] * stepize\n\t}\n\treturn x\n}\n\nexport function newtonIterate1d(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number | undefined,\n\tdf: (x: number) => number,\n): number\nexport function newtonIterate1d(f: (x: number) => number, xStart: number, steps: number, EPSILON?: number): number\nexport function newtonIterate1d(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 8,\n\tepsOrDf: number | ((x: number) => number) = 1e-8,\n): number {\n\tif ('number' === typeof epsOrDf) {\n\t\tlet x = xStart\n\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\tconst fx = f(x)\n\t\t\tconst dfdx = (f(x + epsOrDf) - fx) / epsOrDf\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t\tx = x - fx / dfdx\n\t\t}\n\t\treturn x\n\t} else {\n\t\treturn newtonIterateWithDerivative(f, xStart, steps, epsOrDf)\n\t}\n}\nexport function newtonIterateWithDerivative(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 4,\n\tdf: (x: number) => number,\n) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterateWithDerivative2(\n\tfAndDf: (x: number) => [number, number],\n\txStart: number,\n\tsteps: number = 8,\n\txMin = -Infinity,\n\txMax = Infinity,\n) {\n\tassert(steps % 1 == 0)\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst [fx, dfdx] = fAndDf(x)\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (0 == dfdx || x < xMin || xMax < x) {\n\t\t\treturn undefined\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterateSmart(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 4,\n\tdf: (x: number) => number,\n\tmindf = 1e-6,\n) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (abs(dfdx) < mindf && abs(fx) < mindf) {\n\t\t\treturn newtonIterate1d(df, x, steps, df)\n\t\t}\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterate2d(\n\tf1: (s: number, t: number) => number,\n\tf2: (s: number, t: number) => number,\n\tsStart: number,\n\ttStart: number,\n\tsteps?: number,\n): V3 | undefined {\n\tconst EPSILON = 1e-6\n\tsteps = steps || 4\n\tlet s = sStart,\n\t\tt = tStart,\n\t\tf1ts,\n\t\tf2ts\n\tdo {\n\t\t/*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f1(s, t)\n\t\tf2ts = f2(s, t)\n\t\t/*\n         let df1s = (f1(s + EPSILON, t) - f1ts) / EPSILON, df1t = (f1(s, t + EPSILON) - f1ts) / EPSILON,\n         df2s = (f2(s + EPSILON, t) - f2ts) / EPSILON, df2t = (f2(s, t + EPSILON) - f2ts) / EPSILON\n         let det = df1s * df2t - df1t * df2s\n         s = s - ( df2t * f1ts - df1t * f2ts) / det\n         t = t - (-df2s * f1ts + df1s * f2ts) / det\n         */\n\t\t// TODO: is this even more accurate?\n\t\tconst df1s = f1(s + EPSILON, t) - f1ts,\n\t\t\tdf1t = f1(s, t + EPSILON) - f1ts,\n\t\t\tdf2s = f2(s + EPSILON, t) - f2ts,\n\t\t\tdf2t = f2(s, t + EPSILON) - f2ts\n\t\tconst det = (df1s * df2t - df1t * df2s) / EPSILON\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts ** 2 + f2ts ** 2 > NLA_PRECISION)\n\tif (f1ts ** 2 + f2ts ** 2 > NLA_PRECISION) {\n\t\tconsole.log(f1ts ** 2 + f2ts ** 2)\n\t\treturn undefined\n\t}\n\treturn new V3(s, t, 0)\n}\nexport function newtonIterate2dWithDerivatives(\n\tf: (s: number, t: number) => number,\n\tg: (s: number, t: number) => number,\n\tsStart: number,\n\ttStart: number,\n\tsteps: int,\n\tdfds: (s: number, t: number) => number,\n\tdfdt: (s: number, t: number) => number,\n\tdgds: (s: number, t: number) => number,\n\tdgdt: (s: number, t: number) => number,\n): V3 | undefined {\n\tsteps = steps || 4\n\tlet s = sStart,\n\t\tt = tStart\n\tlet f1ts, f2ts\n\tdo {\n\t\t/*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f(s, t)\n\t\tf2ts = g(s, t)\n\t\tconst df1s = dfds(s, t),\n\t\t\tdf1t = dfdt(s, t),\n\t\t\tdf2s = dgds(s, t),\n\t\t\tdf2t = dgdt(s, t)\n\t\t// TODO: is this even more accurate?\n\t\tconst det = df1s * df2t - df1t * df2s\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts * f1ts + f2ts * f2ts > NLA_PRECISION / 32)\n\tif (!steps) {\n\t\t//console.log(f1ts * f1ts + f2ts * f2ts)\n\t\treturn undefined\n\t}\n\treturn V(s, t, 0)\n}\n\nexport const gaussLegendre24Xs: ReadonlyArray<number> = [\n\t-0.0640568928626056260850430826247450385909,\n\t0.0640568928626056260850430826247450385909,\n\t-0.1911188674736163091586398207570696318404,\n\t0.1911188674736163091586398207570696318404,\n\t-0.3150426796961633743867932913198102407864,\n\t0.3150426796961633743867932913198102407864,\n\t-0.4337935076260451384870842319133497124524,\n\t0.4337935076260451384870842319133497124524,\n\t-0.5454214713888395356583756172183723700107,\n\t0.5454214713888395356583756172183723700107,\n\t-0.6480936519369755692524957869107476266696,\n\t0.6480936519369755692524957869107476266696,\n\t-0.7401241915785543642438281030999784255232,\n\t0.7401241915785543642438281030999784255232,\n\t-0.8200019859739029219539498726697452080761,\n\t0.8200019859739029219539498726697452080761,\n\t-0.8864155270044010342131543419821967550873,\n\t0.8864155270044010342131543419821967550873,\n\t-0.9382745520027327585236490017087214496548,\n\t0.9382745520027327585236490017087214496548,\n\t-0.9747285559713094981983919930081690617411,\n\t0.9747285559713094981983919930081690617411,\n\t-0.9951872199970213601799974097007368118745,\n\t0.9951872199970213601799974097007368118745,\n]\nexport const gaussLegendre24Weights: ReadonlyArray<number> = [\n\t0.1279381953467521569740561652246953718517,\n\t0.1279381953467521569740561652246953718517,\n\t0.1258374563468282961213753825111836887264,\n\t0.1258374563468282961213753825111836887264,\n\t0.121670472927803391204463153476262425607,\n\t0.121670472927803391204463153476262425607,\n\t0.1155056680537256013533444839067835598622,\n\t0.1155056680537256013533444839067835598622,\n\t0.1074442701159656347825773424466062227946,\n\t0.1074442701159656347825773424466062227946,\n\t0.0976186521041138882698806644642471544279,\n\t0.0976186521041138882698806644642471544279,\n\t0.086190161531953275917185202983742667185,\n\t0.086190161531953275917185202983742667185,\n\t0.0733464814110803057340336152531165181193,\n\t0.0733464814110803057340336152531165181193,\n\t0.0592985849154367807463677585001085845412,\n\t0.0592985849154367807463677585001085845412,\n\t0.0442774388174198061686027482113382288593,\n\t0.0442774388174198061686027482113382288593,\n\t0.0285313886289336631813078159518782864491,\n\t0.0285313886289336631813078159518782864491,\n\t0.0123412297999871995468056670700372915759,\n\t0.0123412297999871995468056670700372915759,\n]\nexport function gaussLegendreQuadrature24(f: (x: number) => number, startT: number, endT: number): number {\n\t//let result = 0\n\t//for (let i = 0; i < gaussLegendre24Xs.length; i++) {\n\t//\t// gauss-legendre goes from -1 to 1, so we need to scale\n\t//\tlet t = startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT)\n\t//\tresult += gaussLegendre24Weights[i] * f(t)\n\t//}\n\t//const result = NLA\n\t//\t\t.arrayFromFunction(24, i => startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT))\n\t//\t\t.map((t, i) => gaussLegendre24Weights[i] * f(t))\n\t//\t\t.sumInPlaceTree()\n\t//99.54182500782605\n\t//99.54182500782602\n\t// again, [-1,1], so div by 2\n\t//return result // 2 * (endT - startT)\n\n\treturn (glq24_11(t => f(startT + ((t + 1) / 2) * (endT - startT))) / 2) * (endT - startT)\n}\n\n/**\n * Calculate the integral of f in the interval [-1;1].\n * @param f\n */\nexport function glq24_11(f: (x: number) => number): number {\n\treturn arrayFromFunction(24, i => gaussLegendre24Weights[i] * f(gaussLegendre24Xs[i])).sumInPlaceTree()\n}\nexport function glqInSteps(f: (x: number) => number, startT: number, endT: number, steps: int) {\n\tconst dt = (endT - startT) / steps\n\treturn (\n\t\t(arrayFromFunction(steps, i => glq24_11(t => f(startT + dt * i + ((t + 1) / 2) * dt))).sumInPlaceTree() / 2) *\n\t\tdt\n\t)\n}\n\nexport function midpointRuleQuadrature(\n\tf: (x: number) => number,\n\tstartT: number,\n\tendT: number,\n\tsteps: int = 32,\n): number {\n\tconst dt = (endT - startT) / steps\n\treturn (\n\t\tarrayFromFunction(steps, i => startT + dt / 2 + dt * i)\n\t\t\t.map(f)\n\t\t\t.sumInPlaceTree() * dt\n\t)\n}\n\nexport function callsce(name: string, ...params: any[]) {\n\treturn name + '(' + params.map(SCE).join(',') + ')'\n}\n","import { Equalable, JavaMap as CustomMap } from 'javasetmap.ts'\r\nimport {\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tdefaultRoundFunction,\r\n\teq,\r\n\teq0,\r\n\teq2,\r\n\tFloatArray,\r\n\tint,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n} from './NLA'\r\n\r\n/**\r\n * Immutable 3d-vector/point.\r\n */\r\nexport class V3 implements Equalable {\r\n\tstatic readonly O: V3 = new V3(0, 0, 0)\r\n\tstatic readonly X: V3 = new V3(1, 0, 0)\r\n\tstatic readonly Y: V3 = new V3(0, 1, 0)\r\n\tstatic readonly Z: V3 = new V3(0, 0, 1)\r\n\tstatic readonly XY: V3 = new V3(1, 1, 0)\r\n\tstatic readonly XYZ: V3 = new V3(1, 1, 1)\r\n\tstatic readonly INF: V3 = new V3(Infinity, Infinity, Infinity)\r\n\tstatic readonly UNITS: V3[] = [V3.X, V3.Y, V3.Z]\r\n\tstatic readonly NAMEMAP = new CustomMap<V3, string>()\r\n\t\t.set(V3.O, 'V3.O')\r\n\t\t.set(V3.X, 'V3.X')\r\n\t\t.set(V3.Y, 'V3.Y')\r\n\t\t.set(V3.Z, 'V3.Z')\r\n\t\t.set(V3.XYZ, 'V3.XYZ')\r\n\t\t.set(V3.INF, 'V3.INF')\r\n\r\n\tconstructor(readonly x: number, readonly y: number, readonly z: number) {\r\n\t\tassertNumbers(x, y, z)\r\n\t}\r\n\r\n\tstatic random(): V3 {\r\n\t\treturn new V3(Math.random(), Math.random(), Math.random())\r\n\t}\r\n\r\n\tstatic parallel(a: V3, b: V3) {\r\n\t\treturn a.dot(b) - a.length() * b.length()\r\n\t}\r\n\r\n\t/**\r\n\t * See http://math.stackexchange.com/questions/44689/how-to-find-a-random-axis-or-unit-vector-in-3d\r\n\t * @returns A random point on the unit sphere with uniform distribution across the surface.\r\n\t */\r\n\tstatic randomUnit(): V3 {\r\n\t\tconst zRotation = Math.random() * 2 * Math.PI\r\n\t\tconst z = Math.random() * 2 - 1\r\n\t\tconst zRadius = Math.sqrt(1 - z ** 2)\r\n\t\treturn new V3(zRadius * Math.cos(zRotation), zRadius * Math.sin(zRotation), z)\r\n\t}\r\n\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Documentation stub. You want {@see V3#sphere}\r\n\t */\r\n\tstatic fromAngles(theta: number, phi: number): V3 {\r\n\t\tthrow new Error()\r\n\t}\r\n\r\n\tstatic fromFunction(f: (dim: number) => number) {\r\n\t\treturn new V3(f(0), f(1), f(2))\r\n\t}\r\n\r\n\tstatic min(a: V3, b: V3): V3 {\r\n\t\treturn new V3(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z))\r\n\t}\r\n\r\n\tstatic max(a: V3, b: V3): V3 {\r\n\t\treturn new V3(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z))\r\n\t}\r\n\r\n\tstatic lerp(a: V3, b: V3, t: number): V3 {\r\n\t\treturn new V3(a.x * (1 - t) + b.x * t, a.y * (1 - t) + b.y * t, a.z * (1 - t) + b.z * t)\r\n\t}\r\n\r\n\tstatic fromArray(a: number[]): V3 {\r\n\t\treturn new V3(a[0], a[1], a[2])\r\n\t}\r\n\r\n\tstatic angleBetween(a: V3, b: V3): number {\r\n\t\treturn a.angleTo(b)\r\n\t}\r\n\r\n\tstatic zip(f: (...args: number[]) => number, ...args: V3[]): V3 {\r\n\t\tassert(f instanceof Function)\r\n\t\treturn new V3(\r\n\t\t\tf.apply(undefined, args.map(x => x.x)),\r\n\t\t\tf.apply(undefined, args.map(x => x.y)),\r\n\t\t\tf.apply(undefined, args.map(x => x.z)),\r\n\t\t)\r\n\t}\r\n\r\n\tstatic normalOnPoints(a: V3, b: V3, c: V3): V3 {\r\n\t\tassertVectors(a, b, c)\r\n\t\treturn a.to(b).cross(a.to(c))\r\n\t}\r\n\r\n\tstatic add(...vs: V3[]): V3 {\r\n\t\tassertVectors(...vs)\r\n\t\tlet x = 0,\r\n\t\t\ty = 0,\r\n\t\t\tz = 0\r\n\t\tlet i = vs.length\r\n\t\twhile (i--) {\r\n\t\t\tx += vs[i].x\r\n\t\t\ty += vs[i].y\r\n\t\t\tz += vs[i].z\r\n\t\t}\r\n\t\treturn new V3(x, y, z)\r\n\t}\r\n\r\n\tstatic sub(...vs: V3[]): V3 {\r\n\t\tassertVectors(...vs)\r\n\t\tlet x = vs[0].x,\r\n\t\t\ty = vs[0].y,\r\n\t\t\tz = vs[0].z\r\n\t\tlet i = vs.length\r\n\t\twhile (i--) {\r\n\t\t\tx -= vs[i].x\r\n\t\t\ty -= vs[i].y\r\n\t\t\tz -= vs[i].z\r\n\t\t}\r\n\t\treturn new V3(x, y, z)\r\n\t}\r\n\r\n\t/**\r\n\t * Pack an array of V3s into an array of numbers (Float32Array by default).\r\n\t *\r\n\t * @param v3arr source array\r\n\t * @param dest destination array. If provided, must be large enough to fit v3count items.\r\n\t * @param srcStart starting index in source array\r\n\t * @param destStart starting index in destination array\r\n\t * @param v3count Number of V3s to copy.\r\n\t * @returns Packed array.\r\n\t */\r\n\tstatic pack<T extends FloatArray = Float32Array>(\r\n\t\tv3arr: ReadonlyArray<V3>,\r\n\t\tdest?: T,\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = v3arr.length - srcStart,\r\n\t): T {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tconst result = dest || (new Float32Array(3 * v3count) as any) // TODO\r\n\t\tassert(\r\n\t\t\tresult.length - destStart >= v3count * 3,\r\n\t\t\t'dest.length - destStart >= v3count * 3',\r\n\t\t\tresult.length,\r\n\t\t\tdestStart,\r\n\t\t\tv3count * 3,\r\n\t\t)\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tconst v = v3arr[srcIndex++]\r\n\t\t\tresult[destIndex++] = v.x\r\n\t\t\tresult[destIndex++] = v.y\r\n\t\t\tresult[destIndex++] = v.z\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic unpack(\r\n\t\tpackedArray: ArrayLike<number>,\r\n\t\tdest?: V3[],\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = (packedArray.length - srcStart) / 3,\r\n\t) {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tdest = dest || new Array(v3count)\r\n\t\tassert(dest.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tdest[destIndex++] = new V3(packedArray[srcIndex++], packedArray[srcIndex++], packedArray[srcIndex++])\r\n\t\t}\r\n\t\treturn dest\r\n\t}\r\n\r\n\tstatic packXY<T extends FloatArray = Float32Array>(\r\n\t\tv3arr: V3[],\r\n\t\tdest?: T,\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = v3arr.length - srcStart,\r\n\t): T {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tconst result = dest || (new Float32Array(2 * v3count) as any)\r\n\t\tassert(result.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tconst v = v3arr[srcIndex++]\r\n\t\t\tresult[destIndex++] = v.x\r\n\t\t\tresult[destIndex++] = v.y\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic unpackXY(\r\n\t\tsrc: FloatArray,\r\n\t\tdest?: V3[],\r\n\t\tsrcStart: int = 0,\r\n\t\tdestStart: int = 0,\r\n\t\tv3count: int = Math.min(src.length / 2, (dest && dest.length) || Infinity) - destStart,\r\n\t): V3[] {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tdest = dest || new Array(v3count)\r\n\t\tassert(dest.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\t\tassert(src.length - srcStart >= v3count * 2, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tdest[destIndex++] = new V3(src[srcIndex++], src[srcIndex++], 0)\r\n\t\t}\r\n\t\treturn dest\r\n\t}\r\n\r\n\tstatic perturbed(v: V3, delta?: number): V3 {\r\n\t\treturn v.perturbed(delta)\r\n\t}\r\n\r\n\tstatic polar(radius: number, phi: raddd, z: number = 0): V3 {\r\n\t\treturn new V3(radius * Math.cos(phi), radius * Math.sin(phi), z)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param longitude angle in XY plane\r\n\t * @param latitude \"height\"/z dir angle\r\n\t */\r\n\tstatic sphere(longitude: raddd, latitude: raddd, length = 1): V3 {\r\n\t\treturn new V3(\r\n\t\t\tlength * Math.cos(latitude) * Math.cos(longitude),\r\n\t\t\tlength * Math.cos(latitude) * Math.sin(longitude),\r\n\t\t\tlength * Math.sin(latitude),\r\n\t\t)\r\n\t}\r\n\r\n\tstatic inverseLerp(a: V3, b: V3, x: V3) {\r\n\t\tconst ab = a.to(b)\r\n\t\treturn a.to(x).dot(ab) / ab.squared()\r\n\t}\r\n\r\n\tget [0]() {\r\n\t\treturn this.x\r\n\t}\r\n\tget [1]() {\r\n\t\treturn this.y\r\n\t}\r\n\tget [2]() {\r\n\t\treturn this.z\r\n\t}\r\n\r\n\tget u() {\r\n\t\treturn this.x\r\n\t}\r\n\tget v() {\r\n\t\treturn this.y\r\n\t}\r\n\r\n\tperturbed(delta: number = NLA_PRECISION * 0.8): V3 {\r\n\t\treturn this.map(x => x + (Math.random() - 0.5) * delta)\r\n\t}\r\n\r\n\t*[Symbol.iterator]() {\r\n\t\tyield this.x\r\n\t\tyield this.y\r\n\t\tyield this.z\r\n\t}\r\n\r\n\te(index: int): number {\r\n\t\tassert(index >= 0 && index < 3)\r\n\t\treturn 0 == index ? this.x : 1 == index ? this.y : this.z\r\n\t}\r\n\r\n\tnegated(): V3 {\r\n\t\treturn new V3(-this.x, -this.y, -this.z)\r\n\t}\r\n\r\n\tabs(): V3 {\r\n\t\treturn new V3(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\r\n\t}\r\n\r\n\tplus(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn new V3(this.x + a.x, this.y + a.y, this.z + a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Hadarmard product (or Schur product)\r\n\t * Element-wise multiplication of two vectors.\r\n\t * @see https://en.wikipedia.org/wiki/Hadamard_product_(matrices)\r\n\t *\r\n\t */\r\n\tschur(a: V3): V3 {\r\n\t\treturn new V3(this.x * a.x, this.y * a.y, this.z * a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Element-wise division.\r\n\t */\r\n\tdivv(a: V3): V3 {\r\n\t\treturn new V3(this.x / a.x, this.y / a.y, this.z / a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * See also {@link to} which is a.minus(this)\r\n\t */\r\n\tminus(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn new V3(this.x - a.x, this.y - a.y, this.z - a.z)\r\n\t}\r\n\r\n\tto(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn a.minus(this)\r\n\t}\r\n\r\n\ttimes(factor: number): V3 {\r\n\t\tassertNumbers(factor)\r\n\t\treturn new V3(this.x * factor, this.y * factor, this.z * factor)\r\n\t}\r\n\r\n\tdiv(a: number): V3 {\r\n\t\tassertNumbers(a)\r\n\t\treturn new V3(this.x / a, this.y / a, this.z / a)\r\n\t}\r\n\r\n\t/**\r\n\t * Dot product.\r\n\t * @see https://en.wikipedia.org/wiki/Dot_product\r\n\t */\r\n\tdot(a: V3): number {\r\n\t\tassertInst(V3, a)\r\n\t\treturn this.x * a.x + this.y * a.y + this.z * a.z\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolate\r\n\t */\r\n\tlerp(b: V3, t: number): V3 {\r\n\t\tassertVectors(b)\r\n\t\tassertNumbers(t)\r\n\t\treturn V3.lerp(this, b, t)\r\n\t}\r\n\r\n\tsquared(): number {\r\n\t\treturn this.dot(this)\r\n\t}\r\n\r\n\tdistanceTo(a: V3): number {\r\n\t\tassertVectors(a)\r\n\t\t//return this.minus(a).length()\r\n\t\treturn Math.hypot(this.x - a.x, this.y - a.y, this.z - a.z)\r\n\t}\r\n\r\n\tdistanceToSquared(a: V3): number {\r\n\t\tassertVectors(a)\r\n\t\treturn this.minus(a).squared()\r\n\t}\r\n\r\n\t///**\r\n\t// * See also {@see #setTo} for the individual\r\n\t// *\r\n\t// * @param v\r\n\t// */\r\n\t//assign(v) {\r\n\t//\tassertVectors(v)\r\n\t//\tthis.x = v.x\r\n\t//\tthis.y = v.y\r\n\t//\tthis.z = v.z\r\n\t//}\r\n\t//\r\n\t///**\r\n\t// * See also {@see #assign} for the V3 version\r\n\t// *\r\n\t// * @param x\r\n\t// * @param y\r\n\t// * @param z\r\n\t// */\r\n\t//setTo(x, y, z = 0) {\r\n\t//\tthis.x = x\r\n\t//\tthis.y = y\r\n\t//\tthis.z = z\r\n\t//}\r\n\r\n\ttoSource(): string {\r\n\t\treturn V3.NAMEMAP.get(this) || this.toString()\r\n\t}\r\n\r\n\tnonParallelVector(): V3 {\r\n\t\tconst abs = this.abs()\r\n\t\tif (abs.x <= abs.y && abs.x <= abs.z) {\r\n\t\t\treturn V3.X\r\n\t\t} else if (abs.y <= abs.x && abs.y <= abs.z) {\r\n\t\t\treturn V3.Y\r\n\t\t} else {\r\n\t\t\treturn V3.Z\r\n\t\t}\r\n\t}\r\n\r\n\tslerp(b: V3, t: number): V3 {\r\n\t\tassertVectors(b)\r\n\t\tassertNumbers(t)\r\n\t\tconst sin = Math.sin\r\n\t\tconst omega = this.angleTo(b)\r\n\t\treturn this.times(sin((1 - t) * omega) / sin(omega)).plus(b.times(sin(t * omega) / sin(omega)))\r\n\t}\r\n\r\n\tmin(b: V3): V3 {\r\n\t\treturn new V3(Math.min(this.x, b.x), Math.min(this.y, b.y), Math.min(this.z, b.z))\r\n\t}\r\n\r\n\tmax(b: V3): V3 {\r\n\t\treturn new V3(Math.max(this.x, b.x), Math.max(this.y, b.y), Math.max(this.z, b.z))\r\n\t}\r\n\r\n\tequals(v: any): boolean {\r\n\t\treturn this == v || (this.x == v.x && this.y == v.y && this.z == v.z)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * The cross product is defined as:\r\n\t * a x b = |a| * |b| * sin(phi) * n\r\n\t * where |.| is the euclidean norm, phi is the angle between the vectors\r\n\t * and n is a unit vector perpendicular to both a and b.\r\n\t *\r\n\t * The cross product is zero for parallel vectors.\r\n\t * @see https://en.wikipedia.org/wiki/Cross_product\r\n\t */\r\n\tcross(v: V3): V3 {\r\n\t\treturn new V3(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x)\r\n\t}\r\n\r\n\tminElement(): number {\r\n\t\treturn Math.min(this.x, this.y, this.z)\r\n\t}\r\n\r\n\tmaxElement(): number {\r\n\t\treturn Math.max(this.x, this.y, this.z)\r\n\t}\r\n\r\n\ttoArray(n: int = 3): number[] {\r\n\t\treturn [this.x, this.y, this.z].slice(0, n)\r\n\t}\r\n\r\n\t/**\r\n\t * Get a perpendicular vector.\r\n\t * For vectors in the XY-Plane, returns vector rotated 90° CCW.\r\n\t */\r\n\tgetPerpendicular(): V3 {\r\n\t\tif (eq0(this.x) && eq0(this.y)) {\r\n\t\t\tif (eq0(this.z)) {\r\n\t\t\t\tthrow new Error('zero vector')\r\n\t\t\t}\r\n\t\t\t// v is Vector(0, 0, v.z)\r\n\t\t\treturn V3.Y\r\n\t\t}\r\n\t\treturn new V3(-this.y, this.x, 0)\r\n\t}\r\n\r\n\t//noinspection JSMethodCanBeStatic\r\n\tdim(): int {\r\n\t\treturn 3\r\n\t}\r\n\r\n\tels(): number[] {\r\n\t\treturn [this.x, this.y, this.z]\r\n\t}\r\n\r\n\tangleXY(): number {\r\n\t\treturn Math.atan2(this.y, this.x)\r\n\t}\r\n\r\n\tlengthXY(): number {\r\n\t\treturn Math.hypot(this.x, this.y)\r\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y)\r\n\t}\r\n\r\n\tsquaredXY(): number {\r\n\t\treturn this.x * this.x + this.y * this.y\r\n\t}\r\n\r\n\txy(): V3 {\r\n\t\treturn new V3(this.x, this.y, 0)\r\n\t}\r\n\r\n\t/**\r\n\t * Transform this vector element-wise by way of function f. Returns V3(f(x), f(y), f(z))\r\n\t * @param f function to apply to elements (number -> number)\r\n\t */\r\n\tmap(f: (el: number, dim: 'x' | 'y' | 'z') => number): V3 {\r\n\t\treturn new V3(f(this.x, 'x'), f(this.y, 'y'), f(this.z, 'z'))\r\n\t}\r\n\r\n\ttoString(roundFunction?: (x: number) => any): string {\r\n\t\troundFunction = roundFunction || defaultRoundFunction\r\n\t\treturn V3.NAMEMAP.get(this) || 'V(' + [this.x, this.y, this.z].map(roundFunction).join(', ') + ')' //+ this.id\r\n\t}\r\n\r\n\tangleTo(b: V3): number {\r\n\t\tassert(1 == arguments.length)\r\n\t\tassertVectors(b)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!b.likeO())\r\n\t\treturn Math.acos(Math.min(1, this.dot(b) / this.length() / b.length()))\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * phi = angle between A and B\r\n\t * alpha = angle between n and normal1\r\n\t *\r\n\t * A . B = ||A|| * ||B|| * cos(phi)\r\n\t * A x B = ||A|| * ||B|| * sin(phi) * n (n = unit vector perpendicular)\r\n\t * (A x B) . normal1 = ||A|| * ||B|| * sin(phi) * cos(alpha)\r\n\t */\r\n\tangleRelativeNormal(vector: V3, normal1: V3): number {\r\n\t\tassert(2 == arguments.length)\r\n\t\tassertVectors(vector, normal1)\r\n\t\tassertf(() => normal1.hasLength(1))\r\n\t\t//assert(vector.isPerpendicularTo(normal1), 'vector.isPerpendicularTo(normal1)' + vector.sce + normal1.sce)\r\n\t\t//assert(this.isPerpendicularTo(normal1), 'this.isPerpendicularTo(normal1)' + this.dot(vector)) //\r\n\t\t// -0.000053600770598683675\r\n\t\treturn Math.atan2(this.cross(vector).dot(normal1), this.dot(vector))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true iff this is parallel to vector, i.e. this * s == vector, where s is a positive or negative number,\r\n\t * using eq. Throw a DebugError\r\n\t * - if vector is not a Vector or\r\n\t * - if this has a length of 0 or\r\n\t * - if vector has a length of 0\r\n\t */\r\n\tisParallelTo(vector: V3): boolean {\r\n\t\tassertVectors(vector)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!vector.likeO())\r\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\r\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\r\n\t\tconst dot = this.dot(vector)\r\n\t\treturn eq(this.squared() * vector.squared(), dot * dot)\r\n\t}\r\n\r\n\tisPerpendicularTo(vector: V3): boolean {\r\n\t\tassertVectors(vector)\r\n\t\tassert(!this.likeO(), '!this.likeO()')\r\n\t\tassert(!vector.likeO(), '!vector.likeO()')\r\n\t\treturn eq0(this.dot(vector))\r\n\t}\r\n\r\n\tisReverseDirTo(other: V3): boolean {\r\n\t\tassertVectors(other)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!other.likeO())\r\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\r\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\r\n\t\tconst dot = this.dot(other)\r\n\t\treturn eq(Math.sqrt(this.squared() * other.squared()), dot)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this Vector, i.e. the euclidean norm.\r\n\t *\r\n\t * Note that the partial derivatives of the euclidean norm at point x are equal to the\r\n\t * components of the unit vector x.\r\n\t */\r\n\tlength(): number {\r\n\t\treturn Math.hypot(this.x, this.y, this.z)\r\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Definition: V3.likeO == V3.like(V3.O)\r\n\t */\r\n\tlikeO(): boolean {\r\n\t\treturn this.like(V3.O)\r\n\t}\r\n\r\n\t/**\r\n\t * eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\r\n\t * @param obj\r\n\t */\r\n\tlike(obj: any): boolean {\r\n\t\tif (obj === this) return true\r\n\t\tif (!(obj instanceof V3)) return false\r\n\t\treturn eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\r\n\t}\r\n\r\n\t/**\r\n\t * equivalent to this.like(v) || this.negated().like(v)\r\n\t */\r\n\tlikeOrReversed(v: V3): boolean {\r\n\t\treturn eq(Math.abs(this.dot(v)), Math.sqrt(this.squared() * v.squared()))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\r\n\t * DebugError if this has a length of 0.\r\n\t */\r\n\tunit(): V3 {\r\n\t\tassert(!this.likeO(), 'cannot normalize zero vector')\r\n\t\treturn this.div(this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Documentation stub. You want {@link unit}\r\n\t */\r\n\tnormalized(): V3 {\r\n\t\tthrow new Error('documentation stub. use .unit()')\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new V3 equal to this scaled so that its length is equal to newLength.\r\n\t *\r\n\t * Passing a negative newLength will flip the vector.\r\n\t */\r\n\ttoLength(newLength: number): V3 {\r\n\t\tassertNumbers(newLength)\r\n\t\treturn this.times(newLength / this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector which is the projection of this vector onto the passed vector.\r\n\t * Examples\r\n\t *\r\n\t * \tV(3, 4).projectedOn(V(1, 0)) // returns V(3, 0)\r\n\t * \tV(3, 4).projectedOn(V(2, 0)) // returns V(3, 0)\r\n\t * \tV(3, 4).projectedOn(V(-1, 0)) // returns V(-3, 0)\r\n\t * \tV(3, 4).projectedOn(V(0, 1)) // returns V(0, 4)\r\n\t * \tV(3, 4).projectedOn(V(1, 1)) // returns\r\n\t */\r\n\tprojectedOn(b: V3): V3 {\r\n\t\tassertVectors(b)\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn b.times(this.dot(b) / b.dot(b))\r\n\t}\r\n\r\n\trejectedFrom(b: V3): V3 {\r\n\t\tassertVectors(b)\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\r\n\t}\r\n\r\n\trejectedFrom1(b1: V3): V3 {\r\n\t\tassertVectors(b1)\r\n\t\tassert(b1.hasLength(1))\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn this.minus(b1.times(this.dot(b1)))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this vector rejected from the unit vector b.\r\n\t *\r\n\t *       /|\r\n\t * this / |    ^\r\n\t *     /__|    | b\r\n\t *      r\r\n\t *  Returns length of r (r === this.rejectedFrom(b))\r\n\t */\r\n\trejectedLength(b: V3): number {\r\n\t\tassertVectors(b)\r\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b) ** 2 / b.dot(b))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this vector rejected from the unit vector b1.\r\n\t *\r\n\t *       /|\r\n\t * this / |    ^\r\n\t *     /__|    | b1\r\n\t *      r\r\n\t *  Returns length of r (r === this.rejectedFrom(b1))\r\n\t */\r\n\trejected1Length(b1: V3): number {\r\n\t\tassertVectors(b1)\r\n\t\tassert(b1.hasLength(1))\r\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b1) ** 2)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true iff the length() of this vector is equal to 'length', using eq\r\n\t * @example\r\n\t * V(3, 4).hasLength(5) === true\r\n\t * @example\r\n\t * V(1, 1).hasLength(1) === false\r\n\t */\r\n\thasLength(length: number): boolean {\r\n\t\tassertNumbers(length)\r\n\t\treturn eq(length, this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the sum of the absolute values of the components of this vector.\r\n\t * E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\r\n\t */\r\n\tabsSum(): number {\r\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)\r\n\t}\r\n\r\n\t/**\r\n\t * returns min(|x|, |y|, |z|)\r\n\t */\r\n\tminAbsElement(): number {\r\n\t\treturn Math.min(Math.abs(this.x), Math.abs(this.y), Math.min(this.z))\r\n\t}\r\n\r\n\t/**\r\n\t * returns max(|x|, |y|, |z|)\r\n\t */\r\n\tmaxAbsElement(): number {\r\n\t\treturn Math.max(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\r\n\t}\r\n\r\n\tmaxAbsDim(): 0 | 1 | 2 {\r\n\t\tconst xAbs = Math.abs(this.x),\r\n\t\t\tyAbs = Math.abs(this.y),\r\n\t\t\tzAbs = Math.abs(this.z)\r\n\t\treturn xAbs >= yAbs ? (xAbs >= zAbs ? 0 : 2) : yAbs >= zAbs ? 1 : 2\r\n\t}\r\n\r\n\tminAbsDim(): 0 | 1 | 2 {\r\n\t\tconst xAbs = Math.abs(this.x),\r\n\t\t\tyAbs = Math.abs(this.y),\r\n\t\t\tzAbs = Math.abs(this.z)\r\n\t\treturn xAbs < yAbs ? (xAbs < zAbs ? 0 : 2) : yAbs < zAbs ? 1 : 2\r\n\t}\r\n\r\n\twithElement(dim: 'x' | 'y' | 'z', el: number) {\r\n\t\tassert(['x', 'y', 'z'].includes(dim), '' + dim)\r\n\t\tassertNumbers(el)\r\n\t\tif ('x' == dim) {\r\n\t\t\treturn new V3(el, this.y, this.z)\r\n\t\t}\r\n\t\tif ('y' == dim) {\r\n\t\t\treturn new V3(this.x, el, this.z)\r\n\t\t}\r\n\t\treturn new V3(this.x, this.y, el)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\tfunction floatHashCode(f: number) {\r\n\t\t\treturn ~~(f * (1 << 28))\r\n\t\t}\r\n\r\n\t\treturn ~~((floatHashCode(this.x) * 31 + floatHashCode(this.y)) * 31 + floatHashCode(this.z))\r\n\t}\r\n\r\n\t/**\r\n\t * as sadjkh akjhs djkahsd kjahs k skjhdakjh dkjash dkjahs kjdhas kj dhkjahsd kjahs dkjahs dkjhas kjdkajs\r\n\t * hdkljhfkjahdslfghal dasd\r\n\t *\r\n\t * * asdjklas dasds\r\n\t */\r\n\thashCodes() {\r\n\t\t//function floatHashCode(f) {\r\n\t\t//\treturn ~~(f * (1 << 28))\r\n\t\t//}\r\n\r\n\t\t// compare hashCode.floatHashCode\r\n\t\t// the following ops are equivalent to\r\n\t\t// floatHashCode((el - NLA_PRECISION) % (2 * NLA_PRECISION))\r\n\t\t// this results in the hashCode for the (out of 8 possible) cube with the lowest hashCode\r\n\t\t// the other 7 can be calculated by adding constants\r\n\t\tconst xHC = ~~(this.x * (1 << 28) - 0.5),\r\n\t\t\tyHC = ~~(this.y * (1 << 28) - 0.5),\r\n\t\t\tzHC = ~~(this.z * (1 << 28) - 0.5),\r\n\t\t\thc = ~~((xHC * 31 + yHC) * 31 + zHC)\r\n\t\treturn [\r\n\t\t\t~~hc,\r\n\t\t\t~~(hc + 961),\r\n\t\t\t~~(hc + 31),\r\n\t\t\t~~(hc + 31 + 961),\r\n\t\t\t~~(hc + 1),\r\n\t\t\t~~(hc + 1 + 961),\r\n\t\t\t~~(hc + 1 + 31),\r\n\t\t\t~~(hc + 1 + 31 + 961),\r\n\t\t]\r\n\t}\r\n\r\n\t//static areDisjoint(it: Iterable<V3>): boolean {\r\n\t//\tconst vSet = new CustomSet\r\n\t//\tfor (const v of it) {\r\n\t//\t\tif (!v.equals(vSet.canonicalizeLike(v))) {\r\n\t//\t\t\t// like value already in set\r\n\t//\t\t\treturn false\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\treturn true\r\n\t//}\r\n\r\n\tcompareTo(other: V3): number {\r\n\t\tif (this.x != other.x) {\r\n\t\t\treturn this.x - other.x\r\n\t\t} else if (this.y != other.y) {\r\n\t\t\treturn this.y - other.y\r\n\t\t} else {\r\n\t\t\treturn this.z - other.z\r\n\t\t}\r\n\t}\r\n\r\n\tcompareTo2(other: V3, eps: number = NLA_PRECISION): number {\r\n\t\tif (!eq2(this.x, other.x, eps)) {\r\n\t\t\treturn this.x - other.x\r\n\t\t} else if (!eq2(this.y, other.y, eps)) {\r\n\t\t\treturn this.y - other.y\r\n\t\t} else if (!eq2(this.z, other.z, eps)) {\r\n\t\t\treturn this.z - other.z\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\r\n\ttoAngles(): { theta: raddd; phi: raddd } {\r\n\t\treturn {\r\n\t\t\ttheta: Math.atan2(this.y, this.x),\r\n\t\t\tphi: Math.asin(this.z / this.length()),\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility method for creating V3s\r\n *\r\n * Example usage:\r\n *\r\n *     V(1, 2, 3)\r\n *     V([1, 2, 3])\r\n *     V({ x: 1, y: 2, z: 3 })\r\n *     V(1, 2) * assumes z=0\r\n *     V([1, 2]) // assumes z=0\r\n *\r\n */\r\nexport function V(x: number, y: number, z?: number): V3\r\nexport function V(arr: [number, number, number] | [number, number]): V3\r\nexport function V(obj: { x: number; y: number; z?: number }): V3\r\nexport function V(a: any, b?: any, c?: any): V3 {\r\n\tif (arguments.length == 3) {\r\n\t\treturn new V3(parseFloat(a), parseFloat(b), parseFloat(c))\r\n\t} else if (arguments.length == 2) {\r\n\t\treturn new V3(parseFloat(a), parseFloat(b), 0)\r\n\t} else if (arguments.length == 1) {\r\n\t\tif (typeof a == 'object') {\r\n\t\t\tif (a instanceof V3) {\r\n\t\t\t\t// immutable, so\r\n\t\t\t\treturn a\r\n\t\t\t} else if (a instanceof Array || a instanceof Float32Array || a instanceof Float64Array) {\r\n\t\t\t\tif (2 == a.length) {\r\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), 0)\r\n\t\t\t\t} else if (3 == a.length) {\r\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), parseFloat(a[2]))\r\n\t\t\t\t}\r\n\t\t\t} else if ('x' in a && 'y' in a) {\r\n\t\t\t\treturn new V3(parseFloat(a.x), parseFloat(a.y), 'z' in a ? parseFloat(a.z) : 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tthrow new Error('invalid arguments' + arguments)\r\n}\r\n","import { M4 } from './M4'\nimport { callsce, raddd } from './NLA'\nimport { V3 } from './V3'\n\nexport const P3YZ = { normal1: V3.X, w: 0 }\nexport const P3ZX = { normal1: V3.Y, w: 0 }\nexport const P3XY = { normal1: V3.Z, w: 0 }\n\nexport abstract class Transformable {\n\tmirror(plane: { normal1: V3; w: number }): this {\n\t\treturn this.transform(M4.mirror(plane))\n\t}\n\n\tmirroredX(): this {\n\t\treturn this.mirror(P3YZ)\n\t}\n\n\tmirrorY(): this {\n\t\treturn this.mirror(P3ZX)\n\t}\n\n\tmirrorZ(): this {\n\t\treturn this.mirror(P3XY)\n\t}\n\n\tproject(plane: { normal1: V3; w: number }): this {\n\t\treturn this.transform(M4.project(plane))\n\t}\n\n\tprojectXY(): this {\n\t\treturn this.transform(M4.project(P3XY))\n\t}\n\n\tprojectYZ(): this {\n\t\treturn this.transform(M4.project(P3YZ))\n\t}\n\n\tprojectZX(): this {\n\t\treturn this.transform(M4.project(P3ZX))\n\t}\n\n\ttranslate(x: number, y?: number, z?: number): this\n\ttranslate(v: V3): this\n\ttranslate(...args: any[]): this {\n\t\treturn this.transform(M4.translate.apply(undefined, args), callsce.call(undefined, '.translate', ...args))\n\t}\n\n\tscale(x: number, y?: number, z?: number): this\n\tscale(f: V3): this\n\tscale(...args: any[]): this {\n\t\treturn this.transform(M4.scale.apply(undefined, args), callsce.call(undefined, '.scale', ...args))\n\t}\n\n\trotateX(radians: raddd): this {\n\t\treturn this.transform(M4.rotateX(radians), `.rotateX(${radians})`)\n\t}\n\n\trotateY(radians: raddd): this {\n\t\treturn this.transform(M4.rotateY(radians), `.rotateY(${radians})`)\n\t}\n\n\trotateZ(radians: raddd): this {\n\t\treturn this.transform(M4.rotateZ(radians), `.rotateZ(${radians})`)\n\t}\n\n\trotate(rotationCenter: V3, rotationAxis: V3, radians: raddd): this {\n\t\treturn this.transform(\n\t\t\tM4.rotateLine(rotationCenter, rotationAxis, radians),\n\t\t\tcallsce('.rotate', rotationCenter, rotationAxis, radians),\n\t\t)\n\t}\n\n\trotateAB(from: V3, to: V3): this {\n\t\treturn this.transform(M4.rotateAB(from, to), callsce('.rotateAB', from, to))\n\t}\n\n\teulerZXZ(alpha: raddd, beta: raddd, gamma: raddd): this {\n\t\tthrow new Error()\n\t\t//return this.transform(M4.eulerZXZ(alpha, beta, gamma))\n\t}\n\n\tshearX(y: number, z: number): this {\n\t\t// prettier-ignore\n\t\treturn this.transform(new M4([\n\t\t\t1, y, z, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1]))\n\t}\n\n\tfoo(): this {\n\t\treturn this.transform(M4.FOO)\n\t}\n\n\tbar(): this {\n\t\treturn this.transform(M4.BAR)\n\t}\n\n\tabstract transform(m4: M4, desc?: string): this\n\n\tvisit<R>(visitor: { [name: string]: (this: Transformable) => R }): R\n\tvisit<R, A>(visitor: { [name: string]: (this: Transformable, a: A) => R }, a: A): R\n\tvisit<R, A, B>(visitor: { [name: string]: (this: Transformable, a: A, b: B) => R }, a: A, b: B): R\n\tvisit<R, A, B, C>(visitor: { [name: string]: (this: Transformable, a: A, b: B, c: C) => R }, a: A, b: B, c: C): R\n\tvisit<R, A, B, C, D>(\n\t\tvisitor: { [name: string]: (this: Transformable, a: A, b: B, c: C, d: D) => R },\n\t\ta: A,\n\t\tb: B,\n\t\tc: C,\n\t\td: D,\n\t): R\n\tvisit(visitor: { [name: string]: (this: Transformable, ...args: any[]) => any }, ...args: any[]) {\n\t\tlet proto = Object.getPrototypeOf(this)\n\t\t// walk up the prototype chain until we find a defined function in o\n\t\twhile (!visitor.hasOwnProperty(proto.constructor.name) && proto !== Transformable.prototype) {\n\t\t\tproto = Object.getPrototypeOf(proto)\n\t\t}\n\t\tif (visitor.hasOwnProperty(proto.constructor.name)) {\n\t\t\treturn visitor[proto.constructor.name].apply(this, args)\n\t\t} else {\n\t\t\tthrow new Error('No implementation for ' + this.constructor.name)\n\t\t}\n\t}\n}\n","import { JavaMap } from 'javasetmap.ts'\r\n\r\nimport { Matrix } from './Matrix'\r\nimport {\r\n\taddOwnProperties,\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertInts,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tcallsce,\r\n\tDEG,\r\n\teq,\r\n\teq0,\r\n\tint,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n\tsolveCubicReal2,\r\n} from './NLA'\r\nimport { Transformable } from './Transformable'\r\nimport { V3 } from './V3'\r\nimport { VV } from './Vector'\r\n\r\nconst { PI, abs } = Math\r\n\r\n// tslint:enable:member-ordering\r\nexport class M4 extends Matrix {\r\n\t/**\r\n\t * A simple (consists of integers), regular, non-orthogonal matrix, useful mainly for testing.\r\n\t * M4.BAR = M4.FOO.inverse()\r\n\t */\r\n\t// prettier-ignore\r\n\tstatic readonly FOO = new M4(\r\n\t\t0,   1,   1,    2,\r\n\t\t0.3, 0.4, 0.8, 13,\r\n\t\t2.1, 3.4, 5.5,  8.9,\r\n\t\t0,   0,   0,    1)\r\n\tstatic readonly BAR = M4.FOO.inversed()\r\n\tstatic readonly IDENTITY = M4.identity()\r\n\tstatic readonly YZX = M4.forSys(V3.Y, V3.Z, V3.X)\r\n\tstatic readonly ZXY = M4.forSys(V3.Z, V3.X, V3.Y)\r\n\t// prettier-ignore\r\n\tstatic IDENTITY3 = new M4(\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 0,\r\n\t)\r\n\tstatic readonly temp0 = new M4()\r\n\tstatic readonly temp1 = new M4()\r\n\tstatic readonly temp2 = new M4()\r\n\r\n\tstatic readonly NAMEMAP = new JavaMap<M4, string>()\r\n\t\t.set(M4.IDENTITY3, 'M4.IDENTITY3')\r\n\t\t.set(M4.FOO, 'M4.FOO')\r\n\t\t.set(M4.BAR, 'M4.BAR')\r\n\t\t.set(M4.IDENTITY, 'M4.IDENTITY')\r\n\t\t.set(M4.ZXY, 'M4.ZXY')\r\n\t\t.set(M4.YZX, 'M4.YZX')\r\n\treadonly m: Float64Array\r\n\r\n\t/**\r\n\t * Takes 16 arguments in row-major order, which can be passed individually, as a list, or even as\r\n\t * four lists, one for each row. If the arguments are omitted then the identity matrix is constructed instead.\r\n\t */\r\n\tconstructor(...var_args: (number | number[])[]) {\r\n\t\tlet m\r\n\t\tif (0 == arguments.length) {\r\n\t\t\tm = new Float64Array(16)\r\n\t\t} else {\r\n\t\t\tconst flattened = Array.prototype.concat.apply([], arguments)\r\n\t\t\tassert(flattened.length == 16, 'flattened.length == 16 ' + flattened.length)\r\n\t\t\tm = new Float64Array(flattened)\r\n\t\t}\r\n\t\tsuper(4, 4, m)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the matrix that when multiplied with `matrix` results in the\r\n\t * identity matrix. You can optionally pass an existing matrix in `result`\r\n\t * to avoid allocating a new matrix. This implementation is from the Mesa\r\n\t * OpenGL function `__gluInvertMatrixd()` found in `project.c`.\r\n\t */\r\n\tstatic inverse(matrix: M4, result: M4 = new M4()): M4 {\r\n\t\treturn matrix.inversed4(result) as M4\r\n\t}\r\n\r\n\t/**\r\n\t * Create new dim x dim matrix equal to an identity matrix with rows/colums i and k swapped. Note that i and k\r\n\t * are 0-indexed.\r\n\t */\r\n\tstatic permutation4(i: int, k: int, result = new M4()): Matrix {\r\n\t\tassertInts(i, k)\r\n\t\tassertf(() => 0 <= i && i < 4)\r\n\t\tassertf(() => 0 <= k && k < 4)\r\n\t\tconst m = result.m\r\n\t\tM4.identity(result)\r\n\t\tm[i * 4 + i] = 0\r\n\t\tm[k * 4 + k] = 0\r\n\t\tm[i * 4 + k] = 1\r\n\t\tm[k * 4 + i] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `matrix`, exchanging columns for rows. You can optionally pass an\r\n\t * existing matrix in `result` to avoid allocating a new matrix.\r\n\t */\r\n\tstatic transpose(matrix: M4, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, matrix)\r\n\t\tassertInst(M4, result)\r\n\t\tassert(matrix != result, 'matrix != result')\r\n\t\tconst m = matrix.m,\r\n\t\t\tr = result.m\r\n\t\tr[0] = m[0]\r\n\t\tr[1] = m[4]\r\n\t\tr[2] = m[8]\r\n\t\tr[3] = m[12]\r\n\t\tr[4] = m[1]\r\n\t\tr[5] = m[5]\r\n\t\tr[6] = m[9]\r\n\t\tr[7] = m[13]\r\n\t\tr[8] = m[2]\r\n\t\tr[9] = m[6]\r\n\t\tr[10] = m[10]\r\n\t\tr[11] = m[14]\r\n\t\tr[12] = m[3]\r\n\t\tr[13] = m[7]\r\n\t\tr[14] = m[11]\r\n\t\tr[15] = m[15]\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the concatenation of the transforms for `left` and `right`.\r\n\t */\r\n\tstatic multiply(left: M4, right: M4, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, left, right)\r\n\t\tassertInst(M4, result)\r\n\t\tassert(left != result, 'left != result')\r\n\t\tassert(right != result, 'right != result')\r\n\t\tconst a = left.m,\r\n\t\t\tb = right.m,\r\n\t\t\tr = result.m\r\n\r\n\t\tr[0] = a[0] * b[0] + a[1] * b[4] + (a[2] * b[8] + a[3] * b[12])\r\n\t\tr[1] = a[0] * b[1] + a[1] * b[5] + (a[2] * b[9] + a[3] * b[13])\r\n\t\tr[2] = a[0] * b[2] + a[1] * b[6] + (a[2] * b[10] + a[3] * b[14])\r\n\t\tr[3] = a[0] * b[3] + a[1] * b[7] + (a[2] * b[11] + a[3] * b[15])\r\n\r\n\t\tr[4] = a[4] * b[0] + a[5] * b[4] + (a[6] * b[8] + a[7] * b[12])\r\n\t\tr[5] = a[4] * b[1] + a[5] * b[5] + (a[6] * b[9] + a[7] * b[13])\r\n\t\tr[6] = a[4] * b[2] + a[5] * b[6] + (a[6] * b[10] + a[7] * b[14])\r\n\t\tr[7] = a[4] * b[3] + a[5] * b[7] + (a[6] * b[11] + a[7] * b[15])\r\n\r\n\t\tr[8] = a[8] * b[0] + a[9] * b[4] + (a[10] * b[8] + a[11] * b[12])\r\n\t\tr[9] = a[8] * b[1] + a[9] * b[5] + (a[10] * b[9] + a[11] * b[13])\r\n\t\tr[10] = a[8] * b[2] + a[9] * b[6] + (a[10] * b[10] + a[11] * b[14])\r\n\t\tr[11] = a[8] * b[3] + a[9] * b[7] + (a[10] * b[11] + a[11] * b[15])\r\n\r\n\t\tr[12] = a[12] * b[0] + a[13] * b[4] + (a[14] * b[8] + a[15] * b[12])\r\n\t\tr[13] = a[12] * b[1] + a[13] * b[5] + (a[14] * b[9] + a[15] * b[13])\r\n\t\tr[14] = a[12] * b[2] + a[13] * b[6] + (a[14] * b[10] + a[15] * b[14])\r\n\t\tr[15] = a[12] * b[3] + a[13] * b[7] + (a[14] * b[11] + a[15] * b[15])\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic product(...m4s: M4[]): M4\r\n\tstatic product(m4s: M4[], result?: M4): M4\r\n\tstatic product(...args: any[]): M4 {\r\n\t\tconst [m4s, result]: [M4[], M4] = Array.isArray(args[0]) ? [args[0], args[1]] : [args, new M4()]\r\n\t\tif (0 == m4s.length) return M4.identity(result)\r\n\t\tif (1 == m4s.length) return M4.copy(m4s[0], result)\r\n\t\tif (2 == m4s.length) return M4.multiply(m4s[0], m4s[1], result)\r\n\t\tlet a = M4.temp0,\r\n\t\t\tb = M4.temp1\r\n\t\tM4.multiply(m4s[0], m4s[1], a)\r\n\t\tfor (let i = 2; i < m4s.length - 1; i++) {\r\n\t\t\tM4.multiply(a, m4s[i], b)\r\n\t\t\t;[a, b] = [b, a]\r\n\t\t}\r\n\t\treturn M4.multiply(a, m4s.last, result)\r\n\t}\r\n\r\n\tstatic forSys(e0: V3, e1: V3, e2: V3 = e0.cross(e1), origin: V3 = V3.O): M4 {\r\n\t\tassertVectors(e0, e1, e2, origin)\r\n\t\t// prettier-ignore\r\n\t\treturn new M4(\r\n\t\t\te0.x, e1.x, e2.x, origin.x,\r\n\t\t\te0.y, e1.y, e2.y, origin.y,\r\n\t\t\te0.z, e1.z, e2.z, origin.z,\r\n\t\t\t0, 0, 0, 1)\r\n\t}\r\n\r\n\tstatic forRows(n0: V3, n1: V3, n2: V3, n3: V3 = V3.O): M4 {\r\n\t\tassertVectors(n0, n1, n2, n3)\r\n\t\t// prettier-ignore\r\n\t\treturn new M4(\r\n\t\t\tn0.x, n0.y, n0.z, 0,\r\n\t\t\tn1.x, n1.y, n1.z, 0,\r\n\t\t\tn2.x, n2.y, n2.z, 0,\r\n\t\t\tn3.x, n3.y, n3.z, 1)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an identity matrix. You can optionally pass an existing matrix in `result` to avoid allocating a new\r\n\t * matrix. This emulates the OpenGL function `glLoadIdentity()`\r\n\t *\r\n\t * Unless initializing a matrix to be modified, use M4.IDENTITY\r\n\t */\r\n\tstatic identity(result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tm[0] = m[5] = m[10] = m[15] = 1\r\n\t\tm[1] = m[2] = m[3] = m[4] = m[6] = m[7] = m[8] = m[9] = m[11] = m[12] = m[13] = m[14] = 0\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new M4 initialized by a user defined callback function\r\n\t *\r\n\t * @param f signature: (elRow, elCol, elIndex) =>\r\n\t *     el, where elIndex is the row-major index, i.e. eLindex == elRow * 4 + elCol\r\n\t * @param result\r\n\t */\r\n\tstatic fromFunction4(f: (elRow: number, elCol: number, elIndex: number) => number, result: M4 = new M4()): M4 {\r\n\t\tassert(typeof f == 'function')\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tlet i = 16\r\n\t\twhile (i--) {\r\n\t\t\tm[i] = f(Math.floor(i / 4), i % 4, i)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a perspective transform matrix, which makes far away objects appear smaller than nearby objects. The\r\n\t * `aspect` argument should be the width divided by the height of your viewport and `fov` is the top-to-bottom angle\r\n\t * of the field of view in degrees. You can optionally pass an existing matrix in `result` to avoid allocating a new\r\n\t * matrix. This emulates the OpenGL function `gluPerspective()`.\r\n\t * {@see perspectiveRad}\r\n\t * perspectiveRad\r\n\t * @param fovDegrees in degrees\r\n\t * @param aspect aspect ratio = width/height of viewport\r\n\t */\r\n\tstatic perspective(fovDegrees: number, aspect: number, near: number, far: number, result: M4 = new M4()): M4 {\r\n\t\treturn M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, result)\r\n\t}\r\n\r\n\tstatic perspectiveRad(fov: raddd, aspect: number, near: number, far: number, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(fov, aspect, near, far)\r\n\t\tconst y = Math.tan(fov / 2) * near\r\n\t\tconst x = y * aspect\r\n\t\treturn M4.frustum(-x, x, -y, y, near, far, result)\r\n\t}\r\n\r\n\tstatic perspectivePlane(vanishingPlane: { normal1: V3; w: number }, result: M4 = new M4()) {\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tm[0] = 1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 1\r\n\t\tm[6] = 0\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = 1\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = vanishingPlane.normal1.x\r\n\t\tm[13] = vanishingPlane.normal1.y\r\n\t\tm[14] = vanishingPlane.normal1.z\r\n\t\tm[15] = -vanishingPlane.w\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t// the OpenGL function `glFrustum()`.\r\n\tstatic frustum(\r\n\t\tleft: number,\r\n\t\tright: number,\r\n\t\tbottom: number,\r\n\t\ttop: number,\r\n\t\tnear: number,\r\n\t\tfar: number,\r\n\t\tresult: M4 = new M4(),\r\n\t): M4 {\r\n\t\tassertNumbers(left, right, bottom, top, near, far)\r\n\t\tassert(0 < near, '0 < near')\r\n\t\tassert(near < far, 'near < far')\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = (2 * near) / (right - left)\r\n\t\tm[1] = 0\r\n\t\tm[2] = (right + left) / (right - left)\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = (2 * near) / (top - bottom)\r\n\t\tm[6] = (top + bottom) / (top - bottom)\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -(far + near) / (far - near)\r\n\t\tm[11] = (-2 * far * near) / (far - near)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = -1\r\n\t\tm[15] = 0\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 representing the a projection through/towards a point onto a plane.\r\n\t */\r\n\tstatic projectPlanePoint(p: V3, plane: { normal1: V3; w: number }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(p, plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tconst n = plane.normal1,\r\n\t\t\tw = plane.w\r\n\t\tconst np = n.dot(p)\r\n\r\n\t\tm[0] = p.x * n.x + w - np\r\n\t\tm[1] = p.x * n.y\r\n\t\tm[2] = p.x * n.z\r\n\t\tm[3] = -w * p.x\r\n\r\n\t\tm[4] = p.y * n.x\r\n\t\tm[5] = p.y * n.y + w - np\r\n\t\tm[6] = p.y * n.z\r\n\t\tm[7] = -w * p.y\r\n\r\n\t\tm[8] = p.z * n.x\r\n\t\tm[9] = p.z * n.y\r\n\t\tm[10] = p.z * n.z + w - np\r\n\t\tm[11] = -w * p.z\r\n\r\n\t\tm[12] = n.x\r\n\t\tm[13] = n.y\r\n\t\tm[14] = n.z\r\n\t\tm[15] = -np\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Orthographic/orthogonal projection. Transforms the cuboid with the dimensions X: [left right] Y: [bottom, top]\r\n\t * Z: [near far] to the cuboid X: [-1, 1] Y [-1, 1] Z [-1, 1]\r\n\t */\r\n\tstatic ortho(\r\n\t\tleft: number,\r\n\t\tright: number,\r\n\t\tbottom: number,\r\n\t\ttop: number,\r\n\t\tnear: number,\r\n\t\tfar: number,\r\n\t\tresult: M4 = new M4(),\r\n\t): M4 {\r\n\t\tassertNumbers(left, right, bottom, top, near, far)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 2 / (right - left)\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = -(right + left) / (right - left)\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 2 / (top - bottom)\r\n\t\tm[6] = 0\r\n\t\tm[7] = -(top + bottom) / (top - bottom)\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -2 / (far - near)\r\n\t\tm[11] = -(far + near) / (far - near)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * This emulates the OpenGL function `glScale()`. You can optionally pass an existing matrix in `result` to avoid\r\n\t * allocating a new matrix.\r\n\t */\r\n\tstatic scale(x: number, y: number, z?: number, result?: M4): M4\r\n\r\n\tstatic scale(scale: number, result?: M4): M4\r\n\r\n\tstatic scale(v: V3, result?: M4): M4\r\n\r\n\tstatic scale(...args: any[]): M4 {\r\n\t\tlet x: number, y: number, z: number, result: M4\r\n\t\tif (args[0] instanceof V3) {\r\n\t\t\tassert(args.length <= 2)\r\n\t\t\t;({ x, y, z } = args[0])\r\n\t\t\tresult = args[1]\r\n\t\t} else if ('number' != typeof args[1]) {\r\n\t\t\tx = y = z = args[0]\r\n\t\t\tresult = args[1]\r\n\t\t} else {\r\n\t\t\tassert(args.length <= 4)\r\n\t\t\tx = args[0]\r\n\t\t\ty = args[1]\r\n\t\t\tz = undefined != args[2] ? args[2] : 1\r\n\t\t\tresult = args[3]\r\n\t\t}\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(x, y, z)\r\n\r\n\t\tconst m = result.m\r\n\t\tm[0] = x\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = y\r\n\t\tm[6] = 0\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = z\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * This emulates the OpenGL function `glTranslate()`. You can optionally pass\r\n\t * an existing matrix in `result` to avoid allocating a new matrix.\r\n\t */\r\n\tstatic translate(x: number, y?: number, z?: number, result?: M4): M4\r\n\r\n\tstatic translate(v: V3, result?: M4): M4\r\n\r\n\tstatic translate(...args: any[]): M4 {\r\n\t\tlet x, y, z, result\r\n\t\tif (args[0] instanceof V3) {\r\n\t\t\tassert(args.length <= 2)\r\n\t\t\t;({ x, y, z } = args[0])\r\n\t\t\tresult = args[1]\r\n\t\t} else {\r\n\t\t\tassert(args.length <= 4)\r\n\t\t\tx = args[0]\r\n\t\t\ty = undefined != args[1] ? args[1] : 0\r\n\t\t\tz = undefined != args[2] ? args[2] : 0\r\n\t\t\tresult = args[3]\r\n\t\t}\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(x, y, z)\r\n\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = x\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 1\r\n\t\tm[6] = 0\r\n\t\tm[7] = y\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = 1\r\n\t\tm[11] = z\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix that rotates by `a` degrees around the vector (x, y, z). You can optionally pass an existing\r\n\t * matrix in `result` to avoid allocating a new matrix. This emulates the OpenGL function `glRotate()`.\r\n\t */\r\n\t//static rotation(radians: raddd, x: number, y: number, z: number, result?: M4): M4\r\n\tstatic rotate(radians: raddd, v: { x: number; y: number; z: number }, result?: M4): M4 {\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tlet { x, y, z } = v\r\n\t\tassert(!new V3(x, y, z).likeO(), '!V(x, y, z).likeO()')\r\n\t\tconst m = result.m\r\n\r\n\t\tconst d = Math.sqrt(x * x + y * y + z * z)\r\n\t\tx /= d\r\n\t\ty /= d\r\n\t\tz /= d\r\n\t\tconst cos = Math.cos(radians),\r\n\t\t\tsin = Math.sin(radians),\r\n\t\t\tt = 1 - cos\r\n\r\n\t\tm[0] = x * x * t + cos\r\n\t\tm[1] = x * y * t - z * sin\r\n\t\tm[2] = x * z * t + y * sin\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = y * x * t + z * sin\r\n\t\tm[5] = y * y * t + cos\r\n\t\tm[6] = y * z * t - x * sin\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = z * x * t - y * sin\r\n\t\tm[9] = z * y * t + x * sin\r\n\t\tm[10] = z * z * t + cos\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix that puts the camera at the eye point `ex, ey, ez` looking\r\n\t * toward the center point `cx, cy, cz` with an up direction of `ux, uy, uz`.\r\n\t * You can optionally pass an existing matrix in `result` to avoid allocating\r\n\t * a new matrix. This emulates the OpenGL function `gluLookAt()`.\r\n\t */\r\n\tstatic lookAt(eye: V3, focus: V3, up: V3, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(eye, focus, up)\r\n\t\tassertInst(M4, result)\r\n\r\n\t\tconst m = result.m\r\n\r\n\t\tconst f = eye.minus(focus).unit()\r\n\t\tconst s = up.cross(f).unit()\r\n\t\tconst t = f.cross(s).unit()\r\n\r\n\t\tm[0] = s.x\r\n\t\tm[1] = s.y\r\n\t\tm[2] = s.z\r\n\t\tm[3] = -s.dot(eye)\r\n\r\n\t\tm[4] = t.x\r\n\t\tm[5] = t.y\r\n\t\tm[6] = t.z\r\n\t\tm[7] = -t.dot(eye)\r\n\r\n\t\tm[8] = f.x\r\n\t\tm[9] = f.y\r\n\t\tm[10] = f.z\r\n\t\tm[11] = -f.dot(eye)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the X axis\r\n\t */\r\n\tstatic rotateX(radians: raddd): M4 {\r\n\t\tassertNumbers(radians)\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the Y axis\r\n\t */\r\n\tstatic rotateY(radians: raddd): M4 {\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the Z axis\r\n\t */\r\n\tstatic rotateZ(radians: raddd): M4 {\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * New rotation matrix such that result.transformVector(a).isParallelTo(b) through smallest rotation.\r\n\t * Performs no scaling.\r\n\t */\r\n\tstatic rotateAB(a: V3, b: V3, result: M4 = new M4()): M4 {\r\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\r\n\t\tassertVectors(a, b)\r\n\t\tassertInst(M4, result)\r\n\t\tconst rotationAxis = a.cross(b),\r\n\t\t\trotationAxisLength = rotationAxis.length()\r\n\t\tif (eq0(rotationAxisLength)) {\r\n\t\t\treturn M4.identity(result)\r\n\t\t}\r\n\t\tconst radians = Math.atan2(rotationAxisLength, a.dot(b))\r\n\t\treturn M4.rotateLine(V3.O, rotationAxis, radians, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Matrix for rotation about arbitrary line defined by an anchor point and direction.\r\n\t * rotationAxis does not need to be unit\r\n\t */\r\n\tstatic rotateLine(rotationAnchor: V3, rotationAxis: V3, radians: raddd, result: M4 = new M4()): M4 {\r\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\r\n\t\tassertVectors(rotationAnchor, rotationAxis)\r\n\t\tassertNumbers(radians)\r\n\t\tassertInst(M4, result)\r\n\t\trotationAxis = rotationAxis.unit()\r\n\r\n\t\tconst ax = rotationAnchor.x,\r\n\t\t\tay = rotationAnchor.y,\r\n\t\t\taz = rotationAnchor.z,\r\n\t\t\tdx = rotationAxis.x,\r\n\t\t\tdy = rotationAxis.y,\r\n\t\t\tdz = rotationAxis.z\r\n\t\tconst m = result.m,\r\n\t\t\tcos = Math.cos(radians),\r\n\t\t\tsin = Math.sin(radians)\r\n\r\n\t\tm[0] = dx * dx + (dy * dy + dz * dz) * cos\r\n\t\tm[1] = dx * dy * (1 - cos) - dz * sin\r\n\t\tm[2] = dx * dz * (1 - cos) + dy * sin\r\n\t\tm[3] = (ax * (dy * dy + dz * dz) - dx * (ay * dy + az * dz)) * (1 - cos) + (ay * dz - az * dy) * sin\r\n\r\n\t\tm[4] = dx * dy * (1 - cos) + dz * sin\r\n\t\tm[5] = dy * dy + (dx * dx + dz * dz) * cos\r\n\t\tm[6] = dy * dz * (1 - cos) - dx * sin\r\n\t\tm[7] = (ay * (dx * dx + dz * dz) - dy * (ax * dx + az * dz)) * (1 - cos) + (az * dx - ax * dz) * sin\r\n\r\n\t\tm[8] = dx * dz * (1 - cos) - dy * sin\r\n\t\tm[9] = dy * dz * (1 - cos) + dx * sin\r\n\t\tm[10] = dz * dz + (dx * dx + dy * dy) * cos\r\n\t\tm[11] = (az * (dx * dx + dy * dy) - dz * (ax * dx + ay * dy)) * (1 - cos) + (ax * dy - ay * dx) * sin\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Create an affine matrix for mirroring into an arbitrary plane:\r\n\t */\r\n\tstatic mirror(plane: { normal1: V3; w: number }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst [nx, ny, nz] = plane.normal1\r\n\t\tconst w = plane.w\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 1.0 - 2.0 * nx * nx\r\n\t\tm[1] = -2.0 * ny * nx\r\n\t\tm[2] = -2.0 * nz * nx\r\n\t\tm[3] = 2.0 * nx * w\r\n\r\n\t\tm[4] = -2.0 * nx * ny\r\n\t\tm[5] = 1.0 - 2.0 * ny * ny\r\n\t\tm[6] = -2.0 * nz * ny\r\n\t\tm[7] = 2.0 * ny * w\r\n\r\n\t\tm[8] = -2.0 * nx * nz\r\n\t\tm[9] = -2.0 * ny * nz\r\n\t\tm[10] = 1.0 - 2.0 * nz * nz\r\n\t\tm[11] = 2.0 * nz * w\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param plane\r\n\t * @param dir Projection direction. Optional, if not specified plane normal1 will be used.\r\n\t * @param result {@see M4}\r\n\t */\r\n\tstatic project(plane: { normal1: V3; w: number }, dir: V3 = plane.normal1, result: M4 = new M4()): M4 {\r\n\t\t// TODO: doc\r\n\r\n\t\t// plane.normal1 DOT (p + lambda * dir) = w (1)\r\n\t\t// extract lambda:\r\n\t\t// plane.normal1 DOT p + lambda * plane.normal1 DOT dir = w\r\n\t\t// lambda = (w - plane.normal1 DOT p) / plane.normal1 DOT dir\r\n\t\t// result = p + lambda * dir\r\n\t\t// result = p + dir * (w - plane.normal1 DOT p) / plane.normal1 DOT dir\r\n\t\t// result =  w * dir / (plane.normal1 DOT dir) + p - plane.normal1 DOT p * dir / (plane.normal1 DOT dir) *\r\n\r\n\t\t//  a + d * (w - n . a) / (nd)\r\n\t\t//  a + dw - d * na\r\n\t\tassertVectors(dir, plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst w = plane.w\r\n\t\tconst m = result.m\r\n\t\tconst nd = plane.normal1.dot(dir)\r\n\t\tconst { x: nx, y: ny, z: nz } = plane.normal1\r\n\t\tconst { x: dx, y: dy, z: dz } = dir.div(nd)\r\n\t\t/*\r\n\t\t rejectedFrom: return this.minus(b.times(this.dot(b) / b.dot(b)))\r\n\t\t return M4.forSys(\r\n\t\t V3.X.rejectedFrom(plane.normal1),\r\n\t\t V3.Y.rejectedFrom(plane.normal1),\r\n\t\t V3.Z.rejectedFrom(plane.normal1),\r\n\t\t plane.anchor,\r\n\t\t result\r\n\t\t )\r\n\t\t */\r\n\r\n\t\tm[0] = 1.0 - nx * dx\r\n\t\tm[1] = -ny * dx\r\n\t\tm[2] = -nz * dx\r\n\t\tm[3] = dx * w\r\n\r\n\t\tm[4] = -nx * dy\r\n\t\tm[5] = 1.0 - ny * dy\r\n\t\tm[6] = -nz * dy\r\n\t\tm[7] = dy * w\r\n\r\n\t\tm[8] = -nx * dz\r\n\t\tm[9] = -ny * dz\r\n\t\tm[10] = 1.0 - nz * dz\r\n\t\tm[11] = dz * w\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic lineProjection(line: { anchor: V3; dir1: V3 }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(line.anchor, line.dir1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst ax = line.anchor.x,\r\n\t\t\tay = line.anchor.y,\r\n\t\t\taz = line.anchor.z\r\n\t\tconst dx = line.dir1.x,\r\n\t\t\tdy = line.dir1.y,\r\n\t\t\tdz = line.dir1.z\r\n\t\tconst m = result.m\r\n\r\n\t\t/*\r\n\t\t projectedOn: return b.times(this.dot(b) / b.dot(b))\r\n\t\t */\r\n\r\n\t\tm[0] = dx * dx\r\n\t\tm[1] = dx * dy\r\n\t\tm[2] = dx * dz\r\n\t\tm[3] = ax\r\n\r\n\t\tm[4] = dy * dx\r\n\t\tm[5] = dy * dy\r\n\t\tm[6] = dy * dz\r\n\t\tm[7] = ay\r\n\r\n\t\tm[8] = dz * dx\r\n\t\tm[9] = dz * dy\r\n\t\tm[10] = dz * dz\r\n\t\tm[11] = az\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic pointInversion(p: V3, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(p)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = -1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 2 * p.x\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = -1\r\n\t\tm[6] = 0\r\n\t\tm[7] = 2 * p.y\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -1\r\n\t\tm[11] = 2 * p.z\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\tprotected static new(width: int, height: int, m: Float64Array) {\r\n\t\tassert(4 == width && 4 == height)\r\n\t\treturn new M4(...m)\r\n\t}\r\n\r\n\tget X(): V3 {\r\n\t\treturn this.transformVector(V3.X)\r\n\t}\r\n\r\n\tget Y(): V3 {\r\n\t\treturn this.transformVector(V3.Y)\r\n\t}\r\n\r\n\tget Z(): V3 {\r\n\t\treturn this.transformVector(V3.Z)\r\n\t}\r\n\r\n\tget O(): V3 {\r\n\t\treturn this.getTranslation()\r\n\t}\r\n\r\n\tisMirror(precision = NLA_PRECISION) {\r\n\t\tconst m = this.m\r\n\t\tconst nx = Math.sqrt((1 - m[0]) / 2)\r\n\t\tconst ny = Math.sqrt((1 - m[5]) / 2)\r\n\t\tconst nz = Math.sqrt((1 - m[10]) / 2)\r\n\r\n\t\treturn (\r\n\t\t\teq(m[1], -2.0 * ny * nx, precision) &&\r\n\t\t\teq(m[2], -2.0 * nz * nx, precision) &&\r\n\t\t\teq(m[4], -2.0 * nx * ny, precision) &&\r\n\t\t\teq(m[6], -2.0 * nz * ny, precision) &&\r\n\t\t\teq(m[8], -2.0 * nx * nz, precision) &&\r\n\t\t\teq(m[9], -2.0 * ny * nz, precision) &&\r\n\t\t\teq(m[12], 0, precision) &&\r\n\t\t\teq(m[13], 0, precision) &&\r\n\t\t\teq(m[14], 0, precision) &&\r\n\t\t\teq(m[15], 1, precision) &&\r\n\t\t\teq(m[3] * ny, m[7] * nx, precision) &&\r\n\t\t\teq(m[7] * nz, m[11] * ny, precision) &&\r\n\t\t\teq(m[11] * nx, m[3] * nz, precision)\r\n\t\t)\r\n\t}\r\n\r\n\t// ### GL.Matrix.frustum(left, right, bottom, top, near, far[, result])\r\n\t//\r\n\t// Sets up a viewing frustum, which is shaped like a truncated pyramid with the\r\n\t// camera where the point of the pyramid would be. You can optionally pass an\r\n\t// existing matrix in `result` to avoid allocating a new matrix. This emulates\r\n\r\n\t/**\r\n\t * Returns a new M4 which is equal to the inverse of this.\r\n\t */\r\n\tinversed(result?: M4): M4 {\r\n\t\treturn M4.inverse(this, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Matrix trace is defined as the sum of the elements of the main diagonal.\r\n\t */\r\n\ttrace(): number {\r\n\t\treturn this.m[0] + this.m[5] + this.m[10] + this.m[15]\r\n\t}\r\n\r\n\tas3x3(result?: M4): M4 {\r\n\t\t result = M4.copy<M4>(this, result)\r\n\t\t\tconst m = result.m\r\n\r\n\t\tm[3] = m[7] = m[11] = m[12] = m[13] = m[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\ttransform(m4: M4): this {\r\n\t\treturn m4.times(this) as this\r\n\t}\r\n\r\n\trealEigenValues3(): number[] {\r\n\t\tconst m = this.m\r\n\t\tassert(0 == m[12] && 0 == m[13] && 0 == m[14])\r\n\t\t// determinant of (this - λI):\r\n\t\t// | a-λ  b   c  |\r\n\t\t// |  d  e-λ  f  | = -λ^3 + λ^2 (a+e+i) + λ (-a e-a i+b d+c g-e i+f h) + a(ei - fh) - b(di - fg) + c(dh - eg)\r\n\t\t// |  g   h  i-λ |\r\n\r\n\t\tconst [a, b, c, , d, e, f, , g, h, i] = m\r\n\t\t// det(this - λI) = -λ^3 +λ^2 (a+e+i) + λ (-a e-a i-b d+c g-e i+f h)+ (a e i-a f h-b d i+b f g+c d h-c e g)\r\n\t\tconst s = -1\r\n\t\tconst t = a + e + i // equivalent to trace of matrix\r\n\t\tconst u = -a * e - a * i + b * d + c * g - e * i + f * h // equivalent to 1/2 (trace(this²) - trace²(A))\r\n\t\tconst w = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g) // equivalent to matrix determinant\r\n\r\n\t\tconsole.log(s, t, u, w)\r\n\t\treturn solveCubicReal2(s, t, u, w)\r\n\t}\r\n\r\n\trealEigenVectors3(): V3[] {\r\n\t\tconst eigenValues = this.realEigenValues3()\r\n\t\tconst this3x3 = this.times(M4.IDENTITY3)\r\n\t\tconsole.log(this.toString())\r\n\t\tconsole.log(this3x3.toString())\r\n\t\tlet mats = eigenValues.map(ev => M4.IDENTITY3.scale(-ev).plus(this3x3))\r\n\t\tconsole.log(mats.map(m => m.determinant3()))\r\n\t\tconsole.log(mats.map(m => '' + m.toString(v => '' + v)).join('\\n\\n'))\r\n\t\tconsole.log(mats.map(m => '' + m.gauss().U.toString(v => '' + v)).join('\\n\\n'))\r\n\t\tconsole.log('mats.map(m=>m.rank())', mats.map(m => m.rank()))\r\n\t\tif (1 == eigenValues.length) {\r\n\t\t\tconsole.log(mats[0].toString())\r\n\t\t\tassertf(() => 0 == mats[0].rank())\r\n\t\t\t// col vectors\r\n\t\t\treturn arrayFromFunction(3, col => new V3(this.m[col], this.m[4 + col], this.m[8 + col]))\r\n\t\t}\r\n\t\tif (2 == eigenValues.length) {\r\n\t\t\t// one matrix should have rank 1, the other rank 2\r\n\t\t\tif (1 == mats[0].rank()) {\r\n\t\t\t\tmats = [mats[1], mats[0]]\r\n\t\t\t}\r\n\t\t\tassertf(() => 2 == mats[0].rank())\r\n\t\t\tassertf(() => 1 == mats[1].rank())\r\n\r\n\t\t\t// mat[0] has rank 2, mat[1] has rank 1\r\n\t\t\tconst gauss0 = mats[0].gauss().U\r\n\t\t\tconst eigenVector0 = gauss0\r\n\t\t\t\t.row(0)\r\n\t\t\t\t.cross(gauss0.row(1))\r\n\t\t\t\t.V3()\r\n\t\t\t\t.unit()\r\n\r\n\t\t\tconst planeNormal = mats[1]\r\n\t\t\t\t.gauss()\r\n\t\t\t\t.U.row(0)\r\n\t\t\t\t.V3()\r\n\t\t\tconst eigenVector1 = planeNormal.getPerpendicular().unit()\r\n\t\t\tconst eigenVector2 = eigenVector0.cross(eigenVector1).rejectedFrom(planeNormal)\r\n\r\n\t\t\treturn [eigenVector0, eigenVector1, eigenVector2]\r\n\t\t}\r\n\t\tif (3 == eigenValues.length) {\r\n\t\t\tmats.forEach((mat, i) => assert(2 == mat.rank(), i + ': ' + mat.rank()))\r\n\t\t\t// the (A - lambda I) matrices map to a plane. This means, that there is an entire line in R³ which maps to\r\n\t\t\t// the point V3.O\r\n\t\t\treturn mats.map(mat => {\r\n\t\t\t\tconst gauss = mat.gauss().U\r\n\t\t\t\treturn gauss\r\n\t\t\t\t\t.row(0)\r\n\t\t\t\t\t.cross(gauss.row(1))\r\n\t\t\t\t\t.V3()\r\n\t\t\t\t\t.unit()\r\n\t\t\t})\r\n\t\t}\r\n\t\tthrow new Error('there cannot be more than 3 eigen values')\r\n\t}\r\n\r\n\t/**\r\n\t * U * SIGMA * VSTAR = this\r\n\t * U and VSTAR are orthogonal matrices\r\n\t * SIGMA is a diagonal matrix\r\n\t */\r\n\tsvd3(): { U: M4; SIGMA: M4; VSTAR: M4 } {\r\n\t\tfunction matrixForCS(i: int, k: int, c: number, s: number) {\r\n\t\t\tconst m = M4.identity()\r\n\t\t\tm.setEl(i, i, c)\r\n\t\t\tm.setEl(k, k, c)\r\n\t\t\tm.setEl(i, k, s)\r\n\t\t\tm.setEl(k, i, -s)\r\n\t\t\treturn m\r\n\t\t}\r\n\r\n\t\tconst A = this.as3x3()\r\n\t\tlet S = A.transposed().times(A),\r\n\t\t\tV = M4.identity()\r\n\t\tconsole.log(S.str)\r\n\t\tfor (let it = 0; it < 16; it++) {\r\n\t\t\tconsole.log('blahg\\n', V.times(S).times(V.transposed()).str)\r\n\t\t\tassert(\r\n\t\t\t\tV.times(S)\r\n\t\t\t\t\t.times(V.transposed())\r\n\t\t\t\t\t.likeM4(A.transposed().times(A)),\r\n\t\t\t\tV.times(S).times(V.transposed()).str,\r\n\t\t\t\tA.transposed().times(A).str,\r\n\t\t\t)\r\n\t\t\tlet maxOffDiagonal = 0,\r\n\t\t\t\tmaxOffDiagonalIndex = 1,\r\n\t\t\t\tj = 10\r\n\t\t\twhile (j--) {\r\n\t\t\t\tconst val = Math.abs(S.m[j])\r\n\t\t\t\tif (j % 4 != Math.floor(j / 4) && val > maxOffDiagonal) {\r\n\t\t\t\t\tmaxOffDiagonal = val\r\n\t\t\t\t\tmaxOffDiagonalIndex = j\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst i = Math.floor(maxOffDiagonalIndex / 4),\r\n\t\t\t\tk = maxOffDiagonalIndex % 4\r\n\t\t\tconst a_ii = S.m[5 * i],\r\n\t\t\t\ta_kk = S.m[5 * k],\r\n\t\t\t\ta_ik = S.m[maxOffDiagonalIndex]\r\n\t\t\tconst phi = a_ii === a_kk ? PI / 4 : Math.atan((2 * a_ik) / (a_ii - a_kk)) / 2\r\n\t\t\tconsole.log(maxOffDiagonalIndex, i, k, 'phi', phi)\r\n\t\t\tconst cos = Math.cos(phi),\r\n\t\t\t\tsin = Math.sin(phi)\r\n\t\t\tconst givensRotation = matrixForCS(i, k, cos, -sin)\r\n\t\t\tassert(\r\n\t\t\t\tgivensRotation\r\n\t\t\t\t\t.transposed()\r\n\t\t\t\t\t.times(givensRotation)\r\n\t\t\t\t\t.likeIdentity(),\r\n\t\t\t)\r\n\t\t\tconsole.log(givensRotation.str)\r\n\t\t\tV = V.times(givensRotation)\r\n\t\t\tS = M4.product(givensRotation.transposed(), S, givensRotation)\r\n\t\t\tconsole.log(S.str)\r\n\t\t}\r\n\r\n\t\tconst sigma = S.map((el, elIndex) => (elIndex % 5 == 0 ? Math.sqrt(el) : 0))\r\n\t\treturn {\r\n\t\t\tU: M4.product(A, V, sigma.map((el, elIndex) => (elIndex % 5 == 0 ? 1 / el : 0))),\r\n\t\t\tSIGMA: sigma,\r\n\t\t\tVSTAR: V.transposed(),\r\n\t\t}\r\n\t}\r\n\r\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): M4 {\r\n\t\treturn M4.fromFunction4((x, y, i) => fn(this.m[i], i, this.m))\r\n\t}\r\n\r\n\tlikeM4(m4: M4): boolean {\r\n\t\tassertInst(M4, m4)\r\n\t\treturn this.m.every((el, index) => eq(el, m4.m[index]))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 equal to the transpose of this.\r\n\t */\r\n\ttransposed(result?: M4): M4 {\r\n\t\treturn M4.transpose(this, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 which equal to (this * matrix) (in that order)\r\n\t */\r\n\ttimes(matrix: M4): M4 {\r\n\t\treturn M4.multiply(this, matrix)\r\n\t}\r\n\r\n\t/**\r\n\t * In a perspective projection, parallel lines meet in a vanishing point.\r\n\t *\r\n\t * Returns undefined if there is no vanishing point, either because this is not a perspective transform,\r\n\t * or because the passed dir is perpendicular to the projections direction.\r\n\t *\r\n\t * @param dir\r\n\t */\r\n\tvanishingPoint(dir: V3) {\r\n\t\tassertVectors(dir)\r\n\t\tconst m = this.m\r\n\t\tconst vx = dir.x,\r\n\t\t\tvy = dir.y,\r\n\t\t\tvz = dir.z\r\n\t\tconst w = vx * m[12] + vy * m[13] + vz * m[14]\r\n\t\tif (eq0(w)) return undefined\r\n\t\tconst x = vx * m[0] + vy * m[1] + vz * m[2]\r\n\t\tconst y = vx * m[4] + vy * m[5] + vz * m[6]\r\n\t\tconst z = vx * m[8] + vy * m[9] + vz * m[10]\r\n\t\treturn new V3(x / w, y / w, z / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the vector as a point with a w coordinate of 1. This means translations will have an effect, for\r\n\t * example.\r\n\t */\r\n\ttransformPoint(v: V3): V3 {\r\n\t\tassertVectors(v)\r\n\t\tconst m = this.m\r\n\t\tconst vx = v.x,\r\n\t\t\tvy = v.y,\r\n\t\t\tvz = v.z\r\n\t\tconst x = vx * m[0] + vy * m[1] + vz * m[2] + m[3]\r\n\t\tconst y = vx * m[4] + vy * m[5] + vz * m[6] + m[7]\r\n\t\tconst z = vx * m[8] + vy * m[9] + vz * m[10] + m[11]\r\n\t\tconst w = vx * m[12] + vy * m[13] + vz * m[14] + m[15]\r\n\t\t// scale such that fourth element becomes 1:\r\n\t\treturn new V3(x / w, y / w, z / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the vector as a vector with a w coordinate of 0. This means translations will have no effect, for\r\n\t * example. Will throw an exception if the calculated w component != 0. This occurs for example when attempting\r\n\t * to transform a vector with a perspective matrix.\r\n\t */\r\n\ttransformVector(v: V3, checkW = true): V3 {\r\n\t\tassertVectors(v)\r\n\t\tconst m = this.m\r\n\t\tconst w = v.x * m[12] + v.y * m[13] + v.z * m[14]\r\n\t\tcheckW && assert(eq0(w), () => 'w === 0 needs to be true for this to make sense (w =' + w + this.str)\r\n\t\treturn new V3(\r\n\t\t\tm[0] * v.x + m[1] * v.y + m[2] * v.z,\r\n\t\t\tm[4] * v.x + m[5] * v.y + m[6] * v.z,\r\n\t\t\tm[8] * v.x + m[9] * v.y + m[10] * v.z,\r\n\t\t)\r\n\t}\r\n\r\n\ttransformVector2(v: V3, anchor: V3): V3 {\r\n\t\t// v and anchor define a line(t) = anchor + t v\r\n\t\t// we can view the calculation of the transformed vector as the derivative of the transformed line at t = 0\r\n\t\t// d/dt (this * line(t)) (0)\r\n\t\tassertVectors(v, anchor)\r\n\t\tconst transformedAnchor = this.timesVector(VV(anchor.x, anchor.y, anchor.z, 1))\r\n\t\tconst transformedVector = this.timesVector(VV(v.x, v.y, v.z, 0))\r\n\t\treturn transformedVector\r\n\t\t\t.times(transformedAnchor.w)\r\n\t\t\t.minus(transformedAnchor.times(transformedVector.w))\r\n\t\t\t.div(transformedAnchor.w ** 2)\r\n\t\t\t.V3()\r\n\t}\r\n\r\n\ttransformedPoints(vs: ReadonlyArray<V3>): V3[] {\r\n\t\treturn vs.map(v => this.transformPoint(v))\r\n\t}\r\n\r\n\ttransformedVectors(vs: ReadonlyArray<V3>): V3[] {\r\n\t\treturn vs.map(v => this.transformVector(v))\r\n\t}\r\n\r\n\tnew() {\r\n\t\treturn new M4() as this\r\n\t}\r\n\r\n\tisRegular(): boolean {\r\n\t\treturn !eq0(this.determinant())\r\n\t}\r\n\r\n\tisAxisAligned(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn (\r\n\t\t\t1 >= +!eq0(m[0]) + +!eq0(m[1]) + +!eq0(m[2]) &&\r\n\t\t\t1 >= +!eq0(m[4]) + +!eq0(m[5]) + +!eq0(m[6]) &&\r\n\t\t\t1 >= +!eq0(m[8]) + +!eq0(m[9]) + +!eq0(m[10])\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is orthogonal iff M * M^T = I\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is orthogonal or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisOrthogonal(): boolean {\r\n\t\t// return this.transposed().times(this).likeM4(M4.IDENTITY)\r\n\t\tM4.transpose(this, M4.temp0)\r\n\t\tM4.multiply(this, M4.temp0, M4.temp1)\r\n\t\treturn M4.IDENTITY.likeM4(M4.temp1)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is symmetric iff M == M^T\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisSymmetric(): boolean {\r\n\t\tM4.transpose(this, M4.temp0)\r\n\t\treturn this.likeM4(M4.temp0)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is normal1 iff M * M^-T == M^T * M TODO: ^-T?\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisNormal(): boolean {\r\n\t\tM4.transpose(this, M4.temp0) // temp0 = this^-T\r\n\t\tM4.multiply(this, M4.temp0, M4.temp1) // temp1 = this * this^-T\r\n\t\tM4.multiply(M4.temp0, this, M4.temp2) // temp2 = this^-T * this\r\n\t\treturn M4.temp1.likeM4(M4.temp2)\r\n\t}\r\n\r\n\t/**\r\n\t * Determinant of matrix.\r\n\t *\r\n\t * Notes:\r\n\t *      For matrices A and B\r\n\t *      det(A * B) = det(A) * det(B)\r\n\t *      det(A^-1) = 1 / det(A)\r\n\t */\r\n\tdeterminant(): number {\r\n\t\t/*\r\n\t\t | a b c d |\r\n\t\t | e f g h |\r\n\t\t | i j k l |\r\n\t\t | m n o p |\r\n\t\t */\r\n\t\tconst $ = this.m,\r\n\t\t\ta = $[0],\r\n\t\t\tb = $[1],\r\n\t\t\tc = $[2],\r\n\t\t\td = $[3],\r\n\t\t\te = $[4],\r\n\t\t\tf = $[5],\r\n\t\t\tg = $[6],\r\n\t\t\th = $[7],\r\n\t\t\ti = $[8],\r\n\t\t\tj = $[9],\r\n\t\t\tk = $[10],\r\n\t\t\tl = $[11],\r\n\t\t\tm = $[12],\r\n\t\t\tn = $[13],\r\n\t\t\to = $[14],\r\n\t\t\tp = $[15],\r\n\t\t\tklop = k * p - l * o,\r\n\t\t\tjlnp = j * p - l * n,\r\n\t\t\tjkno = j * o - k * n,\r\n\t\t\tilmp = i * p - l * m,\r\n\t\t\tikmo = i * o - k * m,\r\n\t\t\tijmn = i * n - j * m\r\n\t\treturn (\r\n\t\t\ta * (f * klop - g * jlnp + h * jkno) -\r\n\t\t\tb * (e * klop - g * ilmp + h * ikmo) +\r\n\t\t\tc * (e * jlnp - f * ilmp + h * ijmn) -\r\n\t\t\td * (e * jkno - f * ikmo + g * ijmn)\r\n\t\t)\r\n\t}\r\n\r\n\tdeterminant3(): number {\r\n\t\tconst [a, b, c, , d, e, f, , g, h, i] = this.m\r\n\t\tconst det = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g)\r\n\t\treturn det\r\n\t}\r\n\r\n\t/**\r\n\t * determine whether this matrix is a mirroring transformation\r\n\t */\r\n\tisMirroring(): boolean {\r\n\t\t/*\r\n\t\t var u = V(this.m[0], this.m[4], this.m[8])\r\n\t\t var v = V(this.m[1], this.m[5], this.m[9])\r\n\t\t var w = V(this.m[2], this.m[6], this.m[10])\r\n\r\n\t\t // for a true orthogonal, non-mirrored base, u.cross(v) == w\r\n\t\t // If they have an opposite direction then we are mirroring\r\n\t\t var mirrorvalue = u.cross(v).dot(w)\r\n\t\t var ismirror = (mirrorvalue < 0)\r\n\t\t return ismirror\r\n\t\t */\r\n\r\n\t\treturn this.determinant() < 0 // TODO: also valid for 4x4?\r\n\t}\r\n\r\n\t/**\r\n\t * Get the translation part of this matrix, i.e. the result of this.transformPoint(V3.O)\r\n\t */\r\n\tgetTranslation(): V3 {\r\n\t\tconst m = this.m,\r\n\t\t\tw = m[15]\r\n\t\treturn new V3(m[3] / w, m[7] / w, m[11] / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns this matrix scaled so that the determinant is 1.\r\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\r\n\t * so we need to divide by the 4th root of the determinant\r\n\t */\r\n\tnormalized(): M4 {\r\n\t\tconst detAbs = abs(this.determinant())\r\n\t\treturn 1 == detAbs ? this : this.divScalar(detAbs ** 0.25)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns this matrix scaled so that the determinant is 1.\r\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\r\n\t * so we need to divide by the 4th root of the determinant\r\n\t */\r\n\tnormalized2(): M4 {\r\n\t\tconst div = this.m[15]\r\n\t\treturn 1 == div ? this : this.divScalar(div ** 0.25)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the matrix has the following form (within NLA_PRECISION):\r\n\t * a b c 0\r\n\t * c d e 0\r\n\t * f g h 0\r\n\t * 0 0 0 1\r\n\t */\r\n\tlike3x3(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn eq(1, m[15]) && eq0(m[12]) && eq0(m[13]) && eq0(m[14]) && eq0(m[3]) && eq0(m[7]) && eq0(m[11])\r\n\t}\r\n\r\n\tisNoProj(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn 0 == m[12] && 0 == m[13] && 0 == m[14] && 1 == m[15]\r\n\t}\r\n\r\n\tlikeIdentity(): boolean {\r\n\t\treturn this.m.every((val, i) => (((i / 4) | 0) == i % 4 ? eq(1, val) : eq0(val)))\r\n\t}\r\n\r\n\tisIdentity(): boolean {\r\n\t\treturn this.m.every((val, i) => (((i / 4) | 0) == i % 4 ? 1 == val : 0 == val))\r\n\t}\r\n\r\n\ttoString(f: (number: number) => string = v => v.toFixed(6).replace(/([0.])(?=0*$)/g, ' ')): string {\r\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\r\n\t\t// slice this.m to convert it to an Array (from TypeArray)\r\n\t\tconst rounded = Array.prototype.slice.call(this.m).map(f) as string[]\r\n\t\tconst colWidths = [0, 1, 2, 3].map(colIndex =>\r\n\t\t\trounded\r\n\t\t\t\t.sliceStep(colIndex, 0, 4)\r\n\t\t\t\t.map(x => x.length)\r\n\t\t\t\t.max(),\r\n\t\t)\r\n\t\treturn [0, 1, 2, 3]\r\n\t\t\t.map(rowIndex =>\r\n\t\t\t\trounded\r\n\t\t\t\t\t.slice(rowIndex * 4, rowIndex * 4 + 4) // select matrix row\r\n\t\t\t\t\t.map((x, colIndex) => ' '.repeat(colWidths[colIndex] - x.length) + x) // pad numbers with\r\n\t\t\t\t\t// spaces to col width\r\n\t\t\t\t\t.join(' '),\r\n\t\t\t)\r\n\t\t\t.join('\\n') // join rows\r\n\t}\r\n\r\n\t/**\r\n\t * Wether this matrix is a translation matrix, i.e. of the form\r\n\t * ```\r\n\t * \t1, 0, 0, x,\r\n\t * \t0, 1, 0, y,\r\n\t * \t0, 0, 1, z,\r\n\t * \t0, 0, 0, 1\r\n\t * ```\r\n\t */\r\n\tisTranslation(): boolean {\r\n\t\t// 2: any value, otherwise same value\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t1, 0, 0, 2,\r\n\t\t\t0, 1, 0, 2,\r\n\t\t\t0, 0, 1, 2,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\r\n\t}\r\n\r\n\t/**\r\n\t * Wether this matrix is a translation matrix, i.e. of the form\r\n\t * ```\r\n\t * \ts, 0, 0, 0,\r\n\t * \t0, t, 0, 0,\r\n\t * \t0, 0, v, 0,\r\n\t * \t0, 0, 0, 1\r\n\t * ```\r\n\t */\r\n\tisScaling(): boolean {\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t2, 0, 0, 0,\r\n\t\t\t0, 2, 0, 0,\r\n\t\t\t0, 0, 2, 0,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\r\n\t}\r\n\r\n\tisZRotation(): boolean {\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t2, 2, 0, 0,\r\n\t\t\t2, 2, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn (\r\n\t\t\tmask.every((expected, index) => expected == 2 || expected == this.m[index]) &&\r\n\t\t\t(eq(1, this.m[0] ** 2 + this.m[1] ** 2) && this.m[0] == this.m[5] && this.m[1] == -this.m[4])\r\n\t\t)\r\n\t}\r\n\r\n\ttoSource(): string {\r\n\t\tconst name = M4.NAMEMAP.get(this)\r\n\t\tif (name) {\r\n\t\t\treturn name\r\n\t\t} else if (this.isTranslation()) {\r\n\t\t\treturn callsce('M4.translate', this.O)\r\n\t\t} else if (this.isScaling()) {\r\n\t\t\treturn callsce('M4.scale', this.m[0], this.m[5], this.m[10])\r\n\t\t} else if (this.isNoProj()) {\r\n\t\t\treturn !this.O.equals(V3.O)\r\n\t\t\t\t? callsce('M4.forSys', this.X, this.Y, this.Z, this.O)\r\n\t\t\t\t: callsce('M4.forSys', this.X, this.Y, this.Z)\r\n\t\t} else if (this.isMirror(0)) {\r\n\t\t\tconst m = this.m\r\n\t\t\tconst nx = Math.sqrt((1 - m[0]) / 2)\r\n\t\t\tconst ny = Math.sqrt((1 - m[5]) / 2)\r\n\t\t\tconst nz = Math.sqrt((1 - m[10]) / 2)\r\n\t\t\tconst w = m[3] / 2.0 / nx\r\n\t\t\treturn callsce('M4.mirror', { normal1: new V3(nx, ny, nz), w })\r\n\t\t} else {\r\n\t\t\tconst m = this.m\r\n\t\t\t// prettier-ignore\r\n\t\t\treturn 'new M4(' +\r\n\t\t\t\t'\\n\\t' + m[0] + ',\\t' + m[1] + ',\\t' + m[2] + ',\\t' + m[3] + ',' +\r\n\t\t\t\t'\\n\\t' + m[4] + ',\\t' + m[5] + ',\\t' + m[6] + ',\\t' + m[7] + ',' +\r\n\t\t\t\t'\\n\\t' + m[8] + ',\\t' + m[9] + ',\\t' + m[10] + ',\\t' + m[11] + ',' +\r\n\t\t\t\t'\\n\\t' + m[12] + ',\\t' + m[13] + ',\\t' + m[14] + ',\\t' + m[15] + ')'\r\n\t\t}\r\n\t}\r\n\r\n\txyAreaFactor(): number {\r\n\t\treturn this.transformVector(V3.X)\r\n\t\t\t.cross(this.transformVector(V3.Y))\r\n\t\t\t.length()\r\n\t}\r\n}\r\n\r\nM4.prototype.height = 4\r\nM4.prototype.width = 4\r\n\r\nexport interface M4 extends Transformable {}\r\naddOwnProperties(M4.prototype, Transformable.prototype, 'constructor')\r\n","declare global {\n\tinterface Object {\n\t\ttoSource(): string\n\t}\n}\nconst KEYWORD_REGEXP = new RegExp(\n\t'^(' +\n\t\t'abstract|boolean|break|byte|case|catch|char|class|const|continue|debugger|' +\n\t\t'default|delete|do|double|else|enum|export|extends|false|final|finally|' +\n\t\t'float|for|function|goto|if|implements|import|in|instanceof|int|interface|' +\n\t\t'long|native|new|null|package|private|protected|public|return|short|static|' +\n\t\t'super|switch|synchronized|this|throw|throws|transient|true|try|typeof|' +\n\t\t'undefined|var|void|volatile|while|with' +\n\t\t')$',\n)\nfunction stringIsLegalKey(key: string) {\n\treturn /^[a-z_$][0-9a-z_$]*$/gi.test(key) && !KEYWORD_REGEXP.test(key)\n}\n\nconst seen: {}[] = []\nexport function toSource(o: {}, indent = 0) {\n\tif (undefined === o) return 'undefined'\n\tif (null === o) return 'null'\n\treturn o.toSource()\n}\nfunction addToSourceMethodToPrototype<T>(clazz: new (...args: {}[]) => T, method: (this: T) => string) {\n\tif (!clazz.prototype.toSource) {\n\t\tObject.defineProperty(clazz.prototype, 'toSource', {\n\t\t\tvalue: method,\n\t\t\twritable: true,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t})\n\t}\n}\n\naddToSourceMethodToPrototype(Boolean, Boolean.prototype.toString)\naddToSourceMethodToPrototype(Function, Function.prototype.toString)\naddToSourceMethodToPrototype(Number, Number.prototype.toString)\naddToSourceMethodToPrototype(RegExp, RegExp.prototype.toString)\naddToSourceMethodToPrototype(Date, function() {\n\treturn 'new Date(' + this.getTime() + ')'\n})\naddToSourceMethodToPrototype(String, function() {\n\treturn JSON.stringify(this)\n})\naddToSourceMethodToPrototype(Array, function() {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '['\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult += '\\n\\t' + toSource(this[i]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== this.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += 0 === this.length ? ']' : '\\n]'\n\tseen.pop()\n\treturn result\n})\naddToSourceMethodToPrototype(Object, function() {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '{'\n\tconst keys = Object.keys(this).sort()\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst k = keys[i]\n\t\tresult +=\n\t\t\t'\\n\\t' +\n\t\t\t(stringIsLegalKey(k) ? k : JSON.stringify(k)) +\n\t\t\t': ' +\n\t\t\ttoSource((this as any)[k]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== keys.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += 0 === keys.length ? '}' : '\\n}'\n\tseen.pop()\n\treturn result\n})\n","import { M4 } from './M4'\nimport { assert, assertInst, assertNumbers, assertVectors, callsce, clamp, lt, NLA_PRECISION } from './NLA'\nimport { Transformable } from './Transformable'\nimport { V3 } from './V3'\n\nexport class AABB extends Transformable {\n\tconstructor(public min: V3 = V3.INF, public max: V3 = V3.INF.negated()) {\n\t\tsuper()\n\t\tassertVectors(min, max)\n\t}\n\n\tstatic forXYZ(x: number, y: number, z: number): AABB {\n\t\treturn new AABB(V3.O, new V3(x, y, z))\n\t}\n\n\tstatic forAABBs(aabbs: Iterable<AABB>): AABB {\n\t\tconst result = new AABB()\n\t\tfor (const aabb of aabbs) {\n\t\t\tresult.addAABB(aabb)\n\t\t}\n\t\treturn result\n\t}\n\n\taddPoint(p: V3): this {\n\t\tassertVectors(p)\n\t\tthis.min = this.min.min(p)\n\t\tthis.max = this.max.max(p)\n\t\treturn this\n\t}\n\n\taddPoints(ps: V3[]): this {\n\t\tps.forEach(p => this.addPoint(p))\n\t\treturn this\n\t}\n\n\taddAABB(aabb: AABB): this {\n\t\tassertInst(AABB, aabb)\n\t\tthis.addPoint(aabb.min)\n\t\tthis.addPoint(aabb.max)\n\t\treturn this\n\t}\n\n\t/**\n\t * Returns the largest AABB contained in this which doesn't overlap with aabb\n\t * @param aabb\n\t */\n\twithoutAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\tlet min, max\n\t\tconst volume = this.volume(),\n\t\t\tsize = this.size()\n\t\tlet remainingVolume = -Infinity\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tconst dim = ['x', 'y', 'z'][i] as 'x' | 'y' | 'z'\n\t\t\tconst cond = aabb.min[dim] - this.min[dim] > this.max[dim] - aabb.max[dim]\n\t\t\tconst dimMin = cond ? this.min[dim] : Math.max(this.min[dim], aabb.max[dim])\n\t\t\tconst dimMax = !cond ? this.max[dim] : Math.min(this.max[dim], aabb.min[dim])\n\t\t\tconst newRemainingVolume = ((dimMax - dimMin) * volume) / size[dim]\n\t\t\tif (newRemainingVolume > remainingVolume) {\n\t\t\t\tremainingVolume = newRemainingVolume\n\t\t\t\tmin = this.min.withElement(dim, dimMin)\n\t\t\t\tmax = this.max.withElement(dim, dimMax)\n\t\t\t}\n\t\t}\n\t\treturn new AABB(min, max)\n\t}\n\n\tgetIntersectionAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\treturn new AABB(this.min.max(aabb.min), this.max.min(aabb.max))\n\t}\n\n\ttouchesAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x > aabb.max.x ||\n\t\t\tthis.max.x < aabb.min.x ||\n\t\t\tthis.min.y > aabb.max.y ||\n\t\t\tthis.max.y < aabb.min.y ||\n\t\t\tthis.min.z > aabb.max.z ||\n\t\t\tthis.max.z < aabb.min.z\n\t\t)\n\t}\n\n\ttouchesAABBfuzzy(aabb: AABB, precisision = NLA_PRECISION): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tlt(aabb.max.x, this.min.x, precisision) ||\n\t\t\tlt(this.max.x, aabb.min.x, precisision) ||\n\t\t\tlt(aabb.max.y, this.min.y, precisision) ||\n\t\t\tlt(this.max.y, aabb.min.y, precisision) ||\n\t\t\tlt(aabb.max.z, this.min.z, precisision) ||\n\t\t\tlt(this.max.z, aabb.min.z, precisision)\n\t\t)\n\t}\n\n\tintersectsAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x ||\n\t\t\tthis.max.x <= aabb.min.x ||\n\t\t\tthis.min.y >= aabb.max.y ||\n\t\t\tthis.max.y <= aabb.min.y ||\n\t\t\tthis.min.z >= aabb.max.z ||\n\t\t\tthis.max.z <= aabb.min.z\n\t\t)\n\t}\n\n\tintersectsAABB2d(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x ||\n\t\t\tthis.max.x <= aabb.min.x ||\n\t\t\tthis.min.y >= aabb.max.y ||\n\t\t\tthis.max.y <= aabb.min.y\n\t\t)\n\t}\n\n\tcontainsPoint(p: V3): boolean {\n\t\tassertVectors(p)\n\t\treturn (\n\t\t\tthis.min.x <= p.x &&\n\t\t\tthis.min.y <= p.y &&\n\t\t\tthis.min.z <= p.z &&\n\t\t\tthis.max.x >= p.x &&\n\t\t\tthis.max.y >= p.y &&\n\t\t\tthis.max.z >= p.z\n\t\t)\n\t}\n\n\tcontainsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) > radius\n\t}\n\n\tintersectsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) <= radius\n\t}\n\n\tdistanceToPoint(p: V3) {\n\t\tassertVectors(p)\n\t\tconst x = p.x,\n\t\t\ty = p.y,\n\t\t\tz = p.z\n\t\tconst min = this.min,\n\t\t\tmax = this.max\n\t\tif (this.containsPoint(p)) {\n\t\t\treturn Math.max(min.x - x, x - max.x, min.y - y, y - max.y, min.z - z, z - max.z)\n\t\t}\n\t\treturn p.distanceTo(new V3(clamp(x, min.x, max.x), clamp(y, min.y, max.y), clamp(z, min.z, max.z)))\n\t}\n\n\tcontainsAABB(aabb: AABB) {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.containsPoint(aabb.min) && this.containsPoint(aabb.max)\n\t}\n\n\tlikeAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.min.like(aabb.min) && this.max.like(aabb.max)\n\t}\n\n\tintersectsLine(line: { anchor: V3; dir1: V3; tMin: number; tMax: number }): boolean {\n\t\tassertVectors(line.anchor, line.dir1)\n\t\tconst dir = line.dir1.map(el => el || Number.MIN_VALUE)\n\t\tconst minTs = this.min.minus(line.anchor).divv(dir)\n\t\tconst maxTs = this.max.minus(line.anchor).divv(dir)\n\t\tconst tMin = minTs.min(maxTs).maxElement(),\n\t\t\ttMax = minTs.max(maxTs).minElement()\n\t\treturn tMin <= tMax && !(tMax < line.tMin || line.tMax < tMin)\n\t}\n\n\thasVolume(): boolean {\n\t\treturn this.min.x <= this.max.x && this.min.y <= this.max.y && this.min.z <= this.max.z\n\t}\n\n\tvolume(): number {\n\t\tif (!this.hasVolume()) {\n\t\t\treturn -1\n\t\t}\n\t\tconst v = this.max.minus(this.min)\n\t\treturn v.x * v.y * v.z\n\t}\n\n\tsize(): V3 {\n\t\treturn this.max.minus(this.min)\n\t}\n\n\tgetCenter(): V3 {\n\t\treturn this.min.plus(this.max).div(2)\n\t}\n\n\ttransform(m4: M4): this {\n\t\tassertInst(M4, m4)\n\t\tassert(m4.isAxisAligned())\n\t\tconst aabb = new AABB()\n\t\taabb.addPoint(m4.transformPoint(this.min))\n\t\taabb.addPoint(m4.transformPoint(this.max))\n\t\treturn aabb as this\n\t}\n\n\tofTransformed(m4: M4): AABB {\n\t\tassertInst(M4, m4)\n\t\tconst aabb = new AABB()\n\t\taabb.addPoints(m4.transformedPoints(this.corners()))\n\t\treturn aabb\n\t}\n\n\tcorners(): V3[] {\n\t\tconst min = this.min,\n\t\t\tmax = this.max\n\t\treturn [\n\t\t\tmin,\n\t\t\tnew V3(min.x, min.y, max.z),\n\t\t\tnew V3(min.x, max.y, min.z),\n\t\t\tnew V3(min.x, max.y, max.z),\n\n\t\t\tnew V3(max.x, min.y, min.z),\n\t\t\tnew V3(max.x, min.y, max.z),\n\t\t\tnew V3(max.x, max.y, min.z),\n\t\t\tmax,\n\t\t]\n\t}\n\n\ttoString(): string {\n\t\treturn callsce('new AABB', this.min, this.max)\n\t}\n\n\ttoSource(): string {\n\t\treturn this.toString()\n\t}\n\n\t/**\n\t * Return the matrix which transforms the AABB from V3.O to V3.XYZ to this AABB.\n\t */\n\tgetM4(): M4 {\n\t\treturn M4.translate(this.min).times(M4.scale(this.size()))\n\t}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n *\r\n * chroma.js - JavaScript library for color conversions\r\n *\r\n * Copyright (c) 2011-2017, Gregor Aisch\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice, this\r\n *    list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. The name Gregor Aisch may not be used to endorse or promote products\r\n *    derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\r\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\r\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nconst { abs, atan2, cos, floor, log, min, max, round, sin, sqrt, cbrt, PI, hypot } = Math\r\n\r\nfunction lerp(a: number, b: number, f: number) {\r\n\treturn a + (b - a) * f\r\n}\r\nfunction lerpInv(a: number, b: number, f: number) {\r\n\treturn (f - a) / (b - a)\r\n}\r\nfunction clamp(x: number, min = 0, max = 1) {\r\n\treturn x < min ? min : x > max ? max : x\r\n}\r\n\r\nfunction newtonIterate1d(f: (x: number) => number, xStart: number, max_steps: number, eps: number = 1e-8): number {\r\n\tlet x = xStart,\r\n\t\tfx\r\n\twhile (max_steps-- && abs((fx = f(x))) > eps) {\r\n\t\tconst dfdx = (f(x + eps) - fx) / eps\r\n\t\tconsole.log(\"fx / dfdx\", fx / dfdx, \"fx\", fx, \"x\", x)\r\n\t\tx = x - fx / dfdx\r\n\t}\r\n\treturn x\r\n}\r\n// function bisect(f: (x: number) => number, a: number, b: number, steps: number) {\r\n// \t//assert(a < b)\r\n// \tlet fA = f(a),\r\n// \t\tfB = f(b)\r\n// \t//assert(fA * fB < 0)\r\n// \twhile (steps--) {\r\n// \t\tconst c = (a + b) / 2\r\n// \t\tconst fC = f(c)\r\n// \t\tconsole.log(\"fC\", fC, \"c\", c)\r\n// \t\tif (sign(fA) == sign(fC)) {\r\n// \t\t\ta = c\r\n// \t\t\tfA = fC\r\n// \t\t} else {\r\n// \t\t\tb = c\r\n// \t\t\tfB = fC\r\n// \t\t}\r\n// \t}\r\n// \t//assert(a <= (b + a) / 2)\r\n// \t//assert(b >= (b + a) / 2)\r\n// \treturn (a + b) / 2\r\n// }\r\n\r\nconst TWOPI = 2 * PI\r\n\r\nconst DEG2RAD = PI / 180\r\n\r\nconst RAD2DEG = 180 / PI\r\n/**\r\n * @param alpha1 default=1\r\n * @example chroma(99, 99, 44, 0.7)\r\n */\r\nfunction chroma(red255: number, green255: number, blue255: number, alpha1?: number): chroma.Color\r\n/**\r\n * @example chroma('mediumorchid') // a css string\r\n * @example chroma([56, 203, 30]) // a RGB triple\r\n * @example chroma(0x4b0082) // a hex num\r\n * @example chroma([30, 0.8, 0.3], 'hsl') // explicit format\r\n */\r\nfunction chroma(x: chroma.Chromable, format?: ColorFormat): chroma.Color\r\n/** @example chroma(30, 0.8, 0.3, 'hsl') */\r\nfunction chroma(channel0: number, channel1: chroma.Color, channel2: number, format: ColorFormat): chroma.Color\r\n/** @example chroma(0.3, 0.8, 0.3, 1, 'gl') */\r\nfunction chroma(\r\n\tchannel0: number,\r\n\tchannel1: chroma.Color,\r\n\tchannel2: number,\r\n\tchannel3: number,\r\n\tformat: ColorFormat,\r\n): chroma.Color\r\nfunction chroma(...args: any[]) {\r\n\tif (args[0] instanceof chroma.Color) {\r\n\t\treturn args[0]\r\n\t}\r\n\tif (args.length > 1 && \"string\" == typeof args[args.length - 1]) {\r\n\t\treturn guess(args.slice(0, args.length - 1), args[args.length - 1])\r\n\t} else if (Array.isArray(args[0])) {\r\n\t\treturn guess(args[0])\r\n\t} else {\r\n\t\treturn guess(args)\r\n\t}\r\n}\r\nexport default chroma\r\nexport { chroma }\r\nnamespace chroma {\r\n\t/**\r\n\t * A Chromable is any value which can be converted to a color. For ease of use, most functions accept these instead of\r\n\t * only Color values.\r\n\t */\r\n\texport type Chromable = number | string | Color | number[]\r\n\r\n\texport class Color {\r\n\t\t/** @internal */\r\n\t\tconstructor(\r\n\t\t\tprivate readonly r: number,\r\n\t\t\tprivate readonly g: number,\r\n\t\t\tprivate readonly b: number,\r\n\t\t\tprivate readonly a = 1,\r\n\t\t) {}\r\n\r\n\t\t// public shade() {\r\n\t\t// \tconst shades: [string, string, number][] = [\r\n\t\t// \t\t[\"ff0000\", \"red\"],\r\n\t\t// \t\t[\"ffa500\", \"orange\"],\r\n\t\t// \t\t[\"ffff00\", \"yellow\"],\r\n\t\t// \t\t[\"008000\", \"green\"],\r\n\t\t// \t\t[\"0000ff\", \"blue\"],\r\n\t\t// \t\t[\"ee82ee\", \"violet\"],\r\n\t\t// \t\t[\"a52a2a\", \"brown\"],\r\n\t\t// \t\t[\"000000\", \"black\"],\r\n\t\t// \t\t[\"808080\", \"grey\"],\r\n\t\t// \t\t[\"ffffff\", \"white\"],\r\n\t\t// \t] as any\r\n\t\t// \tfunction angleDiff(a: number, b: number) {\r\n\t\t// \t\tconst d = (a - b) % 360\r\n\t\t// \t\tif (d > 180) return d - 360\r\n\t\t// \t\tif (d < -180) return d + 360\r\n\t\t// \t\treturn d\r\n\t\t// \t}\r\n\t\t// \tshades.forEach(arr => arr.push(chroma(arr[0]).hsl()[0]))\r\n\t\t// \tconst [h, s, l] = this.hsl()\r\n\t\t// \tif (l > 0.9) return \"white\"\r\n\t\t// \tif (l > 0.8 && s < 0.2) return \"white\"\r\n\t\t// \tif (s < 0.1) return \"grey\"\r\n\t\t// \tif (s < 0.4 && h > 0 && h < 48) return \"brown\"\r\n\r\n\t\t// \tconst distanceInXYZ: { [hue: number]: number } = { 0: 0 }\r\n\t\t// \tfor (let i = 60; i <= 360; i += 60) {\r\n\t\t// \t\tdistanceInXYZ[i] =\r\n\t\t// \t\t\tdistanceInXYZ[i - 60] + chroma.distance(chroma.hsl(i - 60, 1, 0.5), chroma.hsl(i, 1, 0.5), \"xyz\")\r\n\t\t// \t}\r\n\t\t// \t// console.log(distanceInXYZ)\r\n\r\n\t\t// \tconst shadeEnds: { [hue: number]: number } = {\r\n\t\t// \t\t0: 9,\r\n\t\t// \t\t38: 48,\r\n\t\t// \t\t60: 65,\r\n\t\t// \t\t120: 165,\r\n\t\t// \t\t240: 245,\r\n\t\t// \t\t300: 338,\r\n\t\t// \t\t360: 369,\r\n\t\t// \t}\r\n\r\n\t\t// \tconst getColorDistanceAlongXYZHue = (hueDegrees: number) => {\r\n\t\t// \t\tconst base = hueDegrees - (hueDegrees % 60)\r\n\t\t// \t\treturn (\r\n\t\t// \t\t\tdistanceInXYZ[base] + chroma.distance(chroma.hsl(base, 1, 0.5), chroma.hsl(hueDegrees, 1, 0.5), \"xyz\")\r\n\t\t// \t\t)\r\n\t\t// \t}\r\n\t\t// \tconst colorXYZD = getColorDistanceAlongXYZHue(this.hsl()[0])\r\n\t\t// \tconst md = distanceInXYZ[360]\r\n\t\t// \tconst shadeHue =\r\n\t\t// \t\t(Object.keys(shadeEnds) as any[]).find(shadeHue => shadeEnds[shadeHue | 0] >= this.hsl()[0])! % 360\r\n\t\t// \treturn shades.find(([_hex, _name, _hue]) => (_hue | 0) === shadeHue)![1]\r\n\t\t// \t// process.exit()\r\n\t\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\r\n\t\t// \t\treturn -abs(angleDiff(this.hsl()[0], _hue))\r\n\t\t// \t})[1]\r\n\t\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\r\n\t\t// \t\tconst [thisL, thisA, thisB] = this.lab()\r\n\t\t// \t\tconst [L, A, B] = chroma(_hex).lab()\r\n\t\t// \t\treturn -hypot(thisL - L, thisA - A, thisB - B)\r\n\t\t// \t})[1]\r\n\t\t// }\r\n\r\n\t\t/**\r\n\t\t * @see [[chroma.mix]]\r\n\t\t */\r\n\t\tpublic mix(col2: Chromable, f: number, m: InterpolationMode = \"rgb\") {\r\n\t\t\treturn chroma.mix(this, col2, f, m)\r\n\t\t}\r\n\t\tpublic rgb(doRound = true, clamp_ = true): RGB {\r\n\t\t\tconst f = (t: number) => {\r\n\t\t\t\tif (doRound) t = round(t)\r\n\t\t\t\tif (clamp_) t = clamp(t, 0, 255)\r\n\t\t\t\treturn t\r\n\t\t\t}\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn [f(r), f(g), f(b)]\r\n\t\t}\r\n\t\tpublic rgba(doRound = true, clamp_ = true): RGBA {\r\n\t\t\tconst f = (t: number) => {\r\n\t\t\t\tif (doRound) t = round(t)\r\n\t\t\t\tif (clamp_) t = clamp(t, 0, 255)\r\n\t\t\t\treturn t\r\n\t\t\t}\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\treturn [f(r), f(g), f(b), a]\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Return a hex-string representation of this color.\r\n\t\t *\r\n\t\t * @param mode\r\n\t\t * @see #num for a hex-number representation.\r\n\t\t * @example chroma('yellow').alpha(0.7).hex()\r\n\t\t * @example chroma('yellow').alpha(0.7).hex('rgba')\r\n\t\t * @example chroma('yellow').alpha(0.7).hex('argb')\r\n\t\t */\r\n\t\tpublic hex(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\treturn rgb2hex(r, g, b, a, mode)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\r\n\t\t *\r\n\t\t * @example chroma('purple').hsl()\r\n\t\t */\r\n\t\tpublic hsl(): HSL {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2hsl(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\r\n\t\t *\r\n\t\t * @example chroma('purple').hsv()\r\n\t\t */\r\n\t\tpublic hsv() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2hsv(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\r\n\t\t *\r\n\t\t * @example chroma('purple').hcg()\r\n\t\t */\r\n\t\tpublic hcg() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2hcg(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a CSS `rgb(...)` or `hsl(...)` string representation that can be used as CSS-color definition. The alpha\r\n\t\t * value is not output if it 1.\r\n\t\t * @example chroma('teal').css() // == \"rgb(0,128,128)\"\r\n\t\t * @example chroma('teal').alpha(0.5).css() // == \"rgba(0,128,128,0.5)\"\r\n\t\t * @example chroma('teal').css('hsl') // == \"hsl(180,100%,25.1%)\"\r\n\t\t */\r\n\t\tpublic css(mode: \"rgb\" | \"hsl\" = \"rgb\") {\r\n\t\t\tif (\"rgb\" == mode) {\r\n\t\t\t\tconst { r, g, b, a } = this\r\n\t\t\t\treturn rgb2css(r, g, b, a)\r\n\t\t\t} else if (\"hsl\" == mode) {\r\n\t\t\t\treturn hsl2css(this.hsl(), this.alpha())\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic name(closest: true): string\r\n\t\t/**\r\n\t\t * Get the name of a color. By default, this method will try to match the color exactly (comparing rounded RGB\r\n\t\t * values). Pass `true` to return the name of the color which is closest to `this` in CIELAB color space. CIELAB is\r\n\t\t * used as it is perceptually uniform.\r\n\t\t * @param closest Whether this should find the closest color name. default=false\r\n\t\t * @return If `closest == false`, the name of this color or `undefined` if there is no match. Otherwise, will always\r\n\t\t * return a color name.\r\n\t\t * @example chroma('#ff0000').name() // == \"red\"\r\n\t\t * @example chroma('#ff0001').name() // == undefined\r\n\t\t * @example chroma('#ff0001').name(true) // == \"red\"\r\n\t\t */\r\n\t\tpublic name(closest?: boolean): string | undefined\r\n\t\tpublic name(closest: boolean = false): string | undefined {\r\n\t\t\tconst num = this.num()\r\n\t\t\tconst name = Object.keys(chroma.w3cx11).find(name => (chroma.w3cx11 as any)[name] == num)\r\n\t\t\tif (!name && closest) {\r\n\t\t\t\tconst [thisLStar, thisAStar, thisBStar] = this.lab()\r\n\t\t\t\treturn withMax(Object.keys(chroma.w3cx11) as (keyof typeof chroma.w3cx11)[], name => {\r\n\t\t\t\t\tconst [lStar, aStar, bStar] = chroma.num(chroma.w3cx11[name]).lab()\r\n\t\t\t\t\treturn -hypot(thisLStar - lStar, thisAStar - aStar, thisBStar - bStar)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn name\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get the [CMYK](#chroma.CMYK) representation of this color.\r\n\t\t *\r\n\t\t * @example chroma('red').cmyk()\r\n\t\t */\r\n\t\tpublic cmyk() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2cmyk(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [GL] representation of this color.\r\n\t\t * @example chroma('33cc00').gl()\r\n\t\t */\r\n\t\tpublic gl(): GL {\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\treturn [r / 255, g / 255, b / 255, a]\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get luminance of the color. This is equal to the Y channel of the XYZ color space.\r\n\t\t * @example chroma('black').luminance() // == 0\r\n\t\t * @example chroma('white').luminance() // == 1\r\n\t\t * @example chroma('red').luminance() // == ~0.21\r\n\t\t * @see https://en.wikipedia.org/wiki/Relative_luminance\r\n\t\t */\r\n\t\tpublic luminance(): number\r\n\t\t/**\r\n\t\t * Return a new [Color] with `lum1` by linearly interpolating `this` with white (when increasing the luminance) or\r\n\t\t * black (otherwise) in the [XYZ] color space.\r\n\t\t * @see https://en.wikipedia.org/wiki/Relative_luminance\r\n\t\t * @example // Approximately doubling the luminance of red\r\n\t\t * @example chroma('red').luminance(0.4) // == #ff8686 // \"Vivid Tangerine\"\r\n\t\t * @param lum1 The desired luminance.\r\n\t\t */\r\n\t\tpublic luminance(lum1: number): this\r\n\t\tpublic luminance(lum1?: number) {\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\tconst [, Y] = rgb2xyz(r, g, b)\r\n\t\t\tif (undefined === lum1) {\r\n\t\t\t\treturn Y\r\n\t\t\t}\r\n\t\t\tconst inverseLerp = (a: number, b: number, val: number) => (val - a) / (b - a)\r\n\t\t\tif (lum1 > Y) {\r\n\t\t\t\t// lerp to white\r\n\t\t\t\treturn chroma.mix(this, chroma(\"white\"), inverseLerp(Y, 1, lum1), \"xyz\").alpha(a)\r\n\t\t\t} else {\r\n\t\t\t\t// lerp to black\r\n\t\t\t\treturn chroma.mix(chroma(\"black\"), this, inverseLerp(0, Y, lum1), \"xyz\").alpha(a)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get color temperature of this color in Kelvin. This only makes sense for colors close to those output by\r\n\t\t * chroma.kelvin\r\n\t\t *\r\n\t\t * @example [c = chroma('#ff3300'), c.temperature()]\r\n\t\t * @example [c = chroma('#ffe3cd'), c.temperature()]\r\n\t\t * @example [c = chroma('#b3ccff'), c.temperature()]\r\n\t\t */\r\n\t\tpublic temperature() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2kelvin(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a new [Color] with a channel changed.\r\n\t\t * @example chroma('skyblue').set('hsl.h', 0) // change hue to 0 deg (=red)\r\n\t\t * @example chroma('hotpink').set('lch.c', 30) // set chromaticity to 30\r\n\t\t * @example chroma('orangered').set('lab.l', x => x / 2) // half Lab lightness\r\n\t\t * @example chroma('darkseagreen').set('lch.c', x => x * 2) // double Lch saturation\r\n\t\t */\r\n\t\tpublic set(modeAndChannel: string, value: number | ((channel: number) => number)) {\r\n\t\t\tconst [mode, channel] = modeAndChannel.split(\".\") as [ColorMode, string]\r\n\t\t\tconst src = this[mode]()\r\n\t\t\tconst i = mode.indexOf(channel)\r\n\t\t\tif (-1 == i) throw new Error(\"invalid channel\")\r\n\t\t\tsrc[i] = \"number\" == typeof value ? value : value(src[i])\r\n\t\t\treturn chroma(src, mode).alpha(this.a)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether this color is outside the RGB color cube and will be clipped/clamped when calling .rgb()\r\n\t\t *\r\n\t\t * @example [c = chroma.lch( 20, 40, 50), c.clipped()]\r\n\t\t * @example [c = chroma.lch( 40, 40, 50), c.clipped()]\r\n\t\t * @example [c = chroma.lch( 60, 40, 50), c.clipped()]\r\n\t\t * @example [c = chroma.lch( 80, 40, 50), c.clipped()]\r\n\t\t * @example [c = chroma.lch(100, 40, 50), c.clipped()]\r\n\t\t */\r\n\t\tpublic clipped() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn !(0 <= r && r <= 255 && (0 <= g && g <= 255) && (0 <= b && b <= 255))\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns black or white, whichever has the highest contrast to `this`.\r\n\t\t * In the readme you should see the result of this.\r\n\t\t *\r\n\t\t * @example chroma('red')\r\n\t\t * @example chroma('yellow')\r\n\t\t */\r\n\t\tpublic textColor() {\r\n\t\t\treturn this.luminance() > 0.5 ? chroma.black : chroma.white\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get alpha value of color.\r\n\t\t * @example chroma.rgb(0, 0, 255, 0.5).alpha() // == 0.5\r\n\t\t */\r\n\t\tpublic alpha(): number\r\n\t\t/**\r\n\t\t * Return new [Color] with given alpha value.\r\n\t\t * @example chroma('green').alpha(0.3)\r\n\t\t * @example chroma('green').alpha(0.3).hex('rgba') // == \"#00ff004d\"\r\n\t\t * @param alpha1 The desired alpha value.\r\n\t\t */\r\n\t\tpublic alpha(alpha1: number): Color\r\n\t\tpublic alpha(alpha1?: number): number | Color {\r\n\t\t\tif (undefined === alpha1) {\r\n\t\t\t\treturn this.a\r\n\t\t\t}\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn chroma.rgb(r, g, b, alpha1)\r\n\t\t}\r\n\r\n\t\tpublic darker(amount = 1) {\r\n\t\t\tconst [l, a, b] = this.lab()\r\n\t\t\treturn chroma.lab(l - LAB_Kn * amount, a, b, this.alpha())\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @param amount\r\n\t\t * @example chroma('hotpink')\r\n\t\t * @example chroma('hotpink').brighter()\r\n\t\t * @example chroma('hotpink').brighter(2)\r\n\t\t * @example chroma('hotpink').brighter(3)\r\n\t\t */\r\n\t\tpublic brighter(amount = 1) {\r\n\t\t\treturn this.darker(-amount)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a new [Color] with increased saturation.\r\n\t\t * @param amount How much.\r\n\t\t * @example chroma('slategray')\r\n\t\t * @example chroma('slategray').saturate()\r\n\t\t * @example chroma('slategray').saturate(2)\r\n\t\t * @example chroma('slategray').saturate(3)\r\n\t\t */\r\n\t\tpublic saturate(amount = 1) {\r\n\t\t\tconst [l, c, h] = this.lch()\r\n\t\t\treturn chroma.lch(l, max(0, c + amount * LAB_Kn), h, this.alpha())\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Equivalent to `saturate(-amount)`.\r\n\t\t * @see #saturate\r\n\t\t */\r\n\t\tpublic desaturate(amount = 1) {\r\n\t\t\treturn this.saturate(-amount)\r\n\t\t}\r\n\r\n\t\tpublic premultiplied() {\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\treturn chroma.rgb(r * a, g * a, b * a, a)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [HSI] representation of this color. hue will always be in [0; 360). Values are never NaN.\r\n\t\t *\r\n\t\t * @example chroma('purple').hsi()\r\n\t\t */\r\n\t\tpublic hsi() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2hsi(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [LAB] representation of this color.\r\n\t\t *\r\n\t\t * @example chroma('purple').lab()\r\n\t\t */\r\n\t\tpublic lab() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2lab(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Return a hex-num of this color.\r\n\t\t *\r\n\t\t * @param mode\r\n\t\t * @see #num for a hex-number representation.\r\n\t\t * @example chroma('yellow').alpha(0.7).hex()\r\n\t\t * @example chroma('yellow').alpha(0.7).hex('rgba')\r\n\t\t * @example chroma('yellow').alpha(0.7).hex('argb')\r\n\t\t */\r\n\t\tpublic num(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\treturn rgb2num(r, g, b, a, mode)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [LCH] representation of this color. hue will always be in [0; 360). Values are never NaN.\r\n\t\t *\r\n\t\t * @example chroma('purple').lch()\r\n\t\t */\r\n\t\tpublic lch() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2lch(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the [XYZ] representation of this color. hue will always be in [0; 360). Values are never NaN.\r\n\t\t *\r\n\t\t * @example chroma('purple').xyz()\r\n\t\t */\r\n\t\tpublic xyz() {\r\n\t\t\tconst { r, g, b } = this\r\n\t\t\treturn rgb2xyz(r, g, b)\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether this [Color](#chroma.Color) is identical (strict equality of r, g, b, a) to `color`.\r\n\t\t */\r\n\t\tpublic equals(color: Color) {\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\tconst { r: r2, g: g2, b: b2, a: a2 } = color\r\n\t\t\treturn r == r2 && g == g2 && b == b2 && a == a2\r\n\t\t}\r\n\r\n\t\tpublic hashCode() {\r\n\t\t\treturn this.num(\"rgba\")\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @example chroma('red').toSource() // == \"chroma.rgb(255, 0, 0)\"\r\n\t\t * @example chroma.rgb(-2, 100.02, 200, 0.5).toSource() // == \"chroma.rgb(-2, 100.02, 200, 0.5)\"\r\n\t\t */\r\n\t\tpublic toSource() {\r\n\t\t\tconst { r, g, b, a } = this\r\n\t\t\treturn \"chroma.rgb(\" + r + \", \" + g + \", \" + b + (a === 1 ? \")\" : \", \" + a + \")\")\r\n\t\t}\r\n\t}\r\n\texport interface Color {\r\n\t\ttoString(): string\r\n\t\t//darker(amount: number): Color\r\n\t\t//brighter(amount: number): Color\r\n\t\tkelvin(): number\r\n\t}\r\n\tColor.prototype.toString = Color.prototype.css\r\n\tColor.prototype.kelvin = Color.prototype.temperature\r\n\t/**\r\n\t * @example chroma.black\r\n\t */\r\n\texport const black = new Color(0, 0, 0, 1)\r\n\r\n\t/**\r\n\t * @example chroma.black\r\n\t */\r\n\texport const white = new Color(255, 255, 255, 1)\r\n\r\n\texport const brewer = {\r\n\t\tOrRd: [0xfff7ec, 0xfee8c8, 0xfdd49e, 0xfdbb84, 0xfc8d59, 0xef6548, 0xd7301f, 0xb30000, 0x7f0000],\r\n\t\tPuBu: [0xfff7fb, 0xece7f2, 0xd0d1e6, 0xa6bddb, 0x74a9cf, 0x3690c0, 0x0570b0, 0x045a8d, 0x023858],\r\n\t\tBuPu: [0xf7fcfd, 0xe0ecf4, 0xbfd3e6, 0x9ebcda, 0x8c96c6, 0x8c6bb1, 0x88419d, 0x810f7c, 0x4d004b],\r\n\t\tOranges: [0xfff5eb, 0xfee6ce, 0xfdd0a2, 0xfdae6b, 0xfd8d3c, 0xf16913, 0xd94801, 0xa63603, 0x7f2704],\r\n\t\tBuGn: [0xf7fcfd, 0xe5f5f9, 0xccece6, 0x99d8c9, 0x66c2a4, 0x41ae76, 0x238b45, 0x006d2c, 0x00441b],\r\n\t\tYlOrBr: [0xffffe5, 0xfff7bc, 0xfee391, 0xfec44f, 0xfe9929, 0xec7014, 0xcc4c02, 0x993404, 0x662506],\r\n\t\tYlGn: [0xffffe5, 0xf7fcb9, 0xd9f0a3, 0xaddd8e, 0x78c679, 0x41ab5d, 0x238443, 0x006837, 0x004529],\r\n\t\tReds: [0xfff5f0, 0xfee0d2, 0xfcbba1, 0xfc9272, 0xfb6a4a, 0xef3b2c, 0xcb181d, 0xa50f15, 0x67000d],\r\n\t\tRdPu: [0xfff7f3, 0xfde0dd, 0xfcc5c0, 0xfa9fb5, 0xf768a1, 0xdd3497, 0xae017e, 0x7a0177, 0x49006a],\r\n\t\tGreens: [0xf7fcf5, 0xe5f5e0, 0xc7e9c0, 0xa1d99b, 0x74c476, 0x41ab5d, 0x238b45, 0x006d2c, 0x00441b],\r\n\t\tYlGnBu: [0xffffd9, 0xedf8b1, 0xc7e9b4, 0x7fcdbb, 0x41b6c4, 0x1d91c0, 0x225ea8, 0x253494, 0x081d58],\r\n\t\tPurples: [0xfcfbfd, 0xefedf5, 0xdadaeb, 0xbcbddc, 0x9e9ac8, 0x807dba, 0x6a51a3, 0x54278f, 0x3f007d],\r\n\t\tGnBu: [0xf7fcf0, 0xe0f3db, 0xccebc5, 0xa8ddb5, 0x7bccc4, 0x4eb3d3, 0x2b8cbe, 0x0868ac, 0x084081],\r\n\t\tGreys: [0xffffff, 0xf0f0f0, 0xd9d9d9, 0xbdbdbd, 0x969696, 0x737373, 0x525252, 0x252525, 0x000000],\r\n\t\tYlOrRd: [0xffffcc, 0xffeda0, 0xfed976, 0xfeb24c, 0xfd8d3c, 0xfc4e2a, 0xe31a1c, 0xbd0026, 0x800026],\r\n\t\tPuRd: [0xf7f4f9, 0xe7e1ef, 0xd4b9da, 0xc994c7, 0xdf65b0, 0xe7298a, 0xce1256, 0x980043, 0x67001f],\r\n\t\tBlues: [0xf7fbff, 0xdeebf7, 0xc6dbef, 0x9ecae1, 0x6baed6, 0x4292c6, 0x2171b5, 0x08519c, 0x08306b],\r\n\t\tPuBuGn: [0xfff7fb, 0xece2f0, 0xd0d1e6, 0xa6bddb, 0x67a9cf, 0x3690c0, 0x02818a, 0x016c59, 0x014636],\r\n\t\tViridis: [0x440154, 0x482777, 0x3f4a8a, 0x31678e, 0x26838f, 0x1f9d8a, 0x6cce5a, 0xb6de2b, 0xfee825],\r\n\t\tSpectral: [\r\n\t\t\t0x9e0142,\r\n\t\t\t0xd53e4f,\r\n\t\t\t0xf46d43,\r\n\t\t\t0xfdae61,\r\n\t\t\t0xfee08b,\r\n\t\t\t0xffffbf,\r\n\t\t\t0xe6f598,\r\n\t\t\t0xabdda4,\r\n\t\t\t0x66c2a5,\r\n\t\t\t0x3288bd,\r\n\t\t\t0x5e4fa2,\r\n\t\t],\r\n\t\tRdYlGn: [\r\n\t\t\t0xa50026,\r\n\t\t\t0xd73027,\r\n\t\t\t0xf46d43,\r\n\t\t\t0xfdae61,\r\n\t\t\t0xfee08b,\r\n\t\t\t0xffffbf,\r\n\t\t\t0xd9ef8b,\r\n\t\t\t0xa6d96a,\r\n\t\t\t0x66bd63,\r\n\t\t\t0x1a9850,\r\n\t\t\t0x006837,\r\n\t\t],\r\n\t\tRdBu: [\r\n\t\t\t0x67001f,\r\n\t\t\t0xb2182b,\r\n\t\t\t0xd6604d,\r\n\t\t\t0xf4a582,\r\n\t\t\t0xfddbc7,\r\n\t\t\t0xf7f7f7,\r\n\t\t\t0xd1e5f0,\r\n\t\t\t0x92c5de,\r\n\t\t\t0x4393c3,\r\n\t\t\t0x2166ac,\r\n\t\t\t0x053061,\r\n\t\t],\r\n\t\tPiYG: [\r\n\t\t\t0x8e0152,\r\n\t\t\t0xc51b7d,\r\n\t\t\t0xde77ae,\r\n\t\t\t0xf1b6da,\r\n\t\t\t0xfde0ef,\r\n\t\t\t0xf7f7f7,\r\n\t\t\t0xe6f5d0,\r\n\t\t\t0xb8e186,\r\n\t\t\t0x7fbc41,\r\n\t\t\t0x4d9221,\r\n\t\t\t0x276419,\r\n\t\t],\r\n\t\tPRGn: [\r\n\t\t\t0x40004b,\r\n\t\t\t0x762a83,\r\n\t\t\t0x9970ab,\r\n\t\t\t0xc2a5cf,\r\n\t\t\t0xe7d4e8,\r\n\t\t\t0xf7f7f7,\r\n\t\t\t0xd9f0d3,\r\n\t\t\t0xa6dba0,\r\n\t\t\t0x5aae61,\r\n\t\t\t0x1b7837,\r\n\t\t\t0x00441b,\r\n\t\t],\r\n\t\tRdYlBu: [\r\n\t\t\t0xa50026,\r\n\t\t\t0xd73027,\r\n\t\t\t0xf46d43,\r\n\t\t\t0xfdae61,\r\n\t\t\t0xfee090,\r\n\t\t\t0xffffbf,\r\n\t\t\t0xe0f3f8,\r\n\t\t\t0xabd9e9,\r\n\t\t\t0x74add1,\r\n\t\t\t0x4575b4,\r\n\t\t\t0x313695,\r\n\t\t],\r\n\t\tBrBG: [\r\n\t\t\t0x543005,\r\n\t\t\t0x8c510a,\r\n\t\t\t0xbf812d,\r\n\t\t\t0xdfc27d,\r\n\t\t\t0xf6e8c3,\r\n\t\t\t0xf5f5f5,\r\n\t\t\t0xc7eae5,\r\n\t\t\t0x80cdc1,\r\n\t\t\t0x35978f,\r\n\t\t\t0x01665e,\r\n\t\t\t0x003c30,\r\n\t\t],\r\n\t\tRdGy: [\r\n\t\t\t0x67001f,\r\n\t\t\t0xb2182b,\r\n\t\t\t0xd6604d,\r\n\t\t\t0xf4a582,\r\n\t\t\t0xfddbc7,\r\n\t\t\t0xffffff,\r\n\t\t\t0xe0e0e0,\r\n\t\t\t0xbababa,\r\n\t\t\t0x878787,\r\n\t\t\t0x4d4d4d,\r\n\t\t\t0x1a1a1a,\r\n\t\t],\r\n\t\tPuOr: [\r\n\t\t\t0x7f3b08,\r\n\t\t\t0xb35806,\r\n\t\t\t0xe08214,\r\n\t\t\t0xfdb863,\r\n\t\t\t0xfee0b6,\r\n\t\t\t0xf7f7f7,\r\n\t\t\t0xd8daeb,\r\n\t\t\t0xb2abd2,\r\n\t\t\t0x8073ac,\r\n\t\t\t0x542788,\r\n\t\t\t0x2d004b,\r\n\t\t],\r\n\t\tSet2: [0x66c2a5, 0xfc8d62, 0x8da0cb, 0xe78ac3, 0xa6d854, 0xffd92f, 0xe5c494, 0xb3b3b3],\r\n\t\tAccent: [0x7fc97f, 0xbeaed4, 0xfdc086, 0xffff99, 0x386cb0, 0xf0027f, 0xbf5b17, 0x666666],\r\n\t\tSet1: [0xe41a1c, 0x377eb8, 0x4daf4a, 0x984ea3, 0xff7f00, 0xffff33, 0xa65628, 0xf781bf, 0x999999],\r\n\t\tSet3: [\r\n\t\t\t0x8dd3c7,\r\n\t\t\t0xffffb3,\r\n\t\t\t0xbebada,\r\n\t\t\t0xfb8072,\r\n\t\t\t0x80b1d3,\r\n\t\t\t0xfdb462,\r\n\t\t\t0xb3de69,\r\n\t\t\t0xfccde5,\r\n\t\t\t0xd9d9d9,\r\n\t\t\t0xbc80bd,\r\n\t\t\t0xccebc5,\r\n\t\t\t0xffed6f,\r\n\t\t],\r\n\t\tDark2: [0x1b9e77, 0xd95f02, 0x7570b3, 0xe7298a, 0x66a61e, 0xe6ab02, 0xa6761d, 0x666666],\r\n\t\tPaired: [\r\n\t\t\t0xa6cee3,\r\n\t\t\t0x1f78b4,\r\n\t\t\t0xb2df8a,\r\n\t\t\t0x33a02c,\r\n\t\t\t0xfb9a99,\r\n\t\t\t0xe31a1c,\r\n\t\t\t0xfdbf6f,\r\n\t\t\t0xff7f00,\r\n\t\t\t0xcab2d6,\r\n\t\t\t0x6a3d9a,\r\n\t\t\t0xffff99,\r\n\t\t\t0xb15928,\r\n\t\t],\r\n\t\tPastel2: [0xb3e2cd, 0xfdcdac, 0xcbd5e8, 0xf4cae4, 0xe6f5c9, 0xfff2ae, 0xf1e2cc, 0xcccccc],\r\n\t\tPastel1: [0xfbb4ae, 0xb3cde3, 0xccebc5, 0xdecbe4, 0xfed9a6, 0xffffcc, 0xe5d8bd, 0xfddaec, 0xf2f2f2],\r\n\t}\r\n\r\n\t/**\r\n\t * X11 color names\r\n\t * http://www.w3.org/TR/css3-color/#svg-color\r\n\t *\r\n\t * @example Object.keys(chroma.w3cx11).slice(0, 4)\r\n\t */\r\n\texport const w3cx11 = {\r\n\t\taliceblue: 0xf0f8ff,\r\n\t\tantiquewhite: 0xfaebd7,\r\n\t\taqua: 0x00ffff,\r\n\t\taquamarine: 0x7fffd4,\r\n\t\tazure: 0xf0ffff,\r\n\t\tbeige: 0xf5f5dc,\r\n\t\tbisque: 0xffe4c4,\r\n\t\tblack: 0x000000,\r\n\t\tblanchedalmond: 0xffebcd,\r\n\t\tblue: 0x0000ff,\r\n\t\tblueviolet: 0x8a2be2,\r\n\t\tbrown: 0xa52a2a,\r\n\t\tburlywood: 0xdeb887,\r\n\t\tcadetblue: 0x5f9ea0,\r\n\t\tchartreuse: 0x7fff00,\r\n\t\tchocolate: 0xd2691e,\r\n\t\tcoral: 0xff7f50,\r\n\t\tcornflower: 0x6495ed,\r\n\t\tcornflowerblue: 0x6495ed,\r\n\t\tcornsilk: 0xfff8dc,\r\n\t\tcrimson: 0xdc143c,\r\n\t\tcyan: 0x00ffff,\r\n\t\tdarkblue: 0x00008b,\r\n\t\tdarkcyan: 0x008b8b,\r\n\t\tdarkgoldenrod: 0xb8860b,\r\n\t\tdarkgray: 0xa9a9a9,\r\n\t\tdarkgreen: 0x006400,\r\n\t\tdarkgrey: 0xa9a9a9,\r\n\t\tdarkkhaki: 0xbdb76b,\r\n\t\tdarkmagenta: 0x8b008b,\r\n\t\tdarkolivegreen: 0x556b2f,\r\n\t\tdarkorange: 0xff8c00,\r\n\t\tdarkorchid: 0x9932cc,\r\n\t\tdarkred: 0x8b0000,\r\n\t\tdarksalmon: 0xe9967a,\r\n\t\tdarkseagreen: 0x8fbc8f,\r\n\t\tdarkslateblue: 0x483d8b,\r\n\t\tdarkslategray: 0x2f4f4f,\r\n\t\tdarkslategrey: 0x2f4f4f,\r\n\t\tdarkturquoise: 0x00ced1,\r\n\t\tdarkviolet: 0x9400d3,\r\n\t\tdeeppink: 0xff1493,\r\n\t\tdeepskyblue: 0x00bfff,\r\n\t\tdimgray: 0x696969,\r\n\t\tdimgrey: 0x696969,\r\n\t\tdodgerblue: 0x1e90ff,\r\n\t\tfirebrick: 0xb22222,\r\n\t\tfloralwhite: 0xfffaf0,\r\n\t\tforestgreen: 0x228b22,\r\n\t\tfuchsia: 0xff00ff,\r\n\t\tgainsboro: 0xdcdcdc,\r\n\t\tghostwhite: 0xf8f8ff,\r\n\t\tgold: 0xffd700,\r\n\t\tgoldenrod: 0xdaa520,\r\n\t\tgray: 0x808080,\r\n\t\tgreen: 0x008000,\r\n\t\tgreenyellow: 0xadff2f,\r\n\t\tgrey: 0x808080,\r\n\t\thoneydew: 0xf0fff0,\r\n\t\thotpink: 0xff69b4,\r\n\t\tindianred: 0xcd5c5c,\r\n\t\tindigo: 0x4b0082,\r\n\t\tivory: 0xfffff0,\r\n\t\tkhaki: 0xf0e68c,\r\n\t\tlaserlemon: 0xffff54,\r\n\t\tlavender: 0xe6e6fa,\r\n\t\tlavenderblush: 0xfff0f5,\r\n\t\tlawngreen: 0x7cfc00,\r\n\t\tlemonchiffon: 0xfffacd,\r\n\t\tlightblue: 0xadd8e6,\r\n\t\tlightcoral: 0xf08080,\r\n\t\tlightcyan: 0xe0ffff,\r\n\t\tlightgoldenrod: 0xfafad2,\r\n\t\tlightgoldenrodyellow: 0xfafad2,\r\n\t\tlightgray: 0xd3d3d3,\r\n\t\tlightgreen: 0x90ee90,\r\n\t\tlightgrey: 0xd3d3d3,\r\n\t\tlightpink: 0xffb6c1,\r\n\t\tlightsalmon: 0xffa07a,\r\n\t\tlightseagreen: 0x20b2aa,\r\n\t\tlightskyblue: 0x87cefa,\r\n\t\tlightslategray: 0x778899,\r\n\t\tlightslategrey: 0x778899,\r\n\t\tlightsteelblue: 0xb0c4de,\r\n\t\tlightyellow: 0xffffe0,\r\n\t\tlime: 0x00ff00,\r\n\t\tlimegreen: 0x32cd32,\r\n\t\tlinen: 0xfaf0e6,\r\n\t\tmagenta: 0xff00ff,\r\n\t\tmaroon: 0x800000,\r\n\t\tmaroon2: 0x7f0000,\r\n\t\tmaroon3: 0xb03060,\r\n\t\tmediumaquamarine: 0x66cdaa,\r\n\t\tmediumblue: 0x0000cd,\r\n\t\tmediumorchid: 0xba55d3,\r\n\t\tmediumpurple: 0x9370db,\r\n\t\tmediumseagreen: 0x3cb371,\r\n\t\tmediumslateblue: 0x7b68ee,\r\n\t\tmediumspringgreen: 0x00fa9a,\r\n\t\tmediumturquoise: 0x48d1cc,\r\n\t\tmediumvioletred: 0xc71585,\r\n\t\tmidnightblue: 0x191970,\r\n\t\tmintcream: 0xf5fffa,\r\n\t\tmistyrose: 0xffe4e1,\r\n\t\tmoccasin: 0xffe4b5,\r\n\t\tnavajowhite: 0xffdead,\r\n\t\tnavy: 0x000080,\r\n\t\toldlace: 0xfdf5e6,\r\n\t\tolive: 0x808000,\r\n\t\tolivedrab: 0x6b8e23,\r\n\t\torange: 0xffa500,\r\n\t\torangered: 0xff4500,\r\n\t\torchid: 0xda70d6,\r\n\t\tpalegoldenrod: 0xeee8aa,\r\n\t\tpalegreen: 0x98fb98,\r\n\t\tpaleturquoise: 0xafeeee,\r\n\t\tpalevioletred: 0xdb7093,\r\n\t\tpapayawhip: 0xffefd5,\r\n\t\tpeachpuff: 0xffdab9,\r\n\t\tperu: 0xcd853f,\r\n\t\tpink: 0xffc0cb,\r\n\t\tplum: 0xdda0dd,\r\n\t\tpowderblue: 0xb0e0e6,\r\n\t\tpurple: 0x800080,\r\n\t\tpurple2: 0x7f007f,\r\n\t\tpurple3: 0xa020f0,\r\n\t\trebeccapurple: 0x663399,\r\n\t\tred: 0xff0000,\r\n\t\trosybrown: 0xbc8f8f,\r\n\t\troyalblue: 0x4169e1,\r\n\t\tsaddlebrown: 0x8b4513,\r\n\t\tsalmon: 0xfa8072,\r\n\t\tsandybrown: 0xf4a460,\r\n\t\tseagreen: 0x2e8b57,\r\n\t\tseashell: 0xfff5ee,\r\n\t\tsienna: 0xa0522d,\r\n\t\tsilver: 0xc0c0c0,\r\n\t\tskyblue: 0x87ceeb,\r\n\t\tslateblue: 0x6a5acd,\r\n\t\tslategray: 0x708090,\r\n\t\tslategrey: 0x708090,\r\n\t\tsnow: 0xfffafa,\r\n\t\tspringgreen: 0x00ff7f,\r\n\t\tsteelblue: 0x4682b4,\r\n\t\ttan: 0xd2b48c,\r\n\t\tteal: 0x008080,\r\n\t\tthistle: 0xd8bfd8,\r\n\t\ttomato: 0xff6347,\r\n\t\tturquoise: 0x40e0d0,\r\n\t\tviolet: 0xee82ee,\r\n\t\twheat: 0xf5deb3,\r\n\t\twhite: 0xffffff,\r\n\t\twhitesmoke: 0xf5f5f5,\r\n\t\tyellow: 0xffff00,\r\n\t\tyellowgreen: 0x9acd32,\r\n\t}\r\n\r\n\t/**\r\n\t * Return a new [[CubeHelix]].\r\n\t *\r\n\t * @example chroma.cubehelix() // use the default helix\r\n\t * @example chroma.cubehelix().start(200).rotations(-0.5).gamma(0.8).lightness([0.3, 0.8])\r\n\t */\r\n\texport function cubehelix(\r\n\t\tstart = 300,\r\n\t\trotations = -1.5,\r\n\t\thue: number | [number, number] = 1,\r\n\t\tgamma = 1,\r\n\t\tlightness: number | [number, number] = [0, 1],\r\n\t) {\r\n\t\tconst f: CubeHelix = (t => f.at(t)) as CubeHelix\r\n\t\t;(Object.getOwnPropertyNames(CubeHelix.prototype) as (keyof typeof CubeHelix)[]).forEach(\r\n\t\t\tkey => (f[key] = CubeHelix.prototype[key]),\r\n\t\t)\r\n\t\tf.start(start)\r\n\t\tf.rotations(rotations)\r\n\t\tf.hue(hue)\r\n\t\tf.gamma(gamma)\r\n\t\tf.lightness(lightness)\r\n\t\treturn f\r\n\t}\r\n\r\n\t/**\r\n\t * [Dave Green's cubehelix color scheme](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/)!\r\n\t *\r\n\t * A CubeHelix is a function defined on [0, 1] which returns colors.\r\n\t */\r\n\texport interface CubeHelix {\r\n\t\t(f: number): Color\r\n\t}\r\n\texport class CubeHelix {\r\n\t\tprivate _start!: number\r\n\t\tprivate _rotations!: number\r\n\t\tprivate _gamma!: number\r\n\t\tprivate _hue!: [number, number]\r\n\t\tprivate _lightness!: [number, number]\r\n\t\tpublic start(s: number) {\r\n\t\t\tif (undefined === s) {\r\n\t\t\t\treturn this._start\r\n\t\t\t}\r\n\t\t\tthis._start = s\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tpublic rotations(r: number) {\r\n\t\t\tif (undefined === r) {\r\n\t\t\t\treturn this._rotations\r\n\t\t\t}\r\n\t\t\tthis._rotations = r\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tpublic gamma(g: number) {\r\n\t\t\tif (undefined === g) {\r\n\t\t\t\treturn this._gamma\r\n\t\t\t}\r\n\t\t\tthis._gamma = g\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tpublic hue(h: number | [number, number]) {\r\n\t\t\tif (undefined === h) {\r\n\t\t\t\treturn this._hue\r\n\t\t\t}\r\n\t\t\tthis._hue = Array.isArray(h) ? h : [h, h]\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tpublic lightness(h: number | [number, number]) {\r\n\t\t\tif (undefined === h) {\r\n\t\t\t\treturn this._lightness\r\n\t\t\t}\r\n\t\t\tthis._lightness = Array.isArray(h) ? h : [h, h]\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Convert to a [[Scale]].\r\n\t\t *\r\n\t\t * @example chroma.cubehelix().scale().correctLightness().domain(2, 22)\r\n\t\t */\r\n\t\tpublic scale() {\r\n\t\t\treturn scale(this)\r\n\t\t}\r\n\r\n\t\tpublic at(fract: number) {\r\n\t\t\tconst a = TWOPI * ((this._start + 120) / 360 + this._rotations * fract)\r\n\t\t\tconst l = lerp(this._lightness[0], this._lightness[1], fract) ** this._gamma\r\n\t\t\tconst h = lerp(this._hue[0], this._hue[1], fract)\r\n\t\t\tconst amp = (h * l * (1 - l)) / 2\r\n\t\t\tconst cos_a = cos(a)\r\n\t\t\tconst sin_a = sin(a)\r\n\t\t\tconst r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a)\r\n\t\t\tconst g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a)\r\n\t\t\tconst b = l + amp * (+1.97294 * cos_a)\r\n\t\t\treturn rgb([r * 255, g * 255, b * 255, 1])\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new random [Color] from a random point in the RGB color space.\r\n\t * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\r\n\t *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\r\n\t */\r\n\texport function random(randomSource = Math.random) {\r\n\t\treturn num((randomSource() * 0x1_00_00_00) | 0)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a valid RGB color (`.clipped() == false`) from a random point in the CIELAB color space. This results in\r\n\t * more colors in the RGB color space where humans can perceive more differences.\r\n\t * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\r\n\t *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\r\n\t * @example chroma.random((() => { let i = 0; return () => (i = (i *Math.SQRT2) % 1); })())\r\n\t */\r\n\t// export function randomLab(randomSource = Math.random) {\r\n\t// \tconst labAMin = -87,\r\n\t// \t\tlabAMax = 99,\r\n\t// \t\tlabBMin = -108,\r\n\t// \t\tlabBMax = 95\r\n\t// \tlet maxIterations = 100\r\n\t// \twhile (maxIterations--) {\r\n\t// \t\tconst u = randomSource(),\r\n\t// \t\t\tv = randomSource(),\r\n\t// \t\t\tw = randomSource()\r\n\t// \t\t// The following matrix multiplication transform the random point (u v w) in the unit cube into the\r\n\t// \t\t// oriented bounding box (OBB) of the projection of the RGB space into the LAB space. This is necessary to\r\n\t// \t\t// avoid a huge number of misses.\r\n\t// \t\tconst color = chroma.lab(\r\n\t// \t\t\tu * -53.903 + v * -88.755 + w * 71.7 + 99.707,\r\n\t// \t\t\tu * -82.784 + v * 187.036 + w * -2.422 + -28.17,\r\n\t// \t\t\tu * -75.813 + v * -141.406 + w * -48.261 + 152.469,\r\n\t// \t\t)\r\n\t// \t\tconsole.log(color.lab())\r\n\t// \t\tconsole.log(color.rgba(false, false))\r\n\t// \t\tif (!color.clipped()) return color\r\n\t// \t}\r\n\t// \tthrow new Error(\"Could find a random color in 100 iterations\")\r\n\t// }\r\n\r\n\t/**\r\n\t * Mixes two colors. The mix ratio is a value between 0 and 1.\r\n\t * The color mixing produces different results based the color space used for interpolation.\r\n\t *\r\n\t * @param col2\r\n\t * @param f\r\n\t * @param m\r\n\t * @example chroma.mix('red', 'blue')\r\n\t * @example chroma.mix('red', 'blue', 0.25)\r\n\t * @example chroma.mix('red', 'blue', 0.75)\r\n\t *\r\n\t * @example chroma.mix('red', 'blue', 0.5, 'rgb')\r\n\t * @example chroma.mix('red', 'blue', 0.5, 'hsl')\r\n\t * @example chroma.mix('red', 'blue', 0.5, 'lab')\r\n\t * @example chroma.mix('red', 'blue', 0.5, 'lch')\r\n\t * @example chroma.mix('red', 'blue', 0.5, 'lrgb')\r\n\t */\r\n\texport function mix(col1: Chromable, col2: Chromable, f = 0.5, m: InterpolationMode = \"rgb\") {\r\n\t\tconst c1 = chroma(col1)\r\n\t\tconst c2 = chroma(col2)\r\n\t\tconst res = interpolators[m] && ((interpolators as any)[m](c1, c2, f, m) as Color)\r\n\t\tif (!res) {\r\n\t\t\tthrow new Error(\"color mode \" + m + \" is not supported\")\r\n\t\t}\r\n\t\treturn res.alpha(lerp(c1.alpha(), c2.alpha(), f))\r\n\t}\r\n\r\n\t/**\r\n\t * Parse a CSS color. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color) for all the possible\r\n\t * variants.\r\n\t *\r\n\t * @example chroma.css('hsl(2rad 90% 50% / 0.9)')\r\n\t * @example chroma.css('laserlemon')\r\n\t */\r\n\texport function css(cssString: string) {\r\n\t\tconst [r, g, b, a] = css2rgb(cssString)\r\n\t\treturn new Color(r, g, b, a)\r\n\t}\r\n\r\n\t/**\r\n\t * @example chroma.cmyk(0.2, 0.8, 0, 0)\r\n\t * @example chroma(0.2, 0.8, 0, 0, 'cmyk')\r\n\t */\r\n\texport function cmyk(cmyk: CMYK): Color\r\n\texport function cmyk(cyan1: number, magenta1: number, yellow1: number, key1: number): Color\r\n\texport function cmyk(...args: any[]) {\r\n\t\treturn guess(args, \"cmyk\")\r\n\t}\r\n\r\n\t/**\r\n\t * @example chroma.gl(1, 1, 0, 1)\r\n\t */\r\n\texport function gl(gl: RGBA | RGB): Color\r\n\t/**\r\n\t * @example chroma.gl([1, 0, 1, 0.5])\r\n\t */\r\n\texport function gl(red1: number, green1: number, blue1: number, alpha1: number): Color\r\n\texport function gl(...args: any[]) {\r\n\t\treturn guess(args, \"gl\")\r\n\t}\r\n\r\n\texport function hcg(hcg: HCG): Color\r\n\t/**\r\n\t * @param alpha1 default=1\r\n\t */\r\n\texport function hcg(h: number, c: number, g: number, alpha1?: number): Color\r\n\texport function hcg(...args: any[]) {\r\n\t\treturn guess(args, \"hcg\")\r\n\t}\r\n\r\n\texport function lch(lch: LCH): Color\r\n\t/**\r\n\t * @param alpha1 default=1\r\n\t */\r\n\texport function lch(h: number, c: number, l: number, alpha1?: number): Color\r\n\texport function lch(...args: any[]) {\r\n\t\treturn guess(args, \"lch\")\r\n\t}\r\n\r\n\texport function hsi(hsi: HSI): Color\r\n\t/**\r\n\t * @param alpha1 default=1\r\n\t */\r\n\texport function hsi(h: number, s: number, i: number, alpha1?: number): Color\r\n\texport function hsi(...args: any[]) {\r\n\t\treturn guess(args, \"hsi\")\r\n\t}\r\n\r\n\texport function hsl(hsl: HSL): Color\r\n\t/**\r\n\t * @param alpha1 default=1\r\n\t * @example chroma.hsl(30, 1, 0.5)\r\n\t * @example chroma.hsl(30, 0.6, 0.5)\r\n\t */\r\n\texport function hsl(hueDegrees: number, saturation1: number, lightness1: number, alpha1?: number): Color\r\n\texport function hsl(...args: any[]) {\r\n\t\treturn guess(args, \"hsl\")\r\n\t}\r\n\r\n\texport function hsv(hsv: LAB): Color\r\n\texport function hsv(h: number, s: number, v: number): Color\r\n\texport function hsv(...args: any[]) {\r\n\t\treturn guess(args, \"hsv\")\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param temperature\r\n\t * @example chroma.kelvin(2000) // candle light\r\n\t * @example chroma.kelvin(3500) // sunset\r\n\t * @example chroma.kelvin(6500) // daylight\r\n\t * @example x0_1 => chroma.kelvin(x0_1 * 30000) // effective range: [0; 30000]\r\n\t */\r\n\texport function kelvin(temperature: number) {\r\n\t\tconst [r, g, b] = kelvin2rgb(temperature)\r\n\t\treturn new Color(r, g, b)\r\n\t}\r\n\r\n\texport function lab(lab: LAB): Color\r\n\t/**\r\n\t * @param alpha1 default=1\r\n\t */\r\n\texport function lab(lightness1: number, a1: number, b: number, alpha1?: number): Color\r\n\texport function lab(...args: any[]) {\r\n\t\treturn guess(args, \"lab\")\r\n\t}\r\n\r\n\t/**\r\n\t * @example chroma.num(0x663399) // rebeccapurple\r\n\t */\r\n\texport function num(num: number) {\r\n\t\tconst [r, g, b] = num2rgb(num)\r\n\t\treturn new Color(r, g, b)\r\n\t}\r\n\r\n\texport function rgb(rgb: RGBA | RGB): Color\r\n\t/**\r\n\t * @param alpha1 default=1\r\n\t * @example chroma.rgb(0, 100, 200)\r\n\t */\r\n\texport function rgb(red255: number, green255: number, blue255: number, alpha1?: number): Color\r\n\texport function rgb(...args: any[]) {\r\n\t\treturn guess(args, \"rgb\")\r\n\t}\r\n\r\n\texport function xyz(xyz: XYZ): Color\r\n\t/** @param alpha1 default=1 */\r\n\texport function xyz(x1: number, y1: number, z1: number, alpha1?: number): Color\r\n\texport function xyz(...args: any[]) {\r\n\t\treturn guess(args, \"xyz\")\r\n\t}\r\n\r\n\t/**\r\n\t * Similar to chroma.mix, but accepts more than two colors.\r\n\t *\r\n\t * @example colors = ['#ddd', 'yellow', 'red', 'teal']\r\n\t * @example chroma.average(colors) // default = 'rgb'\r\n\t * @example chroma.average(colors, 'lab')\r\n\t * @example chroma.average(colors, 'lch')\r\n\t * @example chroma.average(colors, 'lrgb')\r\n\t * @example chroma.average(['red', 'rgba(0,0,0,0.5)']).css()\r\n\t */\r\n\texport function average(chromables: Chromable[], mode: InterpolationMode = \"rgb\") {\r\n\t\tconst colors = chromables.map(c => chroma(c))\r\n\t\tif (mode == \"lrgb\") {\r\n\t\t\treturn _average_lrgb(colors)\r\n\t\t}\r\n\t\tif (mode == \"num\") {\r\n\t\t\tlet numSum = 0,\r\n\t\t\t\talphaSum = 0\r\n\t\t\tfor (const col of colors) {\r\n\t\t\t\tnumSum += col.num()\r\n\t\t\t\talphaSum += col.alpha()\r\n\t\t\t}\r\n\t\t\treturn num(numSum / colors.length).alpha(alphaSum / colors.length)\r\n\t\t}\r\n\t\tconst xyz = [0, 0, 0]\r\n\t\tlet dx = 0\r\n\t\tlet dy = 0\r\n\t\tlet alphaSum = 0\r\n\t\tfor (const c of colors) {\r\n\t\t\tconst xyz2 = c[mode]()\r\n\t\t\talphaSum += c.alpha()\r\n\t\t\tfor (let i = 0; i < xyz.length; i++) {\r\n\t\t\t\tif (mode.charAt(i) == \"h\") {\r\n\t\t\t\t\tconst A = (xyz2[i] / 180) * PI\r\n\t\t\t\t\tdx += cos(A)\r\n\t\t\t\t\tdy += sin(A)\r\n\t\t\t\t} else {\r\n\t\t\t\t\txyz[i] += xyz2[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < xyz.length; i++) {\r\n\t\t\tif (mode.charAt(i) == \"h\") {\r\n\t\t\t\tconst A = atan2(dy / colors.length, dx / colors.length) * RAD2DEG\r\n\t\t\t\txyz[i] = (A + 360) % 360\r\n\t\t\t} else {\r\n\t\t\t\txyz[i] = xyz[i] / colors.length\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn guess(xyz, mode).alpha(alphaSum / colors.length)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param chromables\r\n\t * @example chroma.scale('black', 'red', 'gold') // linear interpolation\r\n\t * @example chroma.bezier('black', 'red', 'gold') // bezier interpolation\r\n\t */\r\n\texport function bezier(chromables: Chromable[]): { (t: number): Color; scale(): Scale }\r\n\texport function bezier(...chromables: Chromable[]): { (t: number): Color; scale(): Scale }\r\n\texport function bezier(...args: any[]) {\r\n\t\tconst chromables: Chromable[] = Array.isArray(args[0]) ? args[0] : args\r\n\t\tconst f = _bezier(chromables) as { (t: number): Color; scale(): Scale }\r\n\t\tf.scale = CubeHelix.prototype.scale\r\n\t\treturn f\r\n\t}\r\n\r\n\t/**\r\n\t * Blends two colors using RGB channel-wise blend functions.\r\n\t * @param bottom\r\n\t * @param top\r\n\t * @param mode\r\n\t * @example chroma.blend('4CBBFC', 'EEEE22', 'multiply')\r\n\t * @example chroma.blend('4CBBFC', 'EEEE22', 'darken')\r\n\t * @example chroma.blend('4CBBFC', 'EEEE22', 'lighten')\r\n\t */\r\n\texport function blend(bottom: Chromable, top: Chromable, mode: BlendMode) {\r\n\t\tif (!blend_fs[mode]) {\r\n\t\t\tthrow new Error(\"unknown blend mode \" + mode)\r\n\t\t}\r\n\t\treturn blend_fs[mode](bottom, top)\r\n\t}\r\n\texport type BlendMode = keyof typeof blend_fs\r\n\tnamespace blend_fs {\r\n\t\texport const normal = blend_f(each((a, _) => a))\r\n\t\texport const multiply = blend_f(each((a, b) => (a * b) / 255))\r\n\t\texport const screen = blend_f(each(_screen))\r\n\t\texport const overlay = blend_f(each(_overlay))\r\n\t\texport const darken = blend_f(each(min))\r\n\t\texport const lighten = blend_f(each(max))\r\n\t\texport const dodge = blend_f(each(_dodge))\r\n\t\texport const burn = blend_f(each(_burn))\r\n\t}\r\n\r\n\t/**\r\n\t * @param colors\r\n\t * @example scale = chroma.scale(['yellow', '008ae5'])\r\n\t * @example scale(0.25)\r\n\t * @example scale(0.5)\r\n\t * @example scale(0.75)\r\n\t * @example chroma.scale('Viridis')\r\n\t */\r\n\texport function scale(colors: Chromable[] | keyof typeof brewer | ((f: number) => Color)): Scale\r\n\texport function scale(...colors: Chromable[]): Scale\r\n\texport function scale(...args: any[]) {\r\n\t\tconst f: Scale = (t => (f as any)._at(t)) as Scale\r\n\t\t;(Object.getOwnPropertyNames(Scale.prototype) as (keyof typeof Scale)[]).forEach(\r\n\t\t\tkey => (f[key] = Scale.prototype[key]),\r\n\t\t)\r\n\t\tif (Array.isArray(args[0])) args = args[0]\r\n\t\tif (args.length == 1 && \"string\" == typeof args[0]) args = brewer[args[0] as keyof typeof brewer]\r\n\t\t;(f as any)._init(\"function\" == typeof args[0] ? args[0] : args.map(a => chroma(a)))\r\n\t\t//f.setColors(args.length > 1 ? args : args[0])\r\n\t\treturn f\r\n\t}\r\n\texport interface Scale<T = Color> {\r\n\t\t/**\r\n\t\t * A color scale, created with chroma.scale, is a function that maps numeric values to a color palette.\r\n\t\t * @example chroma.scale('Purples')\r\n\t\t * @example chroma.scale('Purples')(0.4)\r\n\t\t */\r\n\t\t(val: number): T\r\n\t}\r\n\texport class Scale<T = Color> {\r\n\t\tprivate _colors!: Color[] | ((t: number) => Color)\r\n\t\tprivate _classes!: number[] | undefined\r\n\t\t/**\r\n\t\t * Color cache. undefined if the cache should not be used.\r\n\t\t */\r\n\t\tprivate _cache!: Map<number, Color> | undefined\r\n\t\tprivate _correctLightness!: boolean\r\n\t\tprivate _gamma!: number\r\n\t\tprivate _mode!: InterpolationMode\r\n\t\tprivate _out!: ColorFormat | undefined\r\n\t\tprivate _min!: number\r\n\t\tprivate _max!: number\r\n\t\tprivate _paddingLeft!: number\r\n\t\tprivate _paddingRight!: number\r\n\t\t// positions of the colors on the interval [0, 1]. guaranteed to have the same length as _colors\r\n\t\t// undefined when _colors is a function\r\n\t\tprivate _pos: number[] | undefined\r\n\r\n\t\t/**\r\n\t\t * Get the current scale classes.\r\n\t\t */\r\n\t\tpublic classes(): number[]\r\n\t\t/**\r\n\t\t * Make the scale return a number of distint color instead of a continuous gradient.\r\n\t\t * If you pass a number the scale will broken into equi-distant classes:\r\n\t\t *\r\n\t\t * @example chroma.scale('OrRd') // continous\r\n\t\t * @example chroma.scale('OrRd').classes(5) // equidistant classes\r\n\t\t * @example chroma.scale('OrRd').classes(8)\r\n\t\t *\r\n\t\t * @example chroma.scale('OrRd').classes([0, 6, 11, 17, 20]) // also sets domain\r\n\t\t */\r\n\t\tpublic classes(classes: number | number[]): this\r\n\t\tpublic classes(classes?: number | number[]) {\r\n\t\t\tif (undefined === classes) {\r\n\t\t\t\treturn this._classes\r\n\t\t\t}\r\n\t\t\tif (Array.isArray(classes)) {\r\n\t\t\t\tthis._classes = classes\r\n\t\t\t\tthis.domain(classes[0], classes[classes.length - 1])\r\n\t\t\t} else {\r\n\t\t\t\tif (classes % 1 != 0 || classes < 1) throw new Error(\"invalid classes param\")\r\n\t\t\t\t// const d = analyze(this.domain())\r\n\t\t\t\tthis._classes = limits(this.domain(), \"e\", classes)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get the domain.\r\n\t\t * @return If _colors is a function, [this._min, this._max]. If _colors is an array of colors, an array with the\r\n\t\t * same length as the number of colors.\r\n\t\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 20).domain() // == [0, 10, 20]\r\n\t\t */\r\n\t\tpublic domain(): number[]\r\n\t\t/**\r\n\t\t * Set the domain interval on which the scale is defined. Colors are distributed equidistantly along the\r\n\t\t * interval.\r\n\t\t * @param start\r\n\t\t * @param end\r\n\t\t * @return `this`\r\n\t\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 100)(50) // == white\r\n\t\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 0.25, 1).domain(0, 100).domain() // == [0, 25, 100]\r\n\t\t */\r\n\t\tpublic domain(start: number, end: number): this\r\n\t\t/**\r\n\t\t * Set the domain interval and the individual positions of the colors. The number of passed values must match\r\n\t\t * the number of colors which define the scale. Not valid if the scale is defined by a function.\r\n\t\t * @param domain The positions of all scale colors. Values must be in ascending order and should not have\r\n\t\t * duplicates.\r\n\t\t * @return `this`\r\n\t\t * @example scale = chroma.scale(\"red\", \"white\", \"blue\").domain(0, 25, 100)\r\n\t\t * @example scale(25) // == white\r\n\t\t * @example scale(100) // == blue\r\n\t\t * @example scale(50) // == #aaaaff\r\n\t\t */\r\n\t\tpublic domain(...domain: number[]): this\r\n\t\tpublic domain(...domain: number[]): number[] | this {\r\n\t\t\tif (undefined === domain[0]) {\r\n\t\t\t\treturn \"function\" !== typeof this._colors\r\n\t\t\t\t\t? this._pos!.map(p => lerp(this._min, this._max, p))\r\n\t\t\t\t\t: [this._min, this._max]\r\n\t\t\t}\r\n\t\t\tthis._min = domain[0]\r\n\t\t\tthis._max = domain[domain.length - 1]\r\n\t\t\tif (2 == domain.length) {\r\n\t\t\t\tif (\"function\" !== typeof this._colors) {\r\n\t\t\t\t\t// equidistant positions\r\n\t\t\t\t\tthis._pos = this._colors.map((_, c) => c / (this._colors.length - 1))\r\n\t\t\t\t}\r\n\t\t\t} else if (\"function\" !== typeof this._colors && domain.length == this._colors.length) {\r\n\t\t\t\tthis._pos = domain.map(d => lerpInv(this._min, this._max, d))\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"invalid domain \" + domain)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get the interpolation mode used when calculating colors.\r\n\t\t */\r\n\t\tpublic mode(): InterpolationMode\r\n\t\t/**\r\n\t\t * Set the interpolation mode used when calculating colors. The defaut mode is \"rgb\".\r\n\t\t * See also {@link chroma#mix}\r\n\t\t * @param mode the mode to set.\r\n\t\t * @return `this`\r\n\t\t * @example chroma.scale(\"red\", \"green\").mode(\"lab\")\r\n\t\t * @example chroma.scale(\"red\", \"green\").mode(\"lrgb\")\r\n\t\t */\r\n\t\tpublic mode(mode: InterpolationMode): this\r\n\t\tpublic mode(mode?: InterpolationMode) {\r\n\t\t\tif (undefined === mode) {\r\n\t\t\t\treturn this._mode\r\n\t\t\t}\r\n\t\t\tthis._mode = mode\r\n\t\t\tthis._resetCache()\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Set the output format return by `this(x)` and `this.colors(n)`.\r\n\t\t * @param _o The color format to use. Pass `undefined` to return [Color] objects.\r\n\t\t * @return `this`\r\n\t\t * @example chroma.scale(\"red\", \"white\").out(\"hex\")(0) // == \"#ff0000\"\r\n\t\t * @example chroma.scale(\"red\", \"white\").out(\"num\").colors(2) // == [0xff0000, 0xffffff]\r\n\t\t */\r\n\t\tpublic out<M extends keyof ColorModes>(_o: M): Scale<M extends undefined ? Color : (ColorModes[M])> {\r\n\t\t\tthis._out = _o\r\n\t\t\treturn this as any\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * This makes sure the lightness range is spread evenly across a color scale. Especially useful when working\r\n\t\t * with [multi-hue color scales](https://www.vis4.net/blog/2013/09/mastering-multi-hued-color-scales/), where\r\n\t\t * simple gamma correction can't help you very much.\r\n\t\t *\r\n\t\t * @example chroma.scale('black','red','yellow','white')\r\n\t\t * @example chroma.scale('black','red','yellow','white').correctLightness()\r\n\t\t */\r\n\t\tpublic correctLightness(enableCorrectLightness = true) {\r\n\t\t\tif (this._correctLightness != enableCorrectLightness) {\r\n\t\t\t\tthis._resetCache()\r\n\t\t\t\tconst colors = this._colors\r\n\t\t\t\tif (enableCorrectLightness && \"function\" !== typeof colors) {\r\n\t\t\t\t\t// make sure that the colors have ascending or descending lightnesses\r\n\t\t\t\t\tlet sign = 0\r\n\t\t\t\t\tfor (let i = 1; i < colors.length; i++) {\r\n\t\t\t\t\t\tconst sign2 = colors[i].lab()[0] - colors[i - 1].lab()[0]\r\n\t\t\t\t\t\tif (0 == sign) {\r\n\t\t\t\t\t\t\tsign = sign2\r\n\t\t\t\t\t\t} else if (sign * sign2 < 0) {\r\n\t\t\t\t\t\t\tthrow new Error(\"scale color lightnesses must be monotonic\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._correctLightness = enableCorrectLightness\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get the padding.\r\n\t\t * @returns [paddingLeft, paddingRight]\r\n\t\t */\r\n\t\tpublic padding(): [number, number]\r\n\t\t/**\r\n\t\t * Set the padding. Positive values will \"cut off\" the ends of gradient, while negative values will add a\r\n\t\t * section of constant color at the ends.\r\n\t\t * @example chroma.scale(\"red\", \"white\").padding(0.2)\r\n\t\t * @example chroma.scale(\"red\", \"white\").padding(0.1)(0) // == chroma('#ff1a1a'), instead of red\r\n\t\t * @example chroma.scale(\"red\", \"white\").padding(-0.1)(0) // == chroma('red')\r\n\t\t * @param paddingLeft padding on left side.(lower-valued end of the interval).\r\n\t\t * @param paddingRight padding on right (higher-valued end of the interval).\r\n\t\t * default=paddingLeft\r\n\t\t */\r\n\t\tpublic padding(paddingLeft: number, paddingRight?: number): this\r\n\t\tpublic padding(paddingLeft?: number, paddingRight: number | undefined = paddingLeft) {\r\n\t\t\tif (!paddingLeft) {\r\n\t\t\t\treturn [this._paddingLeft, this._paddingRight]\r\n\t\t\t}\r\n\t\t\tthis._paddingLeft = paddingLeft\r\n\t\t\tthis._paddingRight = paddingRight!\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get a number of equidistant colors.\r\n\t\t * @param numColors The number of colors to return.\r\n\t\t * @param format Output format. Defaults to `\"hex\"`. Pass `false` to get {@link Color} objects.\r\n\t\t * @returns If `numColors` is `undefined`, the colors which define this [Scale]. If `numColors` is 1,\r\n\t\t * `[this((min + max) / 2)]`. Otherwise, an array where the first element is `this(min)`, the last one is\r\n\t\t * `this(max)` and the rest are equidistant samples between min and max.\r\n\t\t * @example chroma.scale('OrRd').colors(5)\r\n\t\t * @example chroma.scale(['white', 'black']).colors(12)\r\n\t\t */\r\n\t\tpublic colors(numColors?: number, format: ColorFormat | false = \"hex\") {\r\n\t\t\tlet result: Color[]\r\n\t\t\tif (undefined === numColors) {\r\n\t\t\t\tresult = (this._colors as Color[]).slice()\r\n\t\t\t} else if (numColors == 1) {\r\n\t\t\t\tresult = [this._color((this._min + this._max) / 2)]\r\n\t\t\t} else if (numColors > 1) {\r\n\t\t\t\tresult = Array.from({ length: numColors }, (_, i) =>\r\n\t\t\t\t\tthis._color(lerp(this._min, this._max, i / (numColors - 1))),\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\t// returns all colors based on the defined classes\r\n\t\t\t\tlet samples\r\n\t\t\t\tif (this._classes && this._classes.length > 2) {\r\n\t\t\t\t\tsamples = Array.from(\r\n\t\t\t\t\t\t{ length: this._classes.length - 1 },\r\n\t\t\t\t\t\t(_, i) => (this._classes![i] + this._classes![i + 1]) * 0.5,\r\n\t\t\t\t\t)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsamples = this.domain() // TODO?!\r\n\t\t\t\t}\r\n\t\t\t\tresult = samples.map(s => this._color(s))\r\n\t\t\t}\r\n\r\n\t\t\treturn format ? result.map(c => c[format]()) : result\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get whether the cache is enabled. Defaults to true.\r\n\t\t */\r\n\t\tpublic cache(): boolean\r\n\t\t/**\r\n\t\t * Enable or disable the cache.\r\n\t\t * @param enableCache Whether the cache should be enabled.\r\n\t\t */\r\n\t\tpublic cache(enableCache: boolean): this\r\n\t\tpublic cache(enableCache?: boolean) {\r\n\t\t\tif (undefined === enableCache) {\r\n\t\t\t\treturn !!this._cache\r\n\t\t\t}\r\n\t\t\tthis._cache = enableCache ? this._cache || new Map() : undefined\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get the current gamma value. Defaults to 1.\r\n\t\t */\r\n\t\tpublic gamma(): number\r\n\t\t/**\r\n\t\t * Set the gamma value. Gamma-correction can be used to \"shift\" a scale's center more the the beginning (gamma <\r\n\t\t * 1) or end (gamma > 1), typically used to \"even\" the lightness gradient. Default is 1.\r\n\t\t * @example chroma.scale('YlGn').gamma(0.5)\r\n\t\t * @example chroma.scale('YlGn').gamma(1)\r\n\t\t * @example chroma.scale('YlGn').gamma(2)\r\n\t\t */\r\n\t\tpublic gamma(gamma: number): this\r\n\t\tpublic gamma(gamma?: number) {\r\n\t\t\tif (undefined === gamma) {\r\n\t\t\t\treturn this._gamma\r\n\t\t\t}\r\n\t\t\tthis._gamma = gamma\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\tprivate _at(t: number) {\r\n\t\t\tconst c = this._color(t)\r\n\t\t\treturn this._out ? c[this._out]() : c\r\n\t\t}\r\n\r\n\t\tprivate _init(colorsOrFunction: Color[] | ((t: number) => Color)) {\r\n\t\t\tthis._colors = colorsOrFunction\r\n\t\t\tif (\"function\" != typeof colorsOrFunction) {\r\n\t\t\t\tthis._pos = colorsOrFunction.map((_, i) => i / (colorsOrFunction.length - 1))\r\n\t\t\t}\r\n\t\t\tthis._mode = \"rgb\"\r\n\t\t\tthis.domain(0, 1)\r\n\t\t\tthis._paddingLeft = 0\r\n\t\t\tthis._paddingRight = 0\r\n\t\t\tthis._correctLightness = false\r\n\t\t\tthis._cache = new Map()\r\n\t\t\tthis._gamma = 1\r\n\t\t}\r\n\r\n\t\tprivate _getClass(value: number) {\r\n\t\t\treturn this._classes!.findIndex(cls => value <= cls) - 1\r\n\t\t}\r\n\r\n\t\tprivate _color(val: number, bypassMap = false) {\r\n\t\t\tlet t\r\n\t\t\tif (!bypassMap) {\r\n\t\t\t\tconst min = this._min,\r\n\t\t\t\t\tmax = this._max\r\n\t\t\t\tif (this._classes && this._classes.length > 2) {\r\n\t\t\t\t\tconst c = this._getClass(val)\r\n\t\t\t\t\tt = c / (this._classes.length - 2)\r\n\t\t\t\t} else if (max !== min) {\r\n\t\t\t\t\tt = (val - min) / (max - min)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt = 1\r\n\t\t\t\t}\r\n\t\t\t\tif (this._correctLightness) {\r\n\t\t\t\t\tt = this._tCorrectedLightness(t)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tt = val\r\n\t\t\t}\r\n\t\t\tt = t ** this._gamma\r\n\t\t\tt = (this._paddingLeft + t) / (1 + this._paddingLeft + this._paddingRight)\r\n\t\t\t//\tt = this._paddingLeft + t * (1 - this._paddingLeft - this._paddingRight)\r\n\t\t\tt = clamp(t, 0, 1)\r\n\t\t\tconst tHash = t\r\n\t\t\tconst cacheResult = this._cache && this._cache.get(tHash)\r\n\t\t\tif (cacheResult) {\r\n\t\t\t\treturn cacheResult\r\n\t\t\t} else {\r\n\t\t\t\tlet col: Color\r\n\t\t\t\tif (Array.isArray(this._colors)) {\r\n\t\t\t\t\tfor (let i = 0; i < this._pos!.length; i++) {\r\n\t\t\t\t\t\tconst p = this._pos![i]\r\n\t\t\t\t\t\tif (t <= p) {\r\n\t\t\t\t\t\t\tcol = this._colors[i]\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (t >= p && i == this._pos!.length - 1) {\r\n\t\t\t\t\t\t\tcol = this._colors[i]\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (t > p && t < this._pos![i + 1]) {\r\n\t\t\t\t\t\t\tt = (t - p) / (this._pos![i + 1] - p)\r\n\t\t\t\t\t\t\tcol = mix(this._colors[i], this._colors[i + 1], t, this._mode)\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcol = this._colors(t)\r\n\t\t\t\t}\r\n\t\t\t\tif (this._cache) {\r\n\t\t\t\t\t// tslint:disable-next-line\r\n\t\t\t\t\tthis._cache.set(tHash, col!)\r\n\t\t\t\t}\r\n\t\t\t\t// tslint:disable-next-line\r\n\t\t\t\treturn col!\r\n\t\t\t}\r\n\t\t}\r\n\t\tprivate _tCorrectedLightness(t0_1: number) {\r\n\t\t\tconst L0 = this._color(0, true).lab()[0]\r\n\t\t\tconst L1 = this._color(1, true).lab()[0]\r\n\t\t\tconst L_ideal = lerp(L0, L1, t0_1)\r\n\t\t\treturn newtonIterate1d(t => this._color(t, true).lab()[0] - L_ideal, t0_1, 8)\r\n\t\t}\r\n\t\tprivate _resetCache() {\r\n\t\t\tif (this._cache) this._cache.clear()\r\n\t\t}\r\n\t}\r\n\r\n\texport namespace scales {\r\n\t\t/**\r\n\t\t * @example chroma.scales.cool()\r\n\t\t */\r\n\t\texport function cool() {\r\n\t\t\treturn scale([hsl(180, 1, 0.9), hsl(250, 0.7, 0.4)])\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @example chroma.scales.hot()\r\n\t\t */\r\n\t\texport function hot() {\r\n\t\t\treturn scale([\"#000\", \"#f00\", \"#ff0\", \"#fff\"]).mode(\"rgb\")\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the WCAG contrast ratio between two colors. A minimum contrast of 4.5:1\r\n\t * [is recommended](http://www.w3.org/TR/WCAG20-TECHS/G18.html) to ensure that text is still readable against a\r\n\t * background color.\r\n\t *\r\n\t * @param a\r\n\t * @param b\r\n\t */\r\n\texport function contrast(a: Chromable, b: Chromable) {\r\n\t\tconst l1 = chroma(a).luminance()\r\n\t\tconst l2 = chroma(b).luminance()\r\n\t\tif (l1 > l2) {\r\n\t\t\treturn (l1 + 0.05) / (l2 + 0.05)\r\n\t\t} else {\r\n\t\t\treturn (l2 + 0.05) / (l1 + 0.05)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Compute the [euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance#Three_dimensions) between two colors.\r\n\t * @param a First color.\r\n\t * @param b Second color.\r\n\t * @param mode The color space in which to compute the distance. Defaults to \"lab\".\r\n\t * @example chroma.distance('#fff', '#ff0', 'rgb')\r\n\t * @example chroma.distance('#fff', '#f0f', 'rgb')\r\n\t * @example chroma.distance('#fff', '#ff0')\r\n\t * @example chroma.distance('#fff', '#f0f')\r\n\t */\r\n\texport function distance(a: Chromable, b: Chromable, mode: ColorMode = \"lab\") {\r\n\t\tconst l1 = chroma(a)[mode]()\r\n\t\tconst l2 = chroma(b)[mode]()\r\n\t\tconst channelDifferences = l1.map(\r\n\t\t\t(channelValue: number, channelIndex: number) => channelValue - l2[channelIndex],\r\n\t\t)\r\n\t\treturn hypot(...channelDifferences)\r\n\t}\r\n\r\n\t/**\r\n\t * Computes color difference as developed by the Colour Measurement Committee of the Society of Dyers and Colourists\r\n\t * (CMC) in 1984. The implementation is adapted from Bruce Lindbloom. The parameters L and C are weighting factors\r\n\t * for lightness and chromaticity.\r\n\t * @param reference\r\n\t * @param sample\r\n\t * @param L\r\n\t * @param C\r\n\t * @example [r = '#ededee', s = '#edeeed', chroma.deltaE(r, s)]\r\n\t * @example [r = '#ececee', s = '#eceeec', chroma.deltaE(r, s)]\r\n\t * @example [r = '#e9e9ee', s = '#e9eee9', chroma.deltaE(r, s)]\r\n\t * @example [r = '#e4e4ee', s = '#e4eee4', chroma.deltaE(r, s)]\r\n\t * @example [r = '#e0e0ee', s = '#e0eee0', chroma.deltaE(r, s)]\r\n\t */\r\n\texport function deltaE(reference: Chromable, sample: Chromable, L = 1, C = 1) {\r\n\t\tconst [L1, a1, b1] = chroma(reference).lab()\r\n\t\tconst [L2, a2, b2] = chroma(sample).lab()\r\n\t\tconst c1 = sqrt(a1 * a1 + b1 * b1)\r\n\t\tconst c2 = sqrt(a2 * a2 + b2 * b2)\r\n\t\tconst sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1)\r\n\t\tconst sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638\r\n\t\tconst h1 = norm360(c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI)\r\n\t\tconst t =\r\n\t\t\th1 >= 164.0 && h1 <= 345.0\r\n\t\t\t\t? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0))\r\n\t\t\t\t: 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0))\r\n\t\tconst c4 = c1 * c1 * c1 * c1\r\n\t\tconst f = sqrt(c4 / (c4 + 1900.0))\r\n\t\tconst sh = sc * (f * t + 1.0 - f)\r\n\t\tconst delL = L1 - L2\r\n\t\tconst delC = c1 - c2\r\n\t\tconst delA = a1 - a2\r\n\t\tconst delB = b1 - b2\r\n\t\tconst dH2 = delA * delA + delB * delB - delC * delC\r\n\t\tconst v1 = delL / (L * sl)\r\n\t\tconst v2 = delC / (C * sc)\r\n\t\tconst v3 = sh\r\n\t\treturn sqrt(v1 * v1 + v2 * v2 + dH2 / (v3 * v3))\r\n\t}\r\n\ttype DataInfo = {\r\n\t\tmin: number\r\n\t\tmax: number\r\n\t\tsum: number\r\n\t\tvalues: number[]\r\n\t\tcount: number\r\n\t\tdomain: [number, number]\r\n\t\tlimits(mode: LimitsMode, num: number): number[]\r\n\t}\r\n\texport function analyze(data: number[]): DataInfo {\r\n\t\tconst r: DataInfo = {\r\n\t\t\tmin: Infinity,\r\n\t\t\tmax: -Infinity,\r\n\t\t\tsum: 0,\r\n\t\t\tvalues: [] as number[],\r\n\t\t\tcount: 0,\r\n\t\t} as DataInfo\r\n\t\tfunction add(val: number) {\r\n\t\t\tif (val != undefined && !isNaN(val)) {\r\n\t\t\t\tr.values.push(val)\r\n\t\t\t\tr.sum += val\r\n\t\t\t\tif (val < r.min) r.min = val\r\n\t\t\t\tif (val > r.max) r.max = val\r\n\t\t\t\tr.count += 1\r\n\t\t\t}\r\n\t\t}\r\n\t\tdata.forEach(val => add(val))\r\n\t\tr.domain = [r.min, r.max]\r\n\t\tr.limits = function(mode, num) {\r\n\t\t\treturn limits(this, mode, num)\r\n\t\t}\r\n\t\treturn r\r\n\t}\r\n\r\n\ttype LimitsMode = \"e\" | \"q\" | \"l\" | \"k\"\r\n\texport function limits(data: number[] | DataInfo, mode: LimitsMode = \"e\", num = 7): number[] {\r\n\t\tconst info = Array.isArray(data) ? analyze(data) : data\r\n\t\tconst { min, max, values } = info\r\n\t\tvalues.sort((a, b) => a - b)\r\n\t\tif (num == 1) {\r\n\t\t\treturn [min, max]\r\n\t\t}\r\n\t\tif (mode.startsWith(\"c\")) {\r\n\t\t\treturn [min, max]\r\n\t\t} else if (mode.startsWith(\"e\")) {\r\n\t\t\treturn Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\r\n\t\t} else if (mode.startsWith(\"l\")) {\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\tthrow new Error(\"Logarithmic scales are only possible for values > 0\")\r\n\t\t\t}\r\n\t\t\tconst min_log = Math.LOG10E * log(min)\r\n\t\t\tconst max_log = Math.LOG10E * log(max)\r\n\t\t\treturn Array.from({ length: num + 1 }, (_, i) => 10 ** lerp(min_log, max_log, i / num))\r\n\t\t} else if (mode.startsWith(\"q\")) {\r\n\t\t\treturn Array.from({ length: num + 1 }, (_, i) => {\r\n\t\t\t\tconst p = ((values.length - 1) * i) / num\r\n\t\t\t\tconst pb = floor(p)\r\n\t\t\t\treturn pb == p ? values[pb] : lerp(values[pb], values[pb + 1], p - pb)\r\n\t\t\t})\r\n\t\t} else if (mode.startsWith(\"k\")) {\r\n\t\t\t// implementation based on\r\n\t\t\t// http://code.google.com/p/figue/source/browse/trunk/figue.js#336\r\n\t\t\t// simplified for 1-d input values\r\n\t\t\tconst n = values.length\r\n\t\t\tconst assignments = new Array(n)\r\n\t\t\tconst clusterSizes = new Array(num)\r\n\t\t\tlet repeat = true\r\n\t\t\tlet nb_iters = 0\r\n\t\t\tlet centroids = Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\r\n\t\t\tdo {\r\n\t\t\t\t// assignment step\r\n\t\t\t\tclusterSizes.fill(0)\r\n\t\t\t\tfor (let i = 0; i < values.length; i++) {\r\n\t\t\t\t\tconst value = values[i]\r\n\t\t\t\t\tconst minDistIndex = indexOfMax(centroids, c => -abs(c - value))\r\n\t\t\t\t\tclusterSizes[minDistIndex]++\r\n\t\t\t\t\tassignments[i] = minDistIndex\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// update centroids step\r\n\t\t\t\tconst newCentroids = new Array(num).fill(0)\r\n\t\t\t\tfor (let i = 0; i < assignments.length; i++) {\r\n\t\t\t\t\tconst cluster = assignments[i]\r\n\t\t\t\t\tnewCentroids[cluster] += values[i]\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j = 0; j < newCentroids.length; j++) {\r\n\t\t\t\t\tnewCentroids[j] /= clusterSizes[j]\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// check convergence\r\n\t\t\t\trepeat = newCentroids.some((nc, j) => nc != centroids[j])\r\n\t\t\t\tcentroids = newCentroids\r\n\t\t\t} while (nb_iters++ < 200 && repeat)\r\n\r\n\t\t\t// finished k-means clustering\r\n\t\t\t// the next part is borrowed from gabrielflor.it\r\n\t\t\tconst kClusters: number[][] = Array.from({ length: num }, () => [])\r\n\t\t\tfor (let i = 0; i < assignments.length; i++) {\r\n\t\t\t\tconst cluster = assignments[i]\r\n\t\t\t\tkClusters[cluster].push(values[i])\r\n\t\t\t}\r\n\t\t\tconst tmpKMeansBreaks = []\r\n\t\t\tfor (const kCluster of kClusters) {\r\n\t\t\t\ttmpKMeansBreaks.push(kCluster[0], kCluster[kCluster.length - 1])\r\n\t\t\t}\r\n\t\t\ttmpKMeansBreaks.sort((a, b) => a - b)\r\n\r\n\t\t\tconst limits = []\r\n\t\t\tlimits.push(tmpKMeansBreaks[0])\r\n\t\t\tfor (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\r\n\t\t\t\tconst v = tmpKMeansBreaks[i]\r\n\t\t\t\tif (!isNaN(v) && limits.indexOf(v) == -1) {\r\n\t\t\t\t\tlimits.push(v)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn limits\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"unknown mode\")\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst interpolators: {\r\n\t[K in InterpolationMode]?: (color1: chroma.Color, color2: chroma.Color, f: number, mode: K) => chroma.Color\r\n} = {}\r\n\r\n// const _guess_formats: { p: number; test: (args: any[]) => ColorFormat | undefined }[] = []\r\nconst _input: {\r\n\t[mode: string]: (...args: any[]) => RGB | RGBA\r\n} = {}\r\n\r\nfunction linear_interpolator(col1: chroma.Color, col2: chroma.Color, f: number, m: ColorMode) {\r\n\tconst xyz1 = col1[m]()\r\n\tconst xyz2 = col2[m]()\r\n\treturn guess(\r\n\t\t[\r\n\t\t\tlerp(xyz1[0], xyz2[0], f),\r\n\t\t\tlerp(xyz1[1], xyz2[1], f),\r\n\t\t\tlerp(xyz1[2], xyz2[2], f),\r\n\t\t\tlerp(col1.alpha(), col2.alpha(), f),\r\n\t\t],\r\n\t\tm,\r\n\t)\r\n}\r\ninterpolators.xyz = interpolators.rgb = interpolators.lab = linear_interpolator\r\n\r\ninterpolators.num = function(col1, col2, f) {\r\n\tconst n1 = col1.num()\r\n\tconst n2 = col2.num()\r\n\treturn chroma.num(lerp(n1, n2, f))\r\n}\r\n\r\ninterpolators.lrgb = function(col1, col2, f) {\r\n\tconst [r1, g1, b1, a1] = col1.rgba(false, false)\r\n\tconst [r2, g2, b2, a2] = col2.rgba(false, false)\r\n\treturn new chroma.Color(\r\n\t\tsqrt(r1 ** 2 * (1 - f) + r2 ** 2 * f),\r\n\t\tsqrt(g1 ** 2 * (1 - f) + g2 ** 2 * f),\r\n\t\tsqrt(b1 ** 2 * (1 - f) + b2 ** 2 * f),\r\n\t\tlerp(a1, a2, f),\r\n\t)\r\n}\r\n\r\nfunction _bezier(chromables: chroma.Chromable[]): (t: number) => chroma.Color {\r\n\tconst colors = chromables.map(c => chroma(c))\r\n\tconst [lab0, lab1, lab2, lab3] = colors.map(c => c.lab())\r\n\tif (2 == chromables.length) {\r\n\t\t// linear interpolation\r\n\t\treturn t => {\r\n\t\t\treturn chroma.lab([0, 1, 2].map(i => lerp(lab0[i], lab1[i], t)) as LAB)\r\n\t\t}\r\n\t} else if (3 == chromables.length) {\r\n\t\t// quadratic bezier interpolation\r\n\t\tconst bezier2 = (p0: number, p1: number, p2: number, t: number) =>\r\n\t\t\t(1 - t) ** 2 * p0 + 2 * (1 - t) * t * p1 + t ** 2 * p2\r\n\t\treturn t => chroma.lab([0, 1, 2].map(i => bezier2(lab0[i], lab1[i], lab2[i], t)) as LAB)\r\n\t} else if (4 == chromables.length) {\r\n\t\t// cubic bezier interpolation\r\n\t\tconst bezier3 = (p0: number, p1: number, p2: number, p3: number, t: number) =>\r\n\t\t\t(1 - t) ** 3 * p0 + 3 * (1 - t) ** 2 * t * p1 + 3 * (1 - t) * t ** 2 * p2 + t ** 3 * p3\r\n\t\treturn t => chroma.lab([0, 1, 2].map(i => bezier3(lab0[i], lab1[i], lab2[i], lab3[i], t)) as LAB)\r\n\t} else if (5 == chromables.length) {\r\n\t\tconst I0 = _bezier(colors.slice(0, 3))\r\n\t\tconst I1 = _bezier(colors.slice(2, 5))\r\n\t\treturn t => (t < 0.5 ? I0(t * 2) : I1((t - 0.5) * 2))\r\n\t} else throw new Error()\r\n}\r\n\r\nfunction guess(args: any[], mode?: ColorFormat): chroma.Color {\r\n\tif (Array.isArray(args[0])) args = args[0]\r\n\tif (!mode) {\r\n\t\tif (args.length == 1 && args[0] in chroma.w3cx11) {\r\n\t\t\tmode = \"name\"\r\n\t\t} else if (args.length == 1 && \"string\" == typeof args[0]) {\r\n\t\t\tmode = \"css\"\r\n\t\t} else if (args.length == 3) {\r\n\t\t\tmode = \"rgb\"\r\n\t\t} else if (args.length == 4 && \"number\" == typeof args[3] && args[3] >= 0 && args[3] <= 1) {\r\n\t\t\tmode = \"rgb\"\r\n\t\t} else if (args.length == 1 && \"number\" == typeof args[0] && args[0] >= 0 && args[0] <= 0xffffff) {\r\n\t\t\tmode = \"num\"\r\n\t\t} else throw new Error(\"could not guess mode. args \" + JSON.stringify(args))\r\n\t}\r\n\tconst [r, g, b, a] = _input[mode](...args)\r\n\treturn new chroma.Color(r, g, b, a)\r\n}\r\n\r\nfunction _average_lrgb(colors: chroma.Color[]) {\r\n\tlet rSquareSum = 0,\r\n\t\tgSquareSum = 0,\r\n\t\tbSquareSum = 0,\r\n\t\talphaSum = 0\r\n\tfor (const col of colors) {\r\n\t\tconst [r, g, b, alpha] = col.rgba(false, false)\r\n\t\trSquareSum += r ** 2\r\n\t\tgSquareSum += g ** 2\r\n\t\tbSquareSum += b ** 2\r\n\t\talphaSum += alpha\r\n\t}\r\n\treturn new chroma.Color(\r\n\t\tsqrt(rSquareSum) / colors.length,\r\n\t\tsqrt(gSquareSum) / colors.length,\r\n\t\tsqrt(bSquareSum) / colors.length,\r\n\t\talphaSum / colors.length,\r\n\t)\r\n}\r\n\r\nfunction hex2rgb(hex: string): RGBA | RGB {\r\n\tlet m\r\n\tif ((m = hex.match(/^#?([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})?$/i))) {\r\n\t\treturn [parseInt(m[1], 16), parseInt(m[2], 16), parseInt(m[3], 16), m[4] ? parseInt(m[4], 16) / 255 : 1]\r\n\t} else if ((m = hex.match(/^#?([A-F\\d])([A-F\\d])([A-F\\d])([A-F\\d])?$/i))) {\r\n\t\treturn [\r\n\t\t\tparseInt(m[1], 16) * 0x11,\r\n\t\t\tparseInt(m[2], 16) * 0x11,\r\n\t\t\tparseInt(m[3], 16) * 0x11,\r\n\t\t\tm[4] ? (parseInt(m[4], 16) * 0x11) / 255 : 1,\r\n\t\t]\r\n\t}\r\n\tthrow new Error(\"invalid hex color: \" + hex)\r\n}\r\n// color mode, i.e. representation as array of number\r\nexport type ColorMode = \"rgb\" | \"cmyk\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"gl\" | \"lch\" | \"xyz\"\r\nexport type InterpolationMode = \"rgb\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"lch\" | \"xyz\" | \"lrgb\" | \"num\"\r\nexport type ColorFormat = ColorMode | \"hex\" | \"num\" | \"name\" | \"kelvin\" | \"css\"\r\n/**\r\n * CMYK color space\r\n * @see https://en.wikipedia.org/wiki/cmyk_color_model\r\n * [cyan, magenta, yellow, alpha1]\r\n */\r\ntype CMYK = [number, number, number, number]\r\n/**\r\n * WebGL colors. Like RGB, but floats in [0; 1] instead of 0-255.\r\n * [red255, green255, blue255, alpha1]\r\n */\r\ntype GL = [number, number, number, number]\r\n/**\r\n * Red, green, blue ranging from 0-255.\r\n * Can be floats and outside the above range internally.\r\n */\r\ntype RGB = [number, number, number]\r\n/**\r\n * RGB plus alpha ranging from 0-1\r\n * [red255, green255, blue255, alpha1]\r\n */\r\ntype RGBA = [number, number, number, number]\r\n/**\r\n * CIELAB color space\r\n * [lightness, A*, B*]\r\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space\r\n */\r\ntype LAB = [number, number, number]\r\n/**\r\n * Cylindrical representation of CIELAB\r\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#Cylindrical_representation:_CIELCh_or_CIEHLC\r\n *\r\n */\r\ntype LCH = [number, number, number]\r\n/**\r\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\r\n * [hueDegrees, saturation1, lightness1]\r\n */\r\ntype HSL = [number, number, number]\r\n/**\r\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\r\n * [hueDegrees, saturation1, value1]\r\n */\r\ntype HSV = [number, number, number]\r\n/**\r\n * @see https://en.wikipedia.org/w/index.php?title=HSI_color_space&redirect=no\r\n * [hueDegrees, saturation1, intensity1]\r\n */\r\ntype HSI = [number, number, number]\r\ntype XYZ = [number, number, number]\r\n/**\r\n * HCG Color Model\r\n * See https://github.com/acterhd/hcg-color\r\n * A color value in the HCG format is an array of three numbers [h, c, g], where\r\n * `h` is the hue as an angle in degrees [0; 360)\r\n * `c` is the chroma value in [0; 1]\r\n * `g` is the gray value in [0; 1]\r\n */\r\ntype HCG = [number, number, number]\r\n\r\ninterface ColorModes {\r\n\tcmyk: CMYK\r\n\tgl: GL\r\n\trgb: RGB\r\n\trgba: RGBA\r\n\tlab: LAB\r\n\thsl: HSL\r\n\thsv: HSV\r\n\thsi: HSI\r\n\txyz: XYZ\r\n\thcg: HCG\r\n\tlch: LCH\r\n\thex: string\r\n\tnum: number\r\n\tname: string\r\n\tkelvin: number\r\n\tcss: string\r\n}\r\nfunction rgb2hex(r255: number, g255: number, b255: number, a1: number, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\r\n\tr255 = clamp(round(r255), 0, 255)\r\n\tg255 = clamp(round(g255), 0, 255)\r\n\tb255 = clamp(round(b255), 0, 255)\r\n\tconst rgb = (r255 << 16) | (g255 << 8) | b255\r\n\tconst rgbString = rgb.toString(16).padStart(6, \"0\")\r\n\tconst alphaString = round(clamp(a1) * 255)\r\n\t\t.toString(16)\r\n\t\t.padStart(2, \"0\")\r\n\treturn \"#\" + (\"argb\" == mode ? alphaString + rgbString : \"rgba\" == mode ? rgbString + alphaString : rgbString)\r\n}\r\n\r\n_input.lrgb = _input.rgb\r\n\r\n_input.hex = hex2rgb\r\n_input.hsl = hsl2rgb\r\nfunction norm360(degrees: number) {\r\n\treturn ((degrees % 360) + 360) % 360\r\n}\r\n\r\n_input.hsv = hsv2rgb\r\n\r\nfunction num2rgb(num: number): RGBA {\r\n\tif (!(\"number\" == typeof num && num >= 0 && num <= 0xffffff)) {\r\n\t\tthrow new Error(\"unknown num color: \" + num)\r\n\t}\r\n\tconst r = num >> 16\r\n\tconst g = (num >> 8) & 0xff\r\n\tconst b = num & 0xff\r\n\treturn [r, g, b, 1]\r\n}\r\n\r\nfunction rgb2num(r255: number, g255: number, b255: number, a1: number = 1, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\r\n\tconst rgbNum = (round(r255) << 16) | (round(g255) << 8) | round(b255)\r\n\tif (\"rgb\" === mode) {\r\n\t\treturn rgbNum\r\n\t} else if (\"rgba\" === mode) {\r\n\t\treturn (rgbNum << 8) | (round(a1 * 255) << 24)\r\n\t} else {\r\n\t\treturn (round(a1 * 255) << 24) | rgbNum\r\n\t}\r\n}\r\n\r\n_input.num = num2rgb\r\n\r\nconst WS = \"\\\\s*\"\r\nconst FLOAT = \"([+-]?(?:\\\\d*\\\\.?)?\\\\d+(?:[eE][+-]?\\\\d+)?)\"\r\nconst CSS_RGB_REGEX = new RegExp(\r\n\t[\"^rgba?\\\\(\", FLOAT, \",\", FLOAT, \",\", FLOAT, \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\r\n\t\"i\",\r\n)\r\nconst CSS_RGB_WS_REGEX = new RegExp([\"^rgba?\\\\(\", FLOAT, FLOAT, FLOAT, \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS), \"i\")\r\nconst CSS_RGB_PERCENT_REGEX = new RegExp(\r\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\r\n\t\"i\",\r\n)\r\nconst CSS_RGB_WS_PERCENT_REGEX = new RegExp(\r\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\r\n\t\"i\",\r\n)\r\nconst CSS_HSL_REGEX = new RegExp(\r\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(\r\n\t\tWS,\r\n\t),\r\n\t\"i\",\r\n)\r\nconst CSS_HSL_WS_REGEX = new RegExp(\r\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\\\\s+\" + FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\r\n\t\"i\",\r\n)\r\nfunction css2rgb(css: string): RGBA | RGB {\r\n\tif (chroma.w3cx11 && (chroma.w3cx11 as any)[css.toLowerCase()]) {\r\n\t\treturn num2rgb((chroma.w3cx11 as any)[css.toLowerCase()])\r\n\t}\r\n\tlet m\r\n\tif ((m = css.match(CSS_RGB_REGEX) || css.match(CSS_RGB_WS_REGEX))) {\r\n\t\treturn [\r\n\t\t\tclamp(+m[1], 0, 255),\r\n\t\t\tclamp(+m[2], 0, 255),\r\n\t\t\tclamp(+m[3], 0, 255),\r\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\r\n\t\t]\r\n\t} else if ((m = css.match(CSS_RGB_PERCENT_REGEX) || css.match(CSS_RGB_WS_PERCENT_REGEX))) {\r\n\t\treturn [\r\n\t\t\tclamp(+m[1] / 100) * 255,\r\n\t\t\tclamp(+m[2] / 100) * 255,\r\n\t\t\tclamp(+m[3] / 100) * 255,\r\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\r\n\t\t]\r\n\t} else if ((m = css.match(CSS_HSL_REGEX) || css.match(CSS_HSL_WS_REGEX))) {\r\n\t\tconst CONVERSION = { deg: 1, rad: RAD2DEG, turn: 360 }\r\n\t\tconst angleUnit = (m[2] ? m[2].toLowerCase() : \"deg\") as \"deg\" | \"rad\" | \"turn\"\r\n\t\treturn hsl2rgb(\r\n\t\t\t(((+m[1] * CONVERSION[angleUnit]) % 360) + 360) % 360,\r\n\t\t\tclamp(+m[3] / 100),\r\n\t\t\tclamp(+m[4] / 100),\r\n\t\t\tm[5] ? clamp(m[6] ? +m[5] / 100 : +m[5]) : 1,\r\n\t\t)\r\n\t} else {\r\n\t\treturn hex2rgb(css)\r\n\t}\r\n}\r\n\r\nfunction rgb2css(r: number, g: number, b: number, a = 1) {\r\n\tif (a >= 1) {\r\n\t\treturn \"rgb(\" + [r, g, b].map(round).join(\",\") + \")\"\r\n\t} else {\r\n\t\treturn \"rgba(\" + [r, g, b].map(round).join(\",\") + \",\" + a + \")\"\r\n\t}\r\n}\r\n\r\nfunction rnd(a: any) {\r\n\treturn round(a * 100) / 100\r\n}\r\n\r\nfunction hsl2css([h, s, l]: HSL, alpha: number) {\r\n\tconst mode = alpha < 1 ? \"hsla\" : \"hsl\"\r\n\treturn (\r\n\t\tmode +\r\n\t\t\"(\" +\r\n\t\trnd(h) +\r\n\t\t\",\" +\r\n\t\trnd(s * 100) +\r\n\t\t\"%\" +\r\n\t\t\",\" +\r\n\t\trnd(l * 100) +\r\n\t\t\"%\" +\r\n\t\t(\"hsla\" == mode ? \",\" + rnd(alpha) : \"\") +\r\n\t\t\")\"\r\n\t)\r\n}\r\n\r\n_input.css = css2rgb\r\n\r\n_input.name = function(name) {\r\n\treturn num2rgb((chroma.w3cx11 as any)[name])\r\n}\r\n\r\nfunction lch2lab(l: number, c: number, hueDegrees: number): LAB {\r\n\t/*\r\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\r\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\r\n    out of gamut if the parameters are in the range 0-1.\r\n\r\n    A saturation multiplier was added by Gregor Aisch\r\n     */\r\n\treturn [l, cos(hueDegrees * DEG2RAD) * c, sin(hueDegrees * DEG2RAD) * c]\r\n}\r\n\r\nfunction lch2rgb(l: number, c: number, hDegrees: number, alpha1 = 1): RGBA {\r\n\tconst [, a, b] = lch2lab(l, c, hDegrees)\r\n\treturn cielab2rgb(l, a, b, alpha1)\r\n}\r\n\r\nfunction lab2lch(l: number, a: number, b: number): LCH {\r\n\tconst c = hypot(a, b)\r\n\tconst h = (atan2(b, a) * RAD2DEG + 360) % 360\r\n\treturn [l, c, h]\r\n}\r\n\r\nfunction rgb2lch(r255: number, g255: number, b255: number) {\r\n\tconst [l, a, b2] = rgb2lab(r255, g255, b255)\r\n\treturn lab2lch(l, a, b2)\r\n}\r\n\r\n_input.lch = lch2rgb\r\n\r\nfunction rgb2cmyk(r255: number, g255: number, b255: number): CMYK {\r\n\tr255 /= 255\r\n\tg255 /= 255\r\n\tb255 /= 255\r\n\tconst k = 1 - max(r255, g255, b255)\r\n\tif (1 == k) return [0, 0, 0, 1]\r\n\tconst c = (1 - r255 - k) / (1 - k)\r\n\tconst m = (1 - g255 - k) / (1 - k)\r\n\tconst y = (1 - b255 - k) / (1 - k)\r\n\treturn [c, m, y, k]\r\n}\r\n\r\nfunction cmyk2rgb(c1: number, m1: number, y1: number, k1: number, alpha1 = 1): RGBA {\r\n\tif (k1 == 1) {\r\n\t\treturn [0, 0, 0, alpha1]\r\n\t}\r\n\tconst r255 = 255 * (1 - c1) * (1 - k1)\r\n\tconst g255 = 255 * (1 - m1) * (1 - k1)\r\n\tconst b255 = 255 * (1 - y1) * (1 - k1)\r\n\treturn [r255, g255, b255, alpha1]\r\n}\r\n\r\n_input.cmyk = cmyk2rgb\r\n\r\n_input.gl = function(r: number, g: number, b: number, a: number = 1): RGBA {\r\n\treturn [r * 255, g * 255, b * 255, a]\r\n}\r\n\r\n//function rgb2luminance(r: number, g: number, b: number) {\r\n//\t// https://en.wikipedia.org/wiki/Relative_luminance\r\n//\tconst [, Y] = rgb2xyz(r, g, b)\r\n//\treturn Y\r\n//}\r\n\r\nfunction rgbChannel2RgbLinear(x255: number) {\r\n\tconst x1 = x255 / 255\r\n\t// http://entropymine.com/imageworsener/srgbformula/\r\n\tif (x1 <= 0.04045) {\r\n\t\treturn x1 / 12.92\r\n\t} else {\r\n\t\treturn ((x1 + 0.055) / 1.055) ** 2.4\r\n\t}\r\n}\r\nfunction rgbLinearChannel2Rgb(xLinear1: number) {\r\n\tif (xLinear1 <= 0.0031308) {\r\n\t\treturn 255 * (12.92 * xLinear1)\r\n\t} else {\r\n\t\treturn 255 * ((1 + 0.055) * xLinear1 ** (1 / 2.4) - 0.055)\r\n\t}\r\n}\r\n\r\nfunction kelvin2rgb(kelvin: number): RGB {\r\n\tconst t = kelvin / 100\r\n\tlet r, g, b\r\n\tif (t < 66) {\r\n\t\tr = 255\r\n\t\tg = -155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)\r\n\t\tb = t < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)\r\n\t} else {\r\n\t\tr = 351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)\r\n\t\tg = 325.4494125711974 + 0.07943456536662342 * (t - 50) - 28.0852963507957 * log(t - 50)\r\n\t\tb = 255\r\n\t}\r\n\treturn [r, g, b]\r\n}\r\n\r\n_input.rgb = (...args: number[]) => args as RGB\r\n\r\nfunction rgb2kelvin(r255: number, g255: number, b255: number) {\r\n\tconsole.log(b255 - r255)\r\n\tif (g255 + b255 < 158.61) {\r\n\t\tconsole.log(\"0 < t < 20\")\r\n\t\t// calc from green\r\n\t\treturn round(\r\n\t\t\tnewtonIterate1d(\r\n\t\t\t\tt => g255 - (-155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)),\r\n\t\t\t\t15,\r\n\t\t\t\t4,\r\n\t\t\t) * 100,\r\n\t\t)\r\n\t\treturn (Math.E ** ((g255 + 155.25485562709179 + 0.44596950469579133 * (15 - 2)) / 104.49216199393888) + 2) * 100\r\n\t} else if (b255 - r255 < 0) {\r\n\t\tconsole.log(\"20 < t < 66\")\r\n\t\treturn round(\r\n\t\t\tnewtonIterate1d(\r\n\t\t\t\tt => b255 - (-254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)),\r\n\t\t\t\t43,\r\n\t\t\t\t4,\r\n\t\t\t) * 100,\r\n\t\t)\r\n\t\treturn (\r\n\t\t\t(Math.E ** ((b255 + 254.76935184120902 - 0.8274096064007395 * (43 - 10)) / 115.67994401066147) + 10) * 100\r\n\t\t)\r\n\t} else {\r\n\t\tconsole.log(\"0 < t < 400, start= \" + (-1.4 * (r255 + g255) + 755))\r\n\t\treturn round(\r\n\t\t\tnewtonIterate1d(\r\n\t\t\t\tt => r255 - (351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)),\r\n\t\t\t\t-1.4 * (r255 + g255) + 755,\r\n\t\t\t\t8,\r\n\t\t\t) * 100,\r\n\t\t)\r\n\t\treturn ((r255 / 329.698727446) ** (1 / -0.1332047592) + 60) * 100\r\n\t}\r\n\treturn newtonIterate1d(\r\n\t\tk => {\r\n\t\t\tconst eps = 1e-9\r\n\t\t\tconst [kr, kg, kb] = kelvin2rgb(k)\r\n\t\t\tconst [kr2, kg2, kb2] = kelvin2rgb(k + eps)\r\n\t\t\tconst dkr = (kr2 - kr) / eps,\r\n\t\t\t\tdkg = (kg2 - kg) / eps,\r\n\t\t\t\tdkb = (kb2 - kb) / eps\r\n\t\t\treturn dkr * (kr - r255) + dkg * (kg - g255) + dkb * (kb - b255)\r\n\r\n\t\t\treturn kb / kr - b255 / r255\r\n\t\t},\r\n\t\t//1000,\r\n\t\t//40000,\r\n\t\tMath.E ** ((b255 / r255 + 2.5) / 0.4),\r\n\t\t20,\r\n\t\t//1e-6,\r\n\t)\r\n\tlet maxTemp = 40000\r\n\tlet minTemp = 1000\r\n\tconst eps = 0.4\r\n\tlet temp: number = 0\r\n\tlet rgb\r\n\twhile (maxTemp - minTemp > eps) {\r\n\t\ttemp = (maxTemp + minTemp) * 0.5\r\n\t\trgb = kelvin2rgb(temp)\r\n\t\tif (rgb[2] / rgb[0] >= b255 / r255) {\r\n\t\t\tmaxTemp = temp\r\n\t\t} else {\r\n\t\t\tminTemp = temp\r\n\t\t}\r\n\t}\r\n\treturn round(temp)\r\n}\r\n\r\n_input.temperature = _input.kelvin = _input.K = kelvin2rgb\r\n\r\nfunction blend_f(f: (c1: RGB, c2: RGB) => RGB) {\r\n\treturn function(bottom: chroma.Chromable, top: chroma.Chromable) {\r\n\t\tconst [r, g, b] = f(chroma(top).rgb(), chroma(bottom).rgb())\r\n\t\treturn chroma.rgb(r, g, b)\r\n\t}\r\n}\r\n\r\nfunction each(f: (a: number, b: number) => number) {\r\n\treturn function(c1: RGB, c2: RGB): RGB {\r\n\t\treturn c1.map((e, i) => f(e, c2[i])) as RGB\r\n\t}\r\n}\r\n\r\nfunction _screen(a: number, b: number) {\r\n\treturn 255 * (1 - (1 - a / 255) * (1 - b / 255))\r\n}\r\n\r\nfunction _overlay(a: number, b: number) {\r\n\tif (b < 128) {\r\n\t\treturn (2 * a * b) / 255\r\n\t} else {\r\n\t\treturn 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255))\r\n\t}\r\n}\r\n\r\nfunction _burn(a: number, b: number) {\r\n\treturn 255 * (1 - (1 - b / 255) / (a / 255))\r\n}\r\n\r\nfunction _dodge(a: number, b: number) {\r\n\tif (a == 255) {\r\n\t\treturn 255\r\n\t}\r\n\treturn 255 * min(1, b / 255 / (1 - a / 255))\r\n}\r\n\r\n/**\r\n * r, g, b can be in any interval (0-1 or 0-255)\r\n * @param r\r\n * @param g\r\n * @param b\r\n */\r\nfunction rgb2hexhue(r: number, g: number, b: number) {\r\n\tconst m = min(r, g, b)\r\n\tconst M = max(r, g, b)\r\n\tconst delta = M - m\r\n\tlet hueTurnX6 // angle as value between 0 and 6\r\n\tif (0 == delta) {\r\n\t\thueTurnX6 = 0\r\n\t} else if (r == M) {\r\n\t\t// second term to make sure the value is > 0\r\n\t\thueTurnX6 = (g - b) / delta + (g < b ? 6 : 0)\r\n\t} else if (g == M) {\r\n\t\thueTurnX6 = 2 + (b - r) / delta\r\n\t} else {\r\n\t\thueTurnX6 = 4 + (r - g) / delta\r\n\t}\r\n\treturn [hueTurnX6 * 60, m, M]\r\n}\r\nfunction hcxm2rgb(hueDegrees: number, c1: number, x1: number, m1: number, alpha1: number): RGBA {\r\n\tconst m255 = m1 * 255\r\n\tconst cm255 = c1 * 255 + m255\r\n\tconst xm255 = x1 * 255 + m255\r\n\tif (hueDegrees < 60) {\r\n\t\treturn [cm255, xm255, m255, alpha1]\r\n\t} else if (hueDegrees < 120) {\r\n\t\treturn [xm255, cm255, m255, alpha1]\r\n\t} else if (hueDegrees < 180) {\r\n\t\treturn [m255, cm255, xm255, alpha1]\r\n\t} else if (hueDegrees < 240) {\r\n\t\treturn [m255, xm255, cm255, alpha1]\r\n\t} else if (hueDegrees < 300) {\r\n\t\treturn [xm255, m255, cm255, alpha1]\r\n\t} else {\r\n\t\treturn [cm255, m255, xm255, alpha1]\r\n\t}\r\n}\r\n\r\n/**\r\n * https://en.wikipedia.org/w/index.php?title=HSL_and_HSV&oldid=856714654#From_HSL\r\n */\r\nfunction hsl2rgb(hueDegrees: number, s1: number, l1: number, alpha1 = 1): RGBA {\r\n\thueDegrees = norm360(hueDegrees)\r\n\tconst c1 = (1 - abs(2 * l1 - 1)) * s1\r\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), l1 - c1 / 2, alpha1)\r\n}\r\nfunction rgb2hsl(r255: number, g255: number, b255: number): HSL {\r\n\tconst [hue, min1, max1] = rgb2hexhue(r255 / 255, g255 / 255, b255 / 255)\r\n\tconst l1 = (max1 + min1) / 2\r\n\tlet s1: number\r\n\tif (max1 == min1) {\r\n\t\ts1 = 0\r\n\t} else {\r\n\t\ts1 = l1 < 0.5 ? (max1 - min1) / (max1 + min1) : (max1 - min1) / (2 - max1 - min1)\r\n\t}\r\n\treturn [hue, s1, l1]\r\n}\r\n\r\nfunction hsv2rgb(hueDegrees: number, s1: number, v1: number, alpha1: number = 1): RGBA {\r\n\thueDegrees = norm360(hueDegrees)\r\n\tconst c1 = v1 * s1\r\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), v1 - c1, alpha1)\r\n}\r\n\r\nfunction rgb2hsv(r255: number, g255: number, b255: number): HSV {\r\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\r\n\tconst delta255 = max255 - min255\r\n\tconst v1 = max255 / 255.0\r\n\tconst s1 = max255 == 0 ? 0 : delta255 / max255\r\n\treturn [hue, s1, v1]\r\n}\r\n\r\nfunction hcg2rgb(hueDegrees: number, c1: number, g1: number, alpha1 = 1): RGBA {\r\n\thueDegrees = norm360(hueDegrees)\r\n\tconst p = g1 * (1 - c1)\r\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), p, alpha1)\r\n}\r\n\r\nfunction rgb2hcg(r255: number, g255: number, b255: number): HCG {\r\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\r\n\tconst c1 = (max255 - min255) / 255\r\n\tconst _g1 = c1 < 1 ? min255 / 255 / (1 - c1) : 0\r\n\treturn [hue, c1, _g1]\r\n}\r\n\r\n_input.hcg = hcg2rgb\r\n\r\nfunction cielab2rgb(LStar100: number, aStar: number, bStar: number, alpha = 1): RGBA {\r\n\tconst [x, y, z] = cielab2xyz(LStar100, aStar, bStar)\r\n\treturn xyz2rgb(x, y, z, alpha)\r\n}\r\n\r\nfunction cielab2xyz(LStar100: number, aStar: number, bStar: number) {\r\n\tfunction fInv(t: number) {\r\n\t\tif (t > LAB_delta) {\r\n\t\t\treturn t ** 3\r\n\t\t} else {\r\n\t\t\treturn LAB_3DeltaPow2 * (t - 4 / 29)\r\n\t\t}\r\n\t}\r\n\treturn [\r\n\t\tLAB_Xn * fInv((LStar100 + 16) / 116 + aStar / 500),\r\n\t\tLAB_Yn * fInv((LStar100 + 16) / 116),\r\n\t\tLAB_Zn * fInv((LStar100 + 16) / 116 - bStar / 200),\r\n\t]\r\n}\r\nfunction xyz2cielab(x: number, y: number, z: number): LAB {\r\n\t// https://en.wikipedia.org/w/index.php?title=CIELAB_color_space&oldid=849576085#Forward_transformation\r\n\tfunction f(t: number) {\r\n\t\tif (t > LAB_deltaPow3) {\r\n\t\t\treturn cbrt(t)\r\n\t\t} else {\r\n\t\t\treturn t / LAB_3DeltaPow2 + 4 / 29\r\n\t\t}\r\n\t}\r\n\treturn [116 * f(y / LAB_Yn) - 16, 500 * (f(x / LAB_Xn) - f(y / LAB_Yn)), 200 * (f(y / LAB_Yn) - f(z / LAB_Zn))]\r\n}\r\n\r\n// const LAB_CONSTANTS = {\r\nconst LAB_Kn = 18\r\nconst LAB_Xn = 0.95047\r\nconst LAB_Yn = 1\r\nconst LAB_Zn = 1.08883\r\nconst LAB_delta = 0.206896552 // delta = 6 / 29\r\nconst LAB_3DeltaPow2 = 0.12841855 // 3 * delta ** 2\r\nconst LAB_deltaPow3 = 0.008856452 // delta ** 3\r\n// }\r\n\r\nfunction rgb2lab(r255: number, g255: number, b255: number): RGB {\r\n\tconst [x, y, z] = rgb2xyz(r255, g255, b255)\r\n\treturn xyz2cielab(x, y, z)\r\n}\r\n\r\nfunction rgb2xyz(r255: number, g255: number, b255: number): XYZ {\r\n\t// https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\r\n\tconst r1Linear = rgbChannel2RgbLinear(r255)\r\n\tconst g1Linear = rgbChannel2RgbLinear(g255)\r\n\tconst b1Linear = rgbChannel2RgbLinear(b255)\r\n\tconst X = 0.4124564 * r1Linear + 0.3575761 * g1Linear + 0.1804375 * b1Linear\r\n\tconst Y = 0.2126729 * r1Linear + 0.7151522 * g1Linear + 0.072175 * b1Linear\r\n\tconst Z = 0.0193339 * r1Linear + 0.119192 * g1Linear + 0.9503041 * b1Linear\r\n\treturn [X, Y, Z]\r\n}\r\nfunction xyz2rgb(X1: number, Y1: number, Z1: number, alpha1 = 1): RGBA {\r\n\t// https://en.wikipedia.org/wiki/SRGB#The_forward_transformation_(CIE_XYZ_to_sRGB)\r\n\tconst r1Linear = 3.2404542 * X1 - 1.5371385 * Y1 - 0.4985314 * Z1\r\n\tconst g1Linear = -0.969266 * X1 + 1.8760108 * Y1 + 0.041556 * Z1\r\n\tconst b1Linear = 0.0556434 * X1 - 0.2040259 * Y1 + 1.0572252 * Z1\r\n\treturn [rgbLinearChannel2Rgb(r1Linear), rgbLinearChannel2Rgb(g1Linear), rgbLinearChannel2Rgb(b1Linear), alpha1]\r\n}\r\n\r\n_input.xyz = xyz2rgb\r\n_input.lab = cielab2rgb\r\n\r\nfunction hsi2rgb(hueDegrees: number, s1: number, i1: number, alpha1 = 1): RGBA {\r\n\t/*\r\n    borrowed from here:\r\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\r\n     */\r\n\tlet r, g, b\r\n\tlet hRad = hueDegrees * DEG2RAD\r\n\tif (hRad < (2 * PI) / 3) {\r\n\t\tb = (1 - s1) / 3\r\n\t\tr = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\r\n\t\tg = 1 - (b + r)\r\n\t} else if (hRad < (4 * PI) / 3) {\r\n\t\thRad -= (2 * PI) / 3\r\n\t\tr = (1 - s1) / 3\r\n\t\tg = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\r\n\t\tb = 1 - (r + g)\r\n\t} else {\r\n\t\thRad -= (4 * PI) / 3\r\n\t\tg = (1 - s1) / 3\r\n\t\tb = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\r\n\t\tr = 1 - (g + b)\r\n\t}\r\n\treturn [3 * i1 * r * 255, 3 * i1 * g * 255, 3 * i1 * b * 255, alpha1]\r\n}\r\n\r\n/**\r\n * For HSI, we use the direct angle calculation. I.e. atan2(beta, alpha). See wikipedia link.\r\n */\r\nfunction rgb2hsi(r255: number, g255: number, b255: number): HSI {\r\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma\r\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Lightness\r\n\tconst r1 = r255 / 255\r\n\tconst g1 = g255 / 255\r\n\tconst b1 = b255 / 255\r\n\tconst i1 = (r1 + g1 + b1) / 3\r\n\tif (r1 == g1 && g1 == b1) {\r\n\t\treturn [0, 0, i1]\r\n\t} else {\r\n\t\tconst alpha = (1 / 2) * (2 * r1 - g1 - b1)\r\n\t\tconst beta = (sqrt(3) / 2) * (g1 - b1)\r\n\t\tconst hRad = atan2(beta, alpha)\r\n\t\tconst min1 = min(r1, g1, b1)\r\n\t\tconst s1 = 1 - min1 / i1\r\n\t\treturn [(hRad < 0 ? 2 * PI + hRad : hRad) * RAD2DEG, s1, i1]\r\n\t}\r\n}\r\n\r\n_input.hsi = hsi2rgb\r\n\r\ninterpolators.hsv = interpolators.hsl = interpolators.hsi = interpolators.lch = interpolators.hcg = function interpolate_hsx(\r\n\tcolor1: chroma.Color,\r\n\tcolor2: chroma.Color,\r\n\tf: number,\r\n\tm: \"hsv\" | \"hsl\" | \"hsi\" | \"lch\" | \"hcg\",\r\n) {\r\n\tconst [a1, b1, c1] = color1[m]()\r\n\tconst [a2, b2, c2] = color2[m]()\r\n\tfunction lerpHue(hue1: number, hue2: number, f: number) {\r\n\t\tconst dh = norm360(hue2 - hue1 + 180) - 180\r\n\t\treturn hue1 + f * dh\r\n\t}\r\n\treturn chroma[m](\r\n\t\t(\"h\" == m.charAt(0) ? lerpHue : lerp)(a1, a2, f),\r\n\t\tlerp(b1, b2, f),\r\n\t\t(\"h\" == m.charAt(2) ? lerpHue : lerp)(c1, c2, f),\r\n\t)\r\n}\r\n\r\nfunction indexOfMax<T>(arr: ArrayLike<T>, f: (el: T) => number) {\r\n\tlet maxValue = -Infinity,\r\n\t\tmaxValueIndex = -1\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\tconst value = f(arr[i])\r\n\t\tif (value > maxValue) {\r\n\t\t\tmaxValue = value\r\n\t\t\tmaxValueIndex = i\r\n\t\t}\r\n\t}\r\n\treturn maxValueIndex\r\n}\r\nfunction withMax<T>(arr: ArrayLike<T>, f: (el: T) => number): T {\r\n\treturn arr[indexOfMax(arr, f)]\r\n}\r\n","import { assert, int, NLA_DEBUG, V3 } from 'ts3dutils'\nimport { currentGL, TSGLContext } from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\n\nexport class Buffer {\n\tbuffer: WebGLBuffer | undefined = undefined\n\tdata: any[] = []\n\n\t/** Number of elements in buffer. 2 V3s is still 2, not 6. */\n\tcount: int = 0\n\n\t/** Space between elements in buffer. 3 for V3s. */\n\tspacing: 1 | 2 | 3 | 4 = 1\n\n\thasBeenCompiled: boolean = false\n\n\tname?: string\n\n\tmaxValue?: number\n\n\tbindSize: GL['UNSIGNED_INT'] | GL['UNSIGNED_SHORT']\n\n\t/**\n\t * Provides a simple method of uploading data to a GPU buffer.\n\t *\n\t * @example\n\t *     const vertices = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t *     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]]\n\t *     vertices.compile()\n\t *\n\t * @example\n\t *     const indices = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t *     indices.data = [[0, 1, 2], [2, 1, 3]]\n\t *     indices.compile()\n\t *\n\t * @param target Specifies the target to which the buffer object is bound.\n\t * @param type\n\t */\n\tconstructor(\n\t\tpublic readonly target: GL.BufferTarget,\n\t\tpublic readonly type: typeof Float32Array | typeof Uint16Array | typeof Uint32Array,\n\t) {\n\t\tassert(\n\t\t\ttarget == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER,\n\t\t\t'target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER',\n\t\t)\n\t\tassert(\n\t\t\ttype == Float32Array || type == Uint16Array || type == Uint32Array,\n\t\t\t'type == Float32Array || type == Uint16Array || type == Uint32Array',\n\t\t)\n\t\tif (Uint16Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_SHORT\n\t\t} else if (Uint32Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_INT\n\t\t}\n\t}\n\n\t/**\n\t * Upload the contents of `data` to the GPU in preparation for rendering. The data must be a list of lists\n\t * where each inner list has the same length. For example, each element of data for vertex normals would be a\n\t * list of length three. This will remember the data length and element length for later use by shaders.\n\t *\n\t * This could have used `[].concat.apply([], this.data)` to flatten the array but Google\n\t * Chrome has a maximum number of arguments so the concatenations are chunked to avoid that limit.\n\t *\n\t * @param usage Either `WGL.STATIC_DRAW` or `WGL.DYNAMIC_DRAW`. Defaults to `WGL.STATIC_DRAW`\n\t */\n\tcompile(usage: GL.BufferDataUsage = WGL.STATIC_DRAW, gl: TSGLContext = currentGL()): void {\n\t\tassert(\n\t\t\tWGL.STATIC_DRAW == usage || WGL.DYNAMIC_DRAW == usage,\n\t\t\t'WGL.STATIC_DRAW == type || WGL.DYNAMIC_DRAW == type',\n\t\t)\n\t\tthis.buffer = this.buffer || gl.createBuffer()!\n\t\tlet buffer: Float32Array | Uint16Array | Uint32Array\n\t\tif (this.data.length == 0) {\n\t\t\tconsole.warn('empty buffer ' + this.name)\n\t\t\t//console.trace()\n\t\t}\n\t\tif (this.data.length == 0 || this.data[0] instanceof V3) {\n\t\t\tassert(!(this.data[0] instanceof V3) || this.type == Float32Array)\n\t\t\tV3.pack(this.data, (buffer = new this.type(this.data.length * 3) as Float32Array)) // asserts that all\n\t\t\t// elements are V3s\n\t\t\tthis.spacing = 3\n\t\t\tthis.count = this.data.length\n\t\t\tthis.maxValue = 0\n\t\t} else {\n\t\t\t//assert(Array != this.data[0].constructor, this.name + this.data[0])\n\t\t\tif (Array.isArray(this.data[0])) {\n\t\t\t\tconst bufferLength = this.data.length * this.data[0].length\n\t\t\t\tbuffer = new this.type(bufferLength)\n\t\t\t\tlet i = this.data.length,\n\t\t\t\t\tdestPtr = bufferLength\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst subArray = this.data[i]\n\t\t\t\t\tlet j = subArray.length\n\t\t\t\t\twhile (j--) {\n\t\t\t\t\t\tbuffer[--destPtr] = subArray[j]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(0 == destPtr)\n\t\t\t} else {\n\t\t\t\tbuffer = new this.type(this.data)\n\t\t\t}\n\n\t\t\tconst spacing = this.data.length ? buffer.length / this.data.length : 0\n\t\t\tassert(spacing % 1 == 0, `buffer ${this.name} elements not of consistent size, average size is ` + spacing)\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\tif (10000 <= buffer.length) {\n\t\t\t\t\tthis.maxValue = 0\n\t\t\t\t} else {\n\t\t\t\t\tthis.maxValue = Math.max.apply(undefined, buffer)\n\t\t\t\t}\n\t\t\t}\n\t\t\tassert([1, 2, 3, 4].includes(spacing))\n\t\t\tthis.spacing = spacing as 1 | 2 | 3 | 4\n\t\t\tthis.count = this.data.length\n\t\t}\n\t\tgl.bindBuffer(this.target, this.buffer)\n\t\tgl.bufferData(this.target, buffer, usage)\n\t\tthis.hasBeenCompiled = true\n\t}\n}\n","import {\r\n\tAABB,\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertVectors,\r\n\teq0,\r\n\tint,\r\n\tlerp,\r\n\tM4,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n\tTransformable,\r\n\tTuple3,\r\n\tV,\r\n\tV3,\r\n} from 'ts3dutils'\r\n\r\nimport { Buffer, currentGL, GL_COLOR, pushQuad, TSGLContext } from './index'\r\n\r\nconst { cos, sin, PI, min, max } = Math\r\n\r\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\r\nimport GL = WebGLRenderingContextStrict\r\n\r\nconst tempM4_1 = new M4()\r\nconst tempM4_2 = new M4()\r\n\r\nexport interface MeshData {\r\n\tnormals: V3[]\r\n\tcoords: [number, number][]\r\n\tcolors: GL_COLOR[]\r\n\tTRIANGLES: int[]\r\n\tLINES: int[]\r\n}\r\nexport type MeshWith<T extends keyof MeshData = never> = Mesh & Pick<MeshData, T>\r\n\r\n/**\r\n * @example new Mesh()\r\n *        .addIndexBuffer('TRIANGLES')\r\n *        .addIndexBuffer('LINES')\r\n *        .addVertexBuffer('normals', 'ts_Normal')\r\n */\r\nexport class Mesh extends Transformable {\r\n\thasBeenCompiled: boolean = false\r\n\tvertexBuffers: { [name: string]: Buffer } = {}\r\n\tindexBuffers: { [name: string]: Buffer } = {}\r\n\r\n\tvertices: V3[]\r\n\tnormals?: V3[]\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.addVertexBuffer('vertices', 'ts_Vertex')\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate area, volume and centroid of the mesh.\r\n\t *\r\n\t * The area is the sum of the areas of the triangles.\r\n\t *\r\n\t * For closed meshes, the volume is the contained volume. If the volume is inside-out, i.e. the face normals point\r\n\t * inwards, the returned value is negative. In general, this calculates the sum of the z-direction shadow volumes\r\n\t * of the triangles. The z-dir shadow volume is the cut-off prism with the triangle projected onto the XY plane as\r\n\t * the base face and the triangle itself as the top face.\r\n\t *\r\n\t * The centroid is the \"mean point of all points inside the volume\". If a uniform density is assumed, this is\r\n\t * equivalent to the center of gravity. In general, this calculates the weighted average of the centroids of all the\r\n\t * triangle shadow volumes.\r\n\t */\r\n\tcalcVolume(this: Mesh & { TRIANGLES: int[] }): { volume: number; centroid: V3; area: number } {\r\n\t\tlet totalVolumeX2 = 0,\r\n\t\t\ttotalCentroidWithZX2 = V3.O,\r\n\t\t\ttotalAreaX2 = 0\r\n\t\tconst triangles = this.TRIANGLES\r\n\t\tconst vertices = this.vertices\r\n\t\tfor (let i = 0; i < triangles.length; i += 3) {\r\n\t\t\tconst ai = triangles[i + 0],\r\n\t\t\t\tbi = triangles[i + 1],\r\n\t\t\t\tci = triangles[i + 2]\r\n\t\t\tconst a = vertices[ai],\r\n\t\t\t\tb = vertices[bi],\r\n\t\t\t\tc = vertices[ci]\r\n\t\t\tconst ab = b.minus(a),\r\n\t\t\t\tac = c.minus(a)\r\n\t\t\tconst normal = ab.cross(ac)\r\n\t\t\t//const centroidZ = (v0.z + v1.z + v2.z) / 3\r\n\t\t\tconst faceCentroid = V3.add(a, b, c).div(3)\r\n\t\t\t//totalVolume += centroidZ * (area === v01.cross(v02).length() / 2) * v01.cross(v02).unit().z\r\n\t\t\ttotalVolumeX2 += faceCentroid.z * normal.z\r\n\t\t\tconst faceAreaX2 = normal.length()\r\n\t\t\ttotalAreaX2 += faceAreaX2\r\n\r\n\t\t\t// NB: the shadow volume centroid does NOT have the same XY coordinates\r\n\t\t\t// as the face centroid.\r\n\t\t\t// calculate the weighted centroid of the shadow volume:\r\n\t\t\t// faceShadowCentroid = INTEGRATE [0; 1] (\r\n\t\t\t//   INTEGRATE [0; 1 - s] (\r\n\t\t\t//     normal.z *\r\n\t\t\t//     ((1 - s - t) a + s b + t c) *\r\n\t\t\t//     ((1 - s - t) a + s b + t c).z\r\n\t\t\t//   ) dt\r\n\t\t\t// ) ds\r\n\t\t\t// = (a (2 a.z + b.z + c.z) + b (a.z + 2 b.z + c.z) + c (a.z + b.z + 2 c.z)) / 24\r\n\t\t\tconst faceShadowCentroid = V3.add(\r\n\t\t\t\ta.times(2 * a.z + b.z + c.z),\r\n\t\t\t\tb.times(a.z + 2 * b.z + c.z),\r\n\t\t\t\tc.times(a.z + b.z + 2 * c.z),\r\n\t\t\t).times(normal.z) // 1/24 factor is done at very end\r\n\t\t\ttotalCentroidWithZX2 = totalCentroidWithZX2.plus(faceShadowCentroid)\r\n\t\t}\r\n\t\t// sumInPlaceTree adds negligible additional accuracy for XY sphere\r\n\t\tconst volume = totalVolumeX2 / 2\r\n\t\treturn {\r\n\t\t\tvolume,\r\n\t\t\tcentroid: eq0(volume) ? V3.O : totalCentroidWithZX2.div(24 * volume).schur(new V3(1, 1, 0.5)),\r\n\t\t\tarea: totalAreaX2 / 2,\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add a new vertex buffer with a list as a property called `name` on this object and map it to\r\n\t * the attribute called `attribute` in all shaders that draw this mesh.\r\n\t * @example new Mesh().addVertexBuffer('coords', 'ts_TexCoord')\r\n\t */\r\n\taddVertexBuffer<K extends string>(name: K, attribute: string): this & { [k in K]: any[] } {\r\n\t\tassert(!this.vertexBuffers[attribute], 'Buffer ' + attribute + ' already exists.')\r\n\t\t//assert(!this[name])\r\n\t\tthis.hasBeenCompiled = false\r\n\t\tassert('string' == typeof name)\r\n\t\tassert('string' == typeof attribute)\r\n\t\tconst buffer = (this.vertexBuffers[attribute] = new Buffer(WGL.ARRAY_BUFFER, Float32Array))\r\n\t\tbuffer.name = name\r\n\t\t;(this as any)[name] = []\r\n\t\treturn this as any\r\n\t}\r\n\r\n\t/**\r\n\t * Add a new index buffer.\r\n\t * @example new Mesh().addIndexBuffer('TRIANGLES')\r\n\t * @example new Mesh().addIndexBuffer('LINES')\r\n\t */\r\n\taddIndexBuffer<K extends string>(\r\n\t\tname: K,\r\n\t\ttype: GL['UNSIGNED_SHORT'] | GL['UNSIGNED_INT'] = WGL.UNSIGNED_SHORT,\r\n\t): this & { [k in K]: int[] } {\r\n\t\tthis.hasBeenCompiled = false\r\n\t\tconst arrayType = WGL.UNSIGNED_SHORT == type ? Uint16Array : Uint32Array\r\n\t\tconst buffer = (this.indexBuffers[name] = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, arrayType))\r\n\t\tbuffer.name = name\r\n\t\t;(this as any)[name] = []\r\n\t\treturn this as any\r\n\t}\r\n\r\n\tconcat(...others: this[]): this {\r\n\t\tconst result = new Mesh() as any\r\n\t\tconst allMeshes = [this as Mesh].concat(others)\r\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\r\n\t\t\tassert(others.every(other => !!other.vertexBuffers[attribute]))\r\n\t\t\tconst bufferName = this.vertexBuffers[attribute].name!\r\n\t\t\tif ('ts_Vertex' !== attribute) {\r\n\t\t\t\tresult.addVertexBuffer(bufferName, attribute)\r\n\t\t\t}\r\n\t\t\tresult[bufferName] = allMeshes.map(mesh => (mesh as any)[bufferName]).concatenated()\r\n\t\t})\r\n\t\tObject.getOwnPropertyNames(this.indexBuffers).forEach(name => {\r\n\t\t\tassert(others.every(other => !!other.indexBuffers[name]))\r\n\t\t\tresult.addIndexBuffer(name, this.indexBuffers[name].bindSize)\r\n\t\t\tconst newIndexBufferData = new Array(allMeshes.reduce((sum, mesh) => sum + (mesh as any)[name].length, 0))\r\n\t\t\tlet ptr = 0\r\n\t\t\tlet startIndex = 0\r\n\t\t\tfor (const mesh of allMeshes) {\r\n\t\t\t\tfor (const index of (mesh as any)[name] as int[]) {\r\n\t\t\t\t\tnewIndexBufferData[ptr++] = startIndex + index\r\n\t\t\t\t}\r\n\t\t\t\tstartIndex += mesh.vertices.length\r\n\t\t\t}\r\n\t\t\tresult[name] = newIndexBufferData\r\n\t\t})\r\n\t\tresult.compile()\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Upload all attached buffers to the GPU in preparation for rendering. This doesn't need to be called every\r\n\t * frame, only needs to be done when the data changes.\r\n\t *\r\n\t * Sets `this.hasBeenCompiled` to true.\r\n\t */\r\n\tcompile(gl: TSGLContext = currentGL()) {\r\n\t\t// figure out shortest vertex buffer to make sure indexBuffers are in bounds\r\n\t\tlet minVertexBufferLength = Infinity // TODO, _minBufferName\r\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\r\n\t\t\tconst buffer = this.vertexBuffers[attribute]\r\n\t\t\tbuffer.data = (this as any)[buffer.name!]\r\n\t\t\tbuffer.compile(undefined, gl)\r\n\t\t\tif ((this as any)[buffer.name!].length < minVertexBufferLength) {\r\n\t\t\t\t// _minBufferName = attribute\r\n\t\t\t\tminVertexBufferLength = (this as any)[buffer.name!].length\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tfor (const name in this.indexBuffers) {\r\n\t\t\tconst buffer = this.indexBuffers[name]\r\n\t\t\tbuffer.data = (this as any)[buffer.name!]\r\n\t\t\tbuffer.compile(undefined, gl)\r\n\t\t\t// if (NLA_DEBUG && buffer.maxValue >= minVertexBufferLength) {\r\n\t\t\t// \tthrow new Error(`max index value for buffer ${name}\r\n\t\t\t// \tis too large ${buffer.maxValue} min Vbuffer size: ${minVertexBufferLength} ${minBufferName}`)\r\n\t\t\t// }\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = true\r\n\t\treturn this\r\n\t}\r\n\r\n\tstatic async fromBinarySTL(stl: Blob) {\r\n\t\treturn new Promise<Mesh & { normals: V3[] }>((resolve, reject) => {\r\n\t\t\tconst mesh = new Mesh().addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\tconst fileReader = new FileReader()\r\n\t\t\tfileReader.onerror = reject\r\n\t\t\tfileReader.onload = function(_progressEvent) {\r\n\t\t\t\tconst dataView = new DataView(this.result as ArrayBuffer)\r\n\t\t\t\tconst HEADER_BYTE_SIZE = 80\r\n\t\t\t\tconst triangleCount = dataView.getUint32(HEADER_BYTE_SIZE, true)\r\n\t\t\t\tmesh.normals.length = triangleCount * 3\r\n\t\t\t\tmesh.vertices.length = triangleCount * 3\r\n\t\t\t\tlet i = triangleCount * 3,\r\n\t\t\t\t\tbufferPtr = HEADER_BYTE_SIZE + 4\r\n\r\n\t\t\t\tfunction readV3() {\r\n\t\t\t\t\tconst x = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\tconst y = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\tconst z = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\treturn new V3(x, y, z)\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (i) {\r\n\t\t\t\t\ti -= 3\r\n\t\t\t\t\tconst normal = readV3()\r\n\t\t\t\t\tmesh.normals[i + 0] = normal\r\n\t\t\t\t\tmesh.normals[i + 1] = normal\r\n\t\t\t\t\tmesh.normals[i + 2] = normal\r\n\t\t\t\t\tmesh.vertices[i + 0] = readV3()\r\n\t\t\t\t\tmesh.vertices[i + 1] = readV3()\r\n\t\t\t\t\tmesh.vertices[i + 2] = readV3()\r\n\r\n\t\t\t\t\tbufferPtr += 2\r\n\t\t\t\t}\r\n\t\t\t\tresolve(mesh)\r\n\t\t\t}\r\n\t\t\tfileReader.readAsArrayBuffer(stl)\r\n\t\t})\r\n\t}\r\n\r\n\ttoBinarySTL(this: Mesh & { TRIANGLES: number[] }): Blob {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tconst HEADER_BYTE_SIZE = 80,\r\n\t\t\tFLOAT_BYTE_SIZE = 4\r\n\t\tconst triangles = this.TRIANGLES\r\n\t\tconst triangleCount = triangles.length / 3\r\n\t\tconst buffer = new ArrayBuffer(HEADER_BYTE_SIZE + 4 + triangleCount * (4 * 3 * FLOAT_BYTE_SIZE + 2))\r\n\t\tconst dataView = new DataView(buffer)\r\n\t\tdataView.setUint32(HEADER_BYTE_SIZE, triangleCount, true)\r\n\t\tlet bufferPtr = HEADER_BYTE_SIZE + 4\r\n\t\tlet i = triangles.length\r\n\t\twhile (i) {\r\n\t\t\ti -= 3\r\n\t\t\tconst a = this.vertices[triangles[i]],\r\n\t\t\t\tb = this.vertices[triangles[i + 1]],\r\n\t\t\t\tc = this.vertices[triangles[i + 2]]\r\n\t\t\tconst normal = V3.normalOnPoints(a, b, c)\r\n\t\t\t;[normal, a, b, c].forEach(v => {\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.x, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.y, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.z, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t})\r\n\t\t\t// skip 2 bytes, already initalized to zero\r\n\t\t\tbufferPtr += 2\r\n\t\t}\r\n\t\tassert(bufferPtr == buffer.byteLength, bufferPtr + ' ' + buffer.byteLength)\r\n\t\treturn new Blob([buffer], { type: 'application/octet-stream' })\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Mesh with transformed vertices.\r\n\t *\r\n\t * Transform all vertices by `matrix` and all normals by the inverse transpose of `matrix`.\r\n\t *\r\n\t * Index buffer data is referenced.\r\n\t */\r\n\ttransform(m4: M4): this {\r\n\t\tconst mesh = new Mesh()\r\n\t\tmesh.vertices = m4.transformedPoints(this.vertices)\r\n\t\tif (this.normals) {\r\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\tconst invTrans = m4\r\n\t\t\t\t.as3x3(tempM4_1)\r\n\t\t\t\t.inversed(tempM4_2)\r\n\t\t\t\t.transposed(tempM4_1)\r\n\t\t\tmesh.normals = this.normals.map(n => invTrans.transformVector(n).unit())\r\n\t\t\t// mesh.normals.forEach(n => assert(n.hasLength(1)))\r\n\t\t}\r\n\t\tfor (const name in this.indexBuffers) {\r\n\t\t\tmesh.addIndexBuffer(name)\r\n\t\t\t;(mesh as any)[name] = (this as any)[name]\r\n\t\t}\r\n\t\tfor (const attribute in this.vertexBuffers) {\r\n\t\t\tif ('ts_Vertex' !== attribute && 'ts_Normal' !== attribute) {\r\n\t\t\t\tconst name = this.vertexBuffers[attribute].name!\r\n\t\t\t\tmesh.addVertexBuffer(name, attribute)\r\n\t\t\t\t;(mesh as any)[name] = (this as any)[name]\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.hasBeenCompiled && mesh.compile()\r\n\t\treturn mesh as this\r\n\t}\r\n\r\n\t/**\r\n\t * Computes a new normal for each vertex from the average normal of the neighboring triangles. This means\r\n\t * adjacent triangles must share vertices for the resulting normals to be smooth.\r\n\t */\r\n\tcomputeNormalsFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { normals: V3[] } {\r\n\t\tif (!this.normals) this.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t// tslint:disable:no-string-literal\r\n\t\t//this.vertexBuffers['ts_Normal'].data = arrayFromFunction(this.vertices.length, i => V3.O)\r\n\r\n\t\tconst TRIANGLES = this.TRIANGLES,\r\n\t\t\tvertices = this.vertices,\r\n\t\t\tnormals = this.normals!\r\n\t\tnormals.length = vertices.length\r\n\t\tfor (let i = 0; i < TRIANGLES.length; i += 3) {\r\n\t\t\tconst ai = TRIANGLES[i],\r\n\t\t\t\tbi = TRIANGLES[i + 1],\r\n\t\t\t\tci = TRIANGLES[i + 2]\r\n\t\t\tconst a = vertices[ai]\r\n\t\t\tconst b = vertices[bi]\r\n\t\t\tconst c = vertices[ci]\r\n\t\t\tconst normal = b\r\n\t\t\t\t.minus(a)\r\n\t\t\t\t.cross(c.minus(a))\r\n\t\t\t\t.unit()\r\n\t\t\tnormals[ai] = normals[ai].plus(normal)\r\n\t\t\tnormals[bi] = normals[bi].plus(normal)\r\n\t\t\tnormals[ci] = normals[ci].plus(normal)\r\n\t\t}\r\n\t\tfor (let i = 0; i < vertices.length; i++) {\r\n\t\t\tnormals[i] = normals[i].unit()\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this as any\r\n\t}\r\n\r\n\t/**\r\n\t * Populate the specified index buffer (default 'LINES') from the `triangles` index buffer.\r\n\t */\r\n\tcomputeWireframeFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\r\n\tcomputeWireframeFromFlatTriangles<T extends string>(\r\n\t\tthis: Mesh & { TRIANGLES: int[] },\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeWireframeFromFlatTriangles(this: any, indexBufferName: string = 'LINES'): this {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tconst canonEdges = new Set()\r\n\r\n\t\tfunction canonEdge(i0: int, i1: int) {\r\n\t\t\tconst iMin = min(i0, i1),\r\n\t\t\t\tiMax = max(i0, i1)\r\n\t\t\treturn (iMin << 16) | iMax\r\n\t\t}\r\n\r\n\t\t// function uncanonEdge(key) {\r\n\t\t// \treturn [key >> 16, key & 0xffff]\r\n\t\t// }\r\n\t\tconst t = this.TRIANGLES\r\n\t\tfor (let i = 0; i < t.length; i += 3) {\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 0], t[i + 1]))\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 1], t[i + 2]))\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 2], t[i + 0]))\r\n\t\t}\r\n\t\tconst data = indexBufferName\r\n\t\tif (!this[data]) this.addIndexBuffer(indexBufferName)\r\n\t\t//this.LINES = new Array(canonEdges.size)\r\n\t\tcanonEdges.forEach(val => this[data].push(val >> 16, val & 0xffff))\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh<T extends string>(\r\n\t\tthis: Mesh & { TRIANGLES: int[] },\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: any, indexBufferName: string = 'LINES'): this {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tif (!this.LINES) this.addIndexBuffer('LINES')\r\n\t\tconst tris = this.TRIANGLES\r\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\r\n\t\tconst lines = this[indexBufferName]\r\n\t\tfor (let i = 0; i < tris.length; i += 3) {\r\n\t\t\tif (tris[i + 0] < tris[i + 1]) lines.push(tris[i + 0], tris[i + 1])\r\n\t\t\tif (tris[i + 1] < tris[i + 2]) lines.push(tris[i + 1], tris[i + 2])\r\n\t\t\tif (tris[i + 2] < tris[i + 0]) lines.push(tris[i + 2], tris[i + 0])\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tcomputeNormalLines(this: Mesh & { normals: V3[] }, length: number): this & { LINES: int[] }\r\n\tcomputeNormalLines<T extends string>(\r\n\t\tthis: Mesh & { normals: V3[] },\r\n\t\tlength: number,\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeNormalLines(this: any, length: number = 1, indexBufferName: string = 'LINES') {\r\n\t\tif (!this.normals) {\r\n\t\t\tthrow new Error('normals must be defined.')\r\n\t\t}\r\n\t\tconst vs = this.vertices,\r\n\t\t\tsi = this.vertices.length\r\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\r\n\r\n\t\tfor (let i = 0; i < this.normals.length; i++) {\r\n\t\t\tvs[si + i] = vs[i].plus(this.normals[i].toLength(length))\r\n\t\t\tthis[indexBufferName].push(si + i, i)\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetAABB(): AABB {\r\n\t\treturn new AABB().addPoints(this.vertices)\r\n\t}\r\n\r\n\tgetBoundingSphere(): { center: V3; radius: number } {\r\n\t\tconst sphere = { center: this.getAABB().getCenter(), radius: 0 }\r\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\r\n\t\t\tsphere.radius = Math.max(sphere.radius, this.vertices[i].minus(sphere.center).length())\r\n\t\t}\r\n\t\treturn sphere\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a square mesh in the XY plane.\r\n\t * Texture coordinates (buffer \"coords\") are set to go from 0 to 1 in either direction.\r\n\t *\r\n\t * @param options foo\r\n\t * @param options.detail Defaults to 1\r\n\t * @param options.detailX Defaults to options.detail. Number of subdivisions in X direction.\r\n\t * @param options.detailY Defaults to options.detail. Number of subdivisions in Y direction.j\r\n\t * @param options.width defaults to 1\r\n\t * @param options.height defaults to 1\r\n\t * @param options.startX defaults to 0\r\n\t * @param options.startY defaults to 0\r\n\t */\r\n\tstatic plane(\r\n\t\toptions: {\r\n\t\t\tdetail?: int\r\n\t\t\tdetailX?: int\r\n\t\t\tdetailY?: int\r\n\t\t\twidth?: number\r\n\t\t\theight?: number\r\n\t\t\tstartX?: number\r\n\t\t\tstartY?: number\r\n\t\t} = {},\r\n\t) {\r\n\t\tconst detailX = options.detailX || options.detail || 1\r\n\t\tconst detailY = options.detailY || options.detail || 1\r\n\t\tconst startX = options.startX || 0\r\n\t\tconst startY = options.startY || 0\r\n\t\tconst width = options.width || 1\r\n\t\tconst height = options.height || 1\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\r\n\r\n\t\tfor (let j = 0; j <= detailY; j++) {\r\n\t\t\tconst t = j / detailY\r\n\t\t\tfor (let i = 0; i <= detailX; i++) {\r\n\t\t\t\tconst s = i / detailX\r\n\t\t\t\tmesh.vertices.push(new V3(startX + s * width, startY + t * height, 0))\r\n\t\t\t\tmesh.coords.push([s, t])\r\n\t\t\t\tmesh.normals.push(V3.Z)\r\n\t\t\t\tif (i < detailX && j < detailY) {\r\n\t\t\t\t\tconst offset = i + j * (detailX + 1)\r\n\t\t\t\t\tmesh.TRIANGLES.push(\r\n\t\t\t\t\t\toffset,\r\n\t\t\t\t\t\toffset + detailX + 1,\r\n\t\t\t\t\t\toffset + 1,\r\n\t\t\t\t\t\toffset + detailX + 1,\r\n\t\t\t\t\t\toffset + detailX + 2,\r\n\t\t\t\t\t\toffset + 1,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < detailX; i++) {\r\n\t\t\tmesh.LINES.push(i, i + 1)\r\n\t\t\tmesh.LINES.push((detailX + 1) * detailY + i, (detailX + 1) * detailY + i + 1)\r\n\t\t}\r\n\t\tfor (let j = 0; j < detailY; j++) {\r\n\t\t\tmesh.LINES.push(detailX * j, detailX * (j + 1) + 1)\r\n\t\t\tmesh.LINES.push(detailX * (j + 1), detailX * (j + 2) + 1)\r\n\t\t}\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t// unique corners of a unit cube. Used by Mesh.cube to generate a cube mesh.\r\n\tstatic UNIT_CUBE_CORNERS = [\r\n\t\tV3.O,\r\n\t\tnew V3(0, 0, 1),\r\n\t\tnew V3(0, 1, 0),\r\n\t\tnew V3(0, 1, 1),\r\n\r\n\t\tnew V3(1, 0, 0),\r\n\t\tnew V3(1, 0, 1),\r\n\t\tnew V3(1, 1, 0),\r\n\t\tV3.XYZ,\r\n\t]\r\n\r\n\tstatic box(xDetail: int = 1, yDetail: int = 1, zDetail: int = 1) {\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tmesh.vertices.length = mesh.normals.length =\r\n\t\t\t2 * ((xDetail + 1) * (yDetail + 1) + (yDetail + 1) * (zDetail + 1) + (zDetail + 1) * (xDetail + 1))\r\n\t\tmesh.TRIANGLES.length = 4 * (xDetail * yDetail + yDetail * zDetail + zDetail * xDetail)\r\n\t\tlet vi = 0,\r\n\t\t\tti = 0\r\n\t\tfunction x(detailX: int, detailY: int, m: M4, startX = 0, width = 1, startY = 0, height = 1) {\r\n\t\t\tconst normal = m.transformVector(V3.Z)\r\n\t\t\tfor (let j = 0; j <= detailY; j++) {\r\n\t\t\t\tconst t = j / detailY\r\n\t\t\t\tfor (let i = 0; i <= detailX; i++) {\r\n\t\t\t\t\tconst s = i / detailX\r\n\t\t\t\t\tmesh.vertices[vi] = m.transformPoint(new V3(startX + s * width, startY + t * height, 0))\r\n\t\t\t\t\tmesh.normals[vi] = normal\r\n\t\t\t\t\tvi++\r\n\t\t\t\t\tif (i < detailX && j < detailY) {\r\n\t\t\t\t\t\tconst offset = i + j * (detailX + 1)\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 2\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tx(yDetail, xDetail, M4.forSys(V3.Y, V3.X, V3.Z.negated()))\r\n\t\tx(xDetail, yDetail, M4.translate(V3.Z))\r\n\t\tx(zDetail, yDetail, M4.forSys(V3.Z, V3.Y, V3.X.negated()))\r\n\t\tx(yDetail, zDetail, M4.forSys(V3.Y, V3.Z, V3.X, V3.X))\r\n\t\tx(xDetail, zDetail, M4.forSys(V3.X, V3.Z, V3.Y.negated()))\r\n\t\tx(zDetail, xDetail, M4.forSys(V3.Z, V3.X, V3.Y, V3.Y))\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a unit cube (1x1x1) starting at the origin and extending into the (+ + +) octant.\r\n\t * I.e. box from V3.O to V3(1,1,1)\r\n\t * Creates line (only cube edges), triangle, vertex and normal1 buffers.\r\n\t */\r\n\tstatic cube() {\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addIndexBuffer('LINES')\r\n\r\n\t\t// basically indexes for faces of the cube. vertices each need to be added 3 times,\r\n\t\t// as they have different normals depending on the face being rendered\r\n\t\t// prettier-ignore\r\n\t\tconst VERTEX_CORNERS = [\r\n\t\t\t0, 1, 2, 3, // X = 0\r\n\t\t\t4, 5, 6, 7, // X = 1\r\n\r\n\t\t\t0, 4, 1, 5, // Y = 0\r\n\t\t\t2, 6, 3, 7, // Y = 1\r\n\r\n\t\t\t2, 6, 0, 4, // Z = 0\r\n\t\t\t3, 7, 1, 5, // Z = 1\r\n\t\t]\r\n\t\tmesh.vertices = VERTEX_CORNERS.map(i => Mesh.UNIT_CUBE_CORNERS[i])\r\n\t\tmesh.normals = [V3.X.negated(), V3.X, V3.Y.negated(), V3.Y, V3.Z.negated(), V3.Z].flatMap(v => [v, v, v, v])\r\n\t\tfor (let i = 0; i < 6 * 4; i += 4) {\r\n\t\t\tpushQuad(\r\n\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\t0 != i % 8,\r\n\t\t\t\tVERTEX_CORNERS[i],\r\n\t\t\t\tVERTEX_CORNERS[i + 1],\r\n\t\t\t\tVERTEX_CORNERS[i + 2],\r\n\t\t\t\tVERTEX_CORNERS[i + 3],\r\n\t\t\t)\r\n\t\t}\r\n\t\t// indexes of LINES relative to UNIT_CUBE_CORNERS. Mapped to VERTEX_CORNERS.indexOf\r\n\t\t// so they make sense in the context of the mesh\r\n\t\t// prettier-ignore\r\n\t\tmesh.LINES = [\r\n\t\t\t0, 1,\r\n\t\t\t0, 2,\r\n\t\t\t1, 3,\r\n\t\t\t2, 3,\r\n\r\n\t\t\t0, 4,\r\n\t\t\t1, 5,\r\n\t\t\t2, 6,\r\n\t\t\t3, 7,\r\n\r\n\t\t\t4, 5,\r\n\t\t\t4, 6,\r\n\t\t\t5, 7,\r\n\t\t\t6, 7,\r\n\t\t].map(i => VERTEX_CORNERS.indexOf(i))\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic isocahedron() {\r\n\t\treturn Mesh.sphere(0)\r\n\t}\r\n\r\n\tstatic sphere2(latitudes: int, longitudes: int) {\r\n\t\tconst baseVertices = arrayFromFunction(latitudes, i => {\r\n\t\t\tconst angle = (i / (latitudes - 1)) * PI - PI / 2\r\n\t\t\treturn new V3(0, cos(angle), sin(angle))\r\n\t\t})\r\n\t\treturn Mesh.rotation(baseVertices, { anchor: V3.O, dir1: V3.Z }, 2 * PI, longitudes, true, baseVertices)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a sphere mesh with radius 1 created by subdividing the faces of a isocahedron (20-sided) recursively\r\n\t * The sphere is positioned at the origin\r\n\t * @param subdivisions\r\n\t *      How many recursive divisions to do. A subdivision divides a triangle into 4,\r\n\t *      so the total number of triangles is 20 * 4^subdivisions\r\n\t * @returns\r\n\t *      Contains vertex and normal1 buffers and index buffers for triangles and LINES\r\n\t */\r\n\tstatic sphere(subdivisions: int = 3) {\r\n\t\tconst golden = (1 + Math.sqrt(5)) / 2,\r\n\t\t\tu = new V3(1, golden, 0).unit(),\r\n\t\t\ts = u.x,\r\n\t\t\tt = u.y\r\n\t\t// base vertices of isocahedron\r\n\t\tconst vertices = [\r\n\t\t\tnew V3(-s, t, 0),\r\n\t\t\tnew V3(s, t, 0),\r\n\t\t\tnew V3(-s, -t, 0),\r\n\t\t\tnew V3(s, -t, 0),\r\n\r\n\t\t\tnew V3(0, -s, t),\r\n\t\t\tnew V3(0, s, t),\r\n\t\t\tnew V3(0, -s, -t),\r\n\t\t\tnew V3(0, s, -t),\r\n\r\n\t\t\tnew V3(t, 0, -s),\r\n\t\t\tnew V3(t, 0, s),\r\n\t\t\tnew V3(-t, 0, -s),\r\n\t\t\tnew V3(-t, 0, s),\r\n\t\t]\r\n\t\t// base triangles of isocahedron\r\n\t\t// prettier-ignore\r\n\t\tconst triangles = [\r\n\t\t\t// 5 faces around point 0\r\n\t\t\t0, 11, 5,\r\n\t\t\t0, 5, 1,\r\n\t\t\t0, 1, 7,\r\n\t\t\t0, 7, 10,\r\n\t\t\t0, 10, 11,\r\n\r\n\t\t\t// 5 adjacent faces\r\n\t\t\t1, 5, 9,\r\n\t\t\t5, 11, 4,\r\n\t\t\t11, 10, 2,\r\n\t\t\t10, 7, 6,\r\n\t\t\t7, 1, 8,\r\n\r\n\t\t\t// 5 faces around point 3\r\n\t\t\t3, 9, 4,\r\n\t\t\t3, 4, 2,\r\n\t\t\t3, 2, 6,\r\n\t\t\t3, 6, 8,\r\n\t\t\t3, 8, 9,\r\n\r\n\t\t\t// 5 adjacent faces\r\n\t\t\t4, 9, 5,\r\n\t\t\t2, 4, 11,\r\n\t\t\t6, 2, 10,\r\n\t\t\t8, 6, 7,\r\n\t\t\t9, 8, 1,\r\n\t\t]\r\n\r\n\t\t/**\r\n\t\t * Tesselates triangle a b c\r\n\t\t * a b c must already be in vertices with the indexes ia ib ic\r\n\t\t * res is the number of subdivisions to do. 0 just results in triangle and line indexes being added to the\r\n\t\t * respective buffers.\r\n\t\t */\r\n\t\tfunction tesselateRecursively(\r\n\t\t\ta: V3,\r\n\t\t\tb: V3,\r\n\t\t\tc: V3,\r\n\t\t\tres: int,\r\n\t\t\tvertices: V3[],\r\n\t\t\ttriangles: int[],\r\n\t\t\tia: int,\r\n\t\t\tib: int,\r\n\t\t\tic: int,\r\n\t\t\tlines: int[],\r\n\t\t) {\r\n\t\t\tif (0 == res) {\r\n\t\t\t\ttriangles.push(ia, ib, ic)\r\n\t\t\t\tif (ia < ib) lines.push(ia, ib)\r\n\t\t\t\tif (ib < ic) lines.push(ib, ic)\r\n\t\t\t\tif (ic < ia) lines.push(ic, ia)\r\n\t\t\t} else {\r\n\t\t\t\t// subdivide the triangle abc into 4 by adding a vertex (with the correct distance from the origin)\r\n\t\t\t\t// between each segment ab, bc and cd, then calling the function recursively\r\n\t\t\t\tconst abMid1 = a.plus(b).toLength(1),\r\n\t\t\t\t\tbcMid1 = b.plus(c).toLength(1),\r\n\t\t\t\t\tcaMid1 = c.plus(a).toLength(1)\r\n\t\t\t\t// indexes of new vertices:\r\n\t\t\t\tconst iabm = vertices.length,\r\n\t\t\t\t\tibcm = iabm + 1,\r\n\t\t\t\t\ticam = iabm + 2\r\n\t\t\t\tvertices.push(abMid1, bcMid1, caMid1)\r\n\t\t\t\ttesselateRecursively(abMid1, bcMid1, caMid1, res - 1, vertices, triangles, iabm, ibcm, icam, lines)\r\n\t\t\t\ttesselateRecursively(a, abMid1, caMid1, res - 1, vertices, triangles, ia, iabm, icam, lines)\r\n\t\t\t\ttesselateRecursively(b, bcMid1, abMid1, res - 1, vertices, triangles, ib, ibcm, iabm, lines)\r\n\t\t\t\ttesselateRecursively(c, caMid1, bcMid1, res - 1, vertices, triangles, ic, icam, ibcm, lines)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\tmesh.vertices.push(...vertices)\r\n\t\tsubdivisions = undefined == subdivisions ? 4 : subdivisions\r\n\t\tfor (let i = 0; i < 20; i++) {\r\n\t\t\tconst [ia, ic, ib] = triangles.slice(i * 3, i * 3 + 3)\r\n\t\t\ttesselateRecursively(\r\n\t\t\t\tvertices[ia],\r\n\t\t\t\tvertices[ic],\r\n\t\t\t\tvertices[ib],\r\n\t\t\t\tsubdivisions,\r\n\t\t\t\tmesh.vertices,\r\n\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\tia,\r\n\t\t\t\tic,\r\n\t\t\t\tib,\r\n\t\t\t\tmesh.LINES,\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tmesh.normals = mesh.vertices\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic aabb(aabb: AABB) {\r\n\t\tconst matrix = M4.product(\r\n\t\t\tM4.translate(aabb.min),\r\n\t\t\tM4.scale(aabb.size().max(new V3(NLA_PRECISION, NLA_PRECISION, NLA_PRECISION))),\r\n\t\t)\r\n\t\tconst mesh = Mesh.cube().transform(matrix)\r\n\t\t// mesh.vertices = aabb.corners()\r\n\t\tmesh.computeNormalLines(20)\r\n\t\tmesh.compile()\r\n\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic offsetVertices(\r\n\t\tvertices: V3[],\r\n\t\toffset: V3,\r\n\t\tclose: boolean,\r\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][] }\r\n\tstatic offsetVertices(\r\n\t\tvertices: V3[],\r\n\t\toffset: V3,\r\n\t\tclose: boolean,\r\n\t\tnormals: V3[],\r\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][]; normals: V3[] }\r\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals?: V3[]) {\r\n\t\tassertVectors.apply(undefined, vertices)\r\n\t\tassertVectors(offset)\r\n\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\r\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tmesh.vertices = vertices.concat(vertices.map(v => v.plus(offset)))\r\n\t\tconst vl = vertices.length\r\n\t\tmesh.coords = arrayFromFunction(vl * 2, (i): [number, number] => [(i % vl) / vl, (i / vl) | 0])\r\n\r\n\t\tconst triangles = mesh.TRIANGLES\r\n\t\tfor (let i = 0; i < vertices.length - 1; i++) {\r\n\t\t\tpushQuad(triangles, false, i, i + 1, vertices.length + i, vertices.length + i + 1)\r\n\t\t}\r\n\t\tif (close) {\r\n\t\t\tpushQuad(triangles, false, vertices.length - 1, 0, vertices.length * 2 - 1, vertices.length)\r\n\t\t}\r\n\t\tif (normals) {\r\n\t\t\tmesh.normals = normals.concat(normals)\r\n\t\t}\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t// Creates a new $Mesh by rotating $vertices by $totalRads around $lineAxis (according to the right-hand\r\n\t// rule). $steps is the number of steps to take. $close is whether the vertices of the first and last step\r\n\t// should be connected by triangles. If $normals is set (pass an array of V3s of the same length as $vertices),\r\n\t// these will also be rotated and correctly added to the mesh.\r\n\t// @example const precious = Mesh.rotation([V(10, 0, -2), V(10, 0, 2), V(11, 0, 2), V(11, 0, -2)], , L3.Z, 512)\r\n\tstatic rotation(\r\n\t\tvertices: V3[],\r\n\t\tlineAxis: { anchor: V3; dir1: V3 },\r\n\t\ttotalRads: raddd,\r\n\t\tsteps: int,\r\n\t\tclose = true,\r\n\t\tnormals?: V3[],\r\n\t) {\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES')\r\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tconst vc = vertices.length,\r\n\t\t\tvTotal = vc * steps\r\n\r\n\t\tconst rotMat = new M4()\r\n\t\tconst triangles = mesh.TRIANGLES\r\n\t\tfor (let i = 0; i < steps; i++) {\r\n\t\t\t// add triangles\r\n\t\t\tconst rads = (totalRads / steps) * i\r\n\t\t\tM4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\r\n\t\t\tmesh.vertices.push(...rotMat.transformedPoints(vertices))\r\n\r\n\t\t\tnormals && mesh.normals!.push(...rotMat.transformedVectors(normals))\r\n\t\t\tif (close || i !== steps - 1) {\r\n\t\t\t\tfor (let j = 0; j < vc - 1; j++) {\r\n\t\t\t\t\tpushQuad(\r\n\t\t\t\t\t\ttriangles,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\ti * vc + j + 1,\r\n\t\t\t\t\t\ti * vc + j,\r\n\t\t\t\t\t\t((i + 1) * vc + j + 1) % vTotal,\r\n\t\t\t\t\t\t((i + 1) * vc + j) % vTotal,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: undefined,\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t): Mesh & { TRIANGLES: int[] }\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: ((d: number, z: number) => V3),\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t): Mesh & { normals: V3[]; TRIANGLES: int[] }\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: ((d: number, z: number) => V3) | undefined,\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t) {\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('normals', 'ts_Normal')\r\n\t\tfor (let si = 0; si <= sRes; si++) {\r\n\t\t\tconst s = lerp(sMin, sMax, si / sRes)\r\n\t\t\tfor (let ti = 0; ti <= tRes; ti++) {\r\n\t\t\t\tconst t = lerp(tMin, tMax, ti / tRes)\r\n\t\t\t\tmesh.vertices.push(pF(s, t))\r\n\t\t\t\tpN && mesh.normals.push(pN(s, t))\r\n\t\t\t\tif (ti < tRes && si < sRes) {\r\n\t\t\t\t\tconst offset = ti + si * (tRes + 1)\r\n\t\t\t\t\tpushQuad(mesh.TRIANGLES, false, offset, offset + tRes + 1, offset + 1, offset + tRes + 2)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic load(json: { vertices: Tuple3<number>[]; triangles?: Tuple3<number>[]; normals?: Tuple3<number>[] }) {\r\n\t\tconst mesh = new Mesh()\r\n\t\tif (Array.isArray(json.vertices[0])) {\r\n\t\t\tmesh.vertices = json.vertices.map(x => V(x))\r\n\t\t} else {\r\n\t\t\tthrow new Error()\r\n\t\t}\r\n\t\tif (json.triangles) {\r\n\t\t\tmesh.addIndexBuffer('TRIANGLES')\r\n\t\t\t;(mesh as any).TRIANGLES = json.triangles\r\n\t\t}\r\n\t\tif (json.normals) {\r\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t;(mesh as any).normals = json.normals\r\n\t\t}\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tvertices: this.vertices.map(x => x.toArray()),\r\n\t\t\tTRIANGLES: (this as any).TRIANGLES,\r\n\t\t}\r\n\t}\r\n}\r\n","/* tslint:disable:no-string-literal */\r\nimport { assert, assertf, assertInst, assertVectors, int, M4, NLA_DEBUG, V3 } from 'ts3dutils'\r\n\r\nimport { Buffer, currentGL, GL_COLOR, Mesh, TSGLContext } from './index'\r\n\r\nimport GL = WebGLRenderingContextStrict\r\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\r\n\r\n/**\r\n * These are all the draw modes usable in OpenGL ES\r\n */\r\nconst DRAW_MODE_NAMES = {\r\n\t[WGL.POINTS]: 'POINTS',\r\n\t[WGL.LINES]: 'LINES',\r\n\t[WGL.LINE_STRIP]: 'LINE_STRIP',\r\n\t[WGL.LINE_LOOP]: 'LINE_LOOP',\r\n\t[WGL.TRIANGLES]: 'TRIANGLES',\r\n\t[WGL.TRIANGLE_STRIP]: 'TRIANGLE_STRIP',\r\n\t[WGL.TRIANGLE_FAN]: 'TRIANGLE_FAN',\r\n}\r\nconst DRAW_MODE_CHECKS: { [type: string]: (x: int) => boolean } = {\r\n\t[WGL.POINTS]: _ => true,\r\n\t[WGL.LINES]: x => 0 == x % 2, // divisible by 2\r\n\t[WGL.LINE_STRIP]: x => x > 2, // need at least 2\r\n\t[WGL.LINE_LOOP]: x => x > 2, // more like > 3, but oh well\r\n\t[WGL.TRIANGLES]: x => 0 == x % 3, // divisible by 3\r\n\t[WGL.TRIANGLE_STRIP]: x => x > 3,\r\n\t[WGL.TRIANGLE_FAN]: x => x > 3,\r\n}\r\n\r\nexport const SHADER_VAR_TYPES = [\r\n\t'FLOAT',\r\n\t'FLOAT_MAT2',\r\n\t'FLOAT_MAT3',\r\n\t'FLOAT_MAT4',\r\n\t'FLOAT_VEC2',\r\n\t'FLOAT_VEC3',\r\n\t'FLOAT_VEC4',\r\n\t'INT',\r\n\t'INT_VEC2',\r\n\t'INT_VEC3',\r\n\t'INT_VEC4',\r\n\t'UNSIGNED_INT',\r\n]\r\n\r\nexport function isArray<T>(obj: any): obj is T[] {\r\n\treturn Array == obj.constructor || Float32Array == obj.constructor || Float64Array == obj.constructor\r\n}\r\n\r\nexport interface UniformTypesMap {\r\n\tFLOAT_VEC4: GL_COLOR | V3\r\n\tFLOAT_VEC3: [number, number, number] | V3\r\n\tFLOAT_VEC2: [number, number] | V3\r\n\tFLOAT: number\r\n\tINT: int\r\n\tFLOAT_MAT4: M4 | number[]\r\n\tFLOAT_MAT3: M4 | number[]\r\n\tSAMPLER_2D: int\r\n\tBOOL: boolean\r\n}\r\nexport type UniformTypes = keyof UniformTypesMap\r\n\r\nfunction isFloatArray(obj: any): obj is number[] | Float64Array | Float32Array {\r\n\treturn (\r\n\t\tFloat32Array == obj.constructor ||\r\n\t\tFloat64Array == obj.constructor ||\r\n\t\t(Array.isArray(obj) && obj.every(x => 'number' == typeof x))\r\n\t)\r\n}\r\n\r\nfunction isIntArray(x: any) {\r\n\tif (\r\n\t\t[Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array].some(\r\n\t\t\ty => x instanceof y,\r\n\t\t)\r\n\t) {\r\n\t\treturn true\r\n\t}\r\n\treturn (\r\n\t\t(x instanceof Float32Array || x instanceof Float64Array || Array.isArray(x)) &&\r\n\t\t(x as number[]).every(x => Number.isInteger(x))\r\n\t)\r\n}\r\n\r\nexport type ShaderType<UniformTypes, AttributeTypes = {}> = string & { T?: UniformTypes; A?: AttributeTypes }\r\nexport type VarTypeMap = { [name: string]: UniformTypes }\r\nexport type ShaderSource<\r\n\tU extends VarTypeMap,\r\n\tIN extends VarTypeMap,\r\n\tOUT extends VarTypeMap,\r\n\tkind extends 'vertex' | 'fragment'\r\n> = string & { U: U; IN: IN; OUT: OUT; kind: kind }\r\n\r\n//const x:UniformTypes = undefined as 'FLOAT_VEC4' | 'FLOAT_VEC3'\r\nexport class Shader<UniformTypes extends VarTypeMap = any, AttributeTypes extends VarTypeMap = any> {\r\n\tprogram: WebGLProgram\r\n\tactiveMatrices: { [matrixName: string]: boolean }\r\n\tattributeLocations: { [attributeName: string]: number }\r\n\tconstantAttributes: { [attributeName: string]: boolean }\r\n\tuniformLocations: { [uniformName: string]: WebGLUniformLocation }\r\n\tuniformInfos: { [uniformName: string]: GL.WebGLActiveInfo<GL.UniformType> }\r\n\tprojectionMatrixVersion = -1\r\n\tmodelViewMatrixVersion = -1\r\n\tgl: TSGLContext\r\n\r\n\t/**\r\n\t * Create shader drom typed vertex and fragment source. Weird generic arguments are because\r\n\t * the vertex shader is required to have the OUT types the fragment shader needs as IN,\r\n\t * but not vice-versa.\r\n\t */\r\n\tstatic create<\r\n\t\tFragSrc extends ShaderSource<{}, {}, {}, 'fragment'>,\r\n\t\tVertSrc extends ShaderSource<{}, {}, FragSrc['IN'], 'vertex'>\r\n\t>(\r\n\t\tvertexSource: VertSrc,\r\n\t\tfragmentSource: FragSrc,\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<VertSrc['U'] & FragSrc['U'], VertSrc['IN']>\r\n\t/**\r\n\t * Create shader from typed vertex and untyped fragment source. Uniform of the fragment shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<FU extends VarTypeMap, VertSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\r\n\t\tvertexSource: VertSrc,\r\n\t\tfragmentSource: string & { IN?: undefined },\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<FU & VertSrc['U'], VertSrc['IN']>\r\n\t/**\r\n\t * Create shader from untyped vertex and typed fragment source. Uniform and attribute types of the shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<VU extends VarTypeMap, VA extends VarTypeMap, FragSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\r\n\t\tvertexSource: string & { IN?: undefined },\r\n\t\tfragmentSource: FragSrc,\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<VU & FragSrc['U'], VA>\r\n\t/**\r\n\t * Create shader from untyped vertex and fragment source. Uniform and attribute types of the shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<U extends VarTypeMap = {}, A extends VarTypeMap = {}>(\r\n\t\tvertexSource: string & { IN?: undefined },\r\n\t\tfragmentSource: string & { IN?: undefined },\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<U, A>\r\n\tstatic create(vertexSource: string, fragmentSource: string, gl?: TSGLContext) {\r\n\t\treturn new Shader(vertexSource, fragmentSource, gl) as any\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\r\n\t * prefixed with `gl_`, are automatically added to all shader sources to make\r\n\t * simple shaders easier to write.\r\n\t * Headers for the following variables are automatically prepended to the passed source. The correct variables\r\n\t * are also automatically passed to the shader when drawing.\r\n\t *\r\n\t * For vertex and fragment shaders:\r\n\t uniform mat3 ts_NormalMatrix;\r\n\t uniform mat4 ts_ModelViewMatrix;\r\n\t uniform mat4 ts_ProjectionMatrix;\r\n\t uniform mat4 ts_ModelViewProjectionMatrix;\r\n\t uniform mat4 ts_ModelViewMatrixInverse;\r\n\t uniform mat4 ts_ProjectionMatrixInverse;\r\n\t uniform mat4 ts_ModelViewProjectionMatrixInverse;\r\n\t *\r\n\t *\r\n\t * Example usage:\r\n\t *\r\n\t *  const shader = new GL.Shader(\r\n\t *      `void main() { gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex; }`,\r\n\t *      `uniform vec4 color; void main() { gl_FragColor = color; }`)\r\n\t *\r\n\t *  shader.uniforms({ color: [1, 0, 0, 1] }).draw(mesh)\r\n\t *\r\n\t * Compiles a shader program using the provided vertex and fragment shaders.\r\n\t */\r\n\tprotected constructor(vertexSource: string, fragmentSource: string, gl = currentGL()) {\r\n\t\t// const versionRegex = /^(?:\\s+|\\/\\/[\\s\\S]*?[\\r\\n]+|\\/\\*[\\s\\S]*?\\*\\/)+(#version\\s+(\\d+)\\s+es)/\r\n\t\t// Headers are prepended to the sources to provide some automatic functionality.\r\n\t\tconst header = `\r\n\t\tuniform mat3 ts_NormalMatrix;\r\n\t\tuniform mat4 ts_ModelViewMatrix;\r\n\t\tuniform mat4 ts_ProjectionMatrix;\r\n\t\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\t\tuniform mat4 ts_ModelViewMatrixInverse;\r\n\t\tuniform mat4 ts_ProjectionMatrixInverse;\r\n\t\tuniform mat4 ts_ModelViewProjectionMatrixInverse;\r\n\t`\r\n\t\tconst matrixNames = header.match(/\\bts_\\w+/g)\r\n\r\n\t\t// Compile and link errors are thrown as strings.\r\n\t\tfunction compileSource(type: GL.ShaderType, source: string) {\r\n\t\t\tconst shader = gl.createShader(type)!\r\n\t\t\tgl.shaderSource(shader, source)\r\n\t\t\tgl.compileShader(shader)\r\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n\t\t\t\tthrow new Error('compile error: ' + gl.getShaderInfoLog(shader))\r\n\t\t\t}\r\n\t\t\treturn shader\r\n\t\t}\r\n\r\n\t\tthis.gl = gl\r\n\t\tthis.program = gl.createProgram()!\r\n\t\tgl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource))\r\n\t\tgl.attachShader(this.program, compileSource(gl.FRAGMENT_SHADER, fragmentSource))\r\n\t\tgl.linkProgram(this.program)\r\n\t\tif (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n\t\t\tthrow new Error('link error: ' + gl.getProgramInfoLog(this.program))\r\n\t\t}\r\n\t\tthis.attributeLocations = {}\r\n\t\tthis.uniformLocations = {}\r\n\t\tthis.constantAttributes = {}\r\n\r\n\t\t// Check for the use of built-in matrices that require expensive matrix\r\n\t\t// multiplications to compute, and record these in `activeMatrices`.\r\n\t\tthis.activeMatrices = {}\r\n\t\tmatrixNames &&\r\n\t\t\tmatrixNames.forEach(name => {\r\n\t\t\t\tif (gl.getUniformLocation(this.program, name)) {\r\n\t\t\t\t\tthis.activeMatrices[name] = true\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tthis.uniformInfos = {}\r\n\t\tfor (let i = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS); i-- > 0; ) {\r\n\t\t\t// see https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveUniform.xml\r\n\t\t\t// this.program has already been checked\r\n\t\t\t// i is in bounds\r\n\t\t\tconst info = gl.getActiveUniform(this.program, i)!\r\n\t\t\tthis.uniformInfos[info.name] = info\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set a uniform for each property of `uniforms`. The correct `viewerGL.uniform*()` method is inferred from the\r\n\t * value types and from the stored uniform sampler flags.\r\n\t */\r\n\tuniforms(uniforms: Partial<{ [K in keyof UniformTypes]: UniformTypesMap[UniformTypes[K]] }>): this {\r\n\t\tconst gl = this.gl\r\n\t\tgl.useProgram(this.program)\r\n\r\n\t\tfor (const name in uniforms) {\r\n\t\t\tconst location = this.uniformLocations[name] || gl.getUniformLocation(this.program, name)\r\n\t\t\t// !location && console.warn(name + ' uniform is not used in shader')\r\n\t\t\tif (!location) continue\r\n\t\t\tthis.uniformLocations[name] = location\r\n\t\t\tlet value: any = uniforms[name] as any\r\n\t\t\tconst info = this.uniformInfos[name]\r\n\t\t\tif (NLA_DEBUG) {\r\n\t\t\t\t// TODO: better errors\r\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\r\n\t\t\t\t\tif (1 == info.size) {\r\n\t\t\t\t\t\tassert(Number.isInteger(value))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tassert(\r\n\t\t\t\t\t\t\tisIntArray(value) && value.length == info.size,\r\n\t\t\t\t\t\t\t'value must be int array if info.size != 1',\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tassert(gl.FLOAT != info.type || ((1 == info.size && 'number' === typeof value) || isFloatArray(value)))\r\n\t\t\t\tassert(\r\n\t\t\t\t\tgl.FLOAT_VEC3 != info.type ||\r\n\t\t\t\t\t\t((1 == info.size && value instanceof V3) ||\r\n\t\t\t\t\t\t\t(Array.isArray(value) && info.size == value.length && assertVectors(...value))),\r\n\t\t\t\t)\r\n\t\t\t\tassert(gl.FLOAT_VEC4 != info.type || 1 != info.size || (isFloatArray(value) && value.length == 4))\r\n\t\t\t\tassert(gl.FLOAT_MAT4 != info.type || value instanceof M4, () => value.toSource())\r\n\t\t\t\tassert(gl.FLOAT_MAT3 != info.type || value.length == 9 || value instanceof M4)\r\n\t\t\t}\r\n\t\t\tif (value instanceof V3) {\r\n\t\t\t\tvalue = value.toArray()\r\n\t\t\t}\r\n\t\t\tif (gl.FLOAT_VEC4 == info.type && info.size != 1) {\r\n\t\t\t\tif (value instanceof Float32Array || value instanceof Float64Array) {\r\n\t\t\t\t\tgl.uniform4fv(location, value instanceof Float32Array ? value : Float32Array.from(value))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.uniform4fv(location, value.concatenated())\r\n\t\t\t\t}\r\n\t\t\t} else if (gl.FLOAT == info.type && info.size != 1) {\r\n\t\t\t\tgl.uniform1fv(location, value)\r\n\t\t\t} else if (gl.FLOAT_VEC3 == info.type && info.size != 1) {\r\n\t\t\t\tgl.uniform3fv(location, V3.pack(value))\r\n\t\t\t} else if (value.length) {\r\n\t\t\t\tswitch (value.length) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tgl.uniform1fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tgl.uniform2fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tgl.uniform3fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tgl.uniform4fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t// Matrices are automatically transposed, since WebGL uses column-major\r\n\t\t\t\t\t// indices instead of row-major indices.\r\n\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\t\tgl.uniformMatrix3fv(location, false, new Float32Array([\r\n\t\t\t\t\t\t\tvalue[0], value[3], value[6],\r\n\t\t\t\t\t\t\tvalue[1], value[4], value[7],\r\n\t\t\t\t\t\t\tvalue[2], value[5], value[8],\r\n\t\t\t\t\t\t]))\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 16:\r\n\t\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\t\tgl.uniformMatrix4fv(location, false, new Float32Array([\r\n\t\t\t\t\t\t\tvalue[0], value[4], value[8], value[12],\r\n\t\t\t\t\t\t\tvalue[1], value[5], value[9], value[13],\r\n\t\t\t\t\t\t\tvalue[2], value[6], value[10], value[14],\r\n\t\t\t\t\t\t\tvalue[3], value[7], value[11], value[15],\r\n\t\t\t\t\t\t]))\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error('don\\'t know how to load uniform \"' + name + '\" of length ' + value.length)\r\n\t\t\t\t}\r\n\t\t\t} else if ('number' == typeof value) {\r\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\r\n\t\t\t\t\tgl.uniform1i(location, value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.uniform1f(location, value)\r\n\t\t\t\t}\r\n\t\t\t} else if ('boolean' == typeof value) {\r\n\t\t\t\tgl.uniform1i(location, +value)\r\n\t\t\t} else if (value instanceof M4) {\r\n\t\t\t\tconst m = value.m\r\n\t\t\t\tif (gl.FLOAT_MAT4 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix4fv(location, false, [\r\n\t\t\t\t\t\tm[0], m[4], m[8], m[12],\r\n\t\t\t\t\t\tm[1], m[5], m[9], m[13],\r\n\t\t\t\t\t\tm[2], m[6], m[10], m[14],\r\n\t\t\t\t\t\tm[3], m[7], m[11], m[15]])\r\n\t\t\t\t} else if (gl.FLOAT_MAT3 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix3fv(location, false, [\r\n\t\t\t\t\t\tm[0], m[4], m[8],\r\n\t\t\t\t\t\tm[1], m[5], m[9],\r\n\t\t\t\t\t\tm[2], m[6], m[10]])\r\n\t\t\t\t} else if (gl.FLOAT_MAT2 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix2fv(location, false, new Float32Array([\r\n\t\t\t\t\t\tm[0], m[4],\r\n\t\t\t\t\t\tm[1], m[5]]))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(`Can't assign M4 to ${info.type}`)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('attempted to set uniform \"' + name + '\" to invalid value ' + value)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tattributes(attributes: Partial<{ [K in keyof AttributeTypes]: UniformTypesMap[AttributeTypes[K]] }>): this {\r\n\t\tconst gl = this.gl\r\n\t\tgl.useProgram(this.program)\r\n\r\n\t\tfor (const name in attributes) {\r\n\t\t\tconst location = this.attributeLocations[name] || gl.getAttribLocation(this.program, name)\r\n\t\t\tif (location == -1) {\r\n\t\t\t\tif (!name.startsWith('ts_')) {\r\n\t\t\t\t\tconsole.warn(`Vertex buffer ${name} was not bound because the attribute is not active.`)\r\n\t\t\t\t}\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.attributeLocations[name] = location\r\n\t\t\tgl.disableVertexAttribArray(location)\r\n\t\t\tlet value = attributes[name]\r\n\t\t\tif (value instanceof V3) {\r\n\t\t\t\t// TODO: figure out the types here...\r\n\t\t\t\tvalue = value.toArray() as any\r\n\t\t\t}\r\n\t\t\tif ('number' === typeof value) {\r\n\t\t\t\tgl.vertexAttrib1f(location, value)\r\n\t\t\t} else {\r\n\t\t\t\tgl.vertexAttrib4fv(location, value as number[])\r\n\t\t\t\t// switch ((value as number[]).length) {\r\n\t\t\t\t// \tcase 1:\r\n\t\t\t\t// \t\tgl.vertexAttrib1fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 2:\r\n\t\t\t\t// \t\tgl.vertexAttrib2fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 3:\r\n\t\t\t\t// \t\tgl.vertexAttrib3fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 4:\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\tthis.constantAttributes[name] = true\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the mesh geometry as indexed\r\n\t * triangles or indexed LINES. Set `mode` to `gl.LINES` (and either add indices to `LINES` or call\r\n\t * `computeWireframe()`) to draw the mesh in wireframe.\r\n\t *\r\n\t * @param mesh\r\n\t * @param mode Defaults to 'TRIANGLES'. Must be passed as string so the correct index buffer can be\r\n\t *     automatically drawn.\r\n\t * @param start int\r\n\t * @param count int\r\n\t */\r\n\tdraw(mesh: Mesh, mode: GL.DrawMode = WGL.TRIANGLES, start?: int, count?: int): this {\r\n\t\tassert(mesh.hasBeenCompiled, 'mesh.hasBeenCompiled')\r\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\r\n\t\tconst modeName: string = DRAW_MODE_NAMES[mode]\r\n\t\t// assert(mesh.indexBuffers[modeStr], `mesh.indexBuffers[${modeStr}] undefined`)\r\n\t\treturn this.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers[modeName], mode, start, count)\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the\r\n\t * indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\r\n\t * names to `Buffer` objects of type `WGL.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\r\n\t * object of type `WGL.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\r\n\t * like `WGL.TRIANGLES` or `WGL.LINES`. This method automatically creates and caches\r\n\t * vertex attribute pointers for attributes as needed.\r\n\t */\r\n\tdrawBuffers(\r\n\t\tvertexBuffers: { [attributeName: string]: Buffer },\r\n\t\tindexBuffer: Buffer | undefined,\r\n\t\tmode: GL.DrawMode = WGL.TRIANGLES,\r\n\t\tstart: int = 0,\r\n\t\tcount?: int,\r\n\t): this {\r\n\t\tconst gl = this.gl\r\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\r\n\t\tassertf(() => 1 <= Object.keys(vertexBuffers).length)\r\n\t\tObject.keys(vertexBuffers).forEach(key => assertInst(Buffer, vertexBuffers[key]))\r\n\r\n\t\t// Only varruct up the built-in matrices that are active in the shader\r\n\t\tconst on = this.activeMatrices\r\n\t\tconst modelViewMatrixInverse =\r\n\t\t\t(on['ts_ModelViewMatrixInverse'] || on['ts_NormalMatrix']) &&\r\n\t\t\t//&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\r\n\t\t\tgl.modelViewMatrix.inversed()\r\n\t\tconst projectionMatrixInverse =\r\n\t\t\ton['ts_ProjectionMatrixInverse'] &&\r\n\t\t\t//&& this.projectionMatrixVersion != gl.projectionMatrixVersion\r\n\t\t\tgl.projectionMatrix.inversed()\r\n\t\tconst modelViewProjectionMatrix =\r\n\t\t\t(on['ts_ModelViewProjectionMatrix'] || on['ts_ModelViewProjectionMatrixInverse']) &&\r\n\t\t\t//&& (this.projectionMatrixVersion != gl.projectionMatrixVersion || this.modelViewMatrixVersion !=\r\n\t\t\t// gl.modelViewMatrixVersion)\r\n\t\t\tgl.projectionMatrix.times(gl.modelViewMatrix)\r\n\r\n\t\tconst uni: { [matrixName: string]: M4 } = {} // Uniform Matrices\r\n\t\ton['ts_ModelViewMatrix'] &&\r\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\r\n\t\t\t(uni['ts_ModelViewMatrix'] = gl.modelViewMatrix)\r\n\t\ton['ts_ModelViewMatrixInverse'] && (uni['ts_ModelViewMatrixInverse'] = modelViewMatrixInverse as M4)\r\n\t\ton['ts_ProjectionMatrix'] &&\r\n\t\t\tthis.projectionMatrixVersion != gl.projectionMatrixVersion &&\r\n\t\t\t(uni['ts_ProjectionMatrix'] = gl.projectionMatrix)\r\n\t\tprojectionMatrixInverse && (uni['ts_ProjectionMatrixInverse'] = projectionMatrixInverse)\r\n\t\tmodelViewProjectionMatrix && (uni['ts_ModelViewProjectionMatrix'] = modelViewProjectionMatrix)\r\n\t\tmodelViewProjectionMatrix &&\r\n\t\t\ton['ts_ModelViewProjectionMatrixInverse'] &&\r\n\t\t\t(uni['ts_ModelViewProjectionMatrixInverse'] = modelViewProjectionMatrix.inversed())\r\n\t\ton['ts_NormalMatrix'] &&\r\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\r\n\t\t\t(uni['ts_NormalMatrix'] = (modelViewMatrixInverse as M4).transposed())\r\n\t\tthis.uniforms(uni as any)\r\n\t\tthis.projectionMatrixVersion = gl.projectionMatrixVersion\r\n\t\tthis.modelViewMatrixVersion = gl.modelViewMatrixVersion\r\n\r\n\t\t// Create and enable attribute pointers as necessary.\r\n\t\tlet minVertexBufferLength = Infinity\r\n\t\tfor (const attribute in vertexBuffers) {\r\n\t\t\tconst buffer = vertexBuffers[attribute]\r\n\t\t\tassert(buffer.hasBeenCompiled)\r\n\t\t\tconst location = this.attributeLocations[attribute] || gl.getAttribLocation(this.program, attribute)\r\n\t\t\tif (location == -1 || !buffer.buffer) {\r\n\t\t\t\tif (!attribute.startsWith('ts_')) {\r\n\t\t\t\t\tconsole.warn(`Vertex buffer ${attribute} was not bound because the attribute is not active.`)\r\n\t\t\t\t}\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.attributeLocations[attribute] = location\r\n\t\t\tgl.bindBuffer(WGL.ARRAY_BUFFER, buffer.buffer)\r\n\r\n\t\t\tgl.enableVertexAttribArray(location)\r\n\r\n\t\t\tgl.vertexAttribPointer(location, buffer.spacing, WGL.FLOAT, false, 0, 0)\r\n\r\n\t\t\tminVertexBufferLength = Math.min(minVertexBufferLength, buffer.count)\r\n\t\t}\r\n\r\n\t\t// Disable unused attribute pointers.\r\n\t\tfor (const attribute in this.attributeLocations) {\r\n\t\t\tif (!(attribute in vertexBuffers)) {\r\n\t\t\t\tgl.disableVertexAttribArray(this.attributeLocations[attribute])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (NLA_DEBUG) {\r\n\t\t\tconst numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES)\r\n\t\t\tfor (let i = 0; i < numAttribs; ++i) {\r\n\t\t\t\tconst buffer = gl.getVertexAttrib(i, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)\r\n\t\t\t\tif (!buffer) {\r\n\t\t\t\t\tconst info = gl.getActiveAttrib(this.program, i)!\r\n\t\t\t\t\tif (!this.constantAttributes[info.name]) {\r\n\t\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\t'No buffer is bound to attribute ' + info.name + ' and it was not set with .attributes()',\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log('name:', info.name, 'type:', info.type, 'size:', info.size)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Draw the geometry.\r\n\t\tif (minVertexBufferLength) {\r\n\t\t\tif (undefined === count) {\r\n\t\t\t\tcount = indexBuffer ? indexBuffer.count : minVertexBufferLength\r\n\t\t\t}\r\n\t\t\tassert(\r\n\t\t\t\tDRAW_MODE_CHECKS[mode](count),\r\n\t\t\t\t'count ' +\r\n\t\t\t\t\tcount +\r\n\t\t\t\t\t\"doesn't fulfill requirement +\" +\r\n\t\t\t\t\tDRAW_MODE_CHECKS[mode].toString() +\r\n\t\t\t\t\t' for mode ' +\r\n\t\t\t\t\tDRAW_MODE_NAMES[mode],\r\n\t\t\t)\r\n\r\n\t\t\tif (indexBuffer) {\r\n\t\t\t\tassert(indexBuffer.hasBeenCompiled)\r\n\t\t\t\tassert(minVertexBufferLength > indexBuffer.maxValue!)\r\n\t\t\t\tassert(count % indexBuffer.spacing == 0)\r\n\t\t\t\tassert(start % indexBuffer.spacing == 0)\r\n\t\t\t\tif (start + count > indexBuffer.count) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Buffer not long enough for passed parameters start/length/buffer length ' +\r\n\t\t\t\t\t\t\tstart +\r\n\t\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\t\tcount +\r\n\t\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\t\tindexBuffer.count,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tgl.bindBuffer(WGL.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer!)\r\n\t\t\t\t// start parameter has to be multiple of sizeof(WGL.UNSIGNED_SHORT)\r\n\t\t\t\tgl.drawElements(mode, count, indexBuffer.bindSize, indexBuffer.type.BYTES_PER_ELEMENT * start)\r\n\t\t\t} else {\r\n\t\t\t\tif (start + count > minVertexBufferLength) {\r\n\t\t\t\t\tthrow new Error('invalid')\r\n\t\t\t\t}\r\n\t\t\t\tgl.drawArrays(mode, start, count)\r\n\t\t\t}\r\n\t\t\tgl.drawCallCount++\r\n\t\t}\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n","import { assert, int } from 'ts3dutils'\r\n\r\nimport { currentGL, TSGLContext } from './index'\r\nimport GL = WebGLRenderingContextStrict\r\nimport GL2 = WebGL2RenderingContext\r\n\r\nexport interface TextureOptions {\r\n\twrap?: GL.TextureWrap // defaults to WGL.CLAMP_TO_EDGE, or set wrapS and wrapT individually.\r\n\twrapS?: GL.TextureWrap\r\n\twrapT?: GL.TextureWrap\r\n\tfilter?: GL.TextureMagFilter // defaults to WGL.LINEAR, or set minFilter and magFilter individually.\r\n\tminFilter?: GL.TextureMinFilter\r\n\tmagFilter?: GL.TextureMagFilter\r\n\tformat?: GL2.TextureFormat // defaults to WGL.RGBA.\r\n\tinternalFormat?: GL2.TextureInternalFormat\r\n\ttype?: GL.ReadPixelsType // defaults to WGL.UNSIGNED_BYTE.\r\n\tdata?: any\r\n}\r\n\r\nexport class Texture {\r\n\theight: int\r\n\twidth: int\r\n\ttexture: WebGLTexture\r\n\t// e.g. viewerGL.UNSIGNED_BYTE, viewerGL.FLOAT\r\n\tinternalFormat: GL2.TextureInternalFormat\r\n\tformat: GL2.TextureFormat\r\n\t// e.g. viewerGL.RGBA\r\n\ttype: GL.ReadPixelsType\r\n\r\n\t/**\r\n\t * Provides a simple wrapper around WebGL textures that supports render-to-texture.\r\n\t *\r\n\t * The arguments `width` and `height` give the size of the texture in texels.\r\n\t * WebGL texture dimensions must be powers of two unless `filter` is set to\r\n\t * either `WGL.NEAREST` or `WGL.LINEAR` and `wrap` is set to `WGL.CLAMP_TO_EDGE`\r\n\t * (which they are by default).\r\n\t *\r\n\t * Texture parameters can be passed in via the `options` argument.\r\n\t * Example usage:\r\n\t *\r\n\t *      let tex = new GL.Texture(256, 256, {\r\n\t *       magFilter: WGL.NEAREST,\r\n\t *       minFilter: WGL.LINEAR,\r\n\t *\r\n\t *       wrapS: WGL.REPEAT,\r\n\t *       wrapT: WGL.REPEAT,\r\n\t *\r\n\t *       format: WGL.RGB, // Defaults to WGL.RGBA\r\n\t *       type: WGL.FLOAT // Defaults to WGL.UNSIGNED_BYTE\r\n\t *     })\r\n\t *\r\n\t */\r\n\tconstructor(width: int, height: int, options: TextureOptions = {}, readonly gl = currentGL()) {\r\n\t\tthis.width = width\r\n\t\tthis.height = height\r\n\t\tthis.format = options.format || gl.RGBA\r\n\t\tthis.internalFormat = options.internalFormat || gl.RGBA\r\n\t\tthis.type = options.type || gl.UNSIGNED_BYTE\r\n\t\tconst magFilter = options.filter || options.magFilter || gl.LINEAR\r\n\t\tconst minFilter = options.filter || options.minFilter || gl.LINEAR\r\n\t\tif (this.type === gl.FLOAT) {\r\n\t\t\tif (gl.version != 2 && !gl.getExtension('OES_texture_float')) {\r\n\t\t\t\tthrow new Error('OES_texture_float is required but not supported')\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\r\n\t\t\t\t!gl.getExtension('OES_texture_float_linear')\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error('OES_texture_float_linear is required but not supported')\r\n\t\t\t}\r\n\t\t} else if (this.type === gl.HALF_FLOAT_OES) {\r\n\t\t\tif (!gl.getExtension('OES_texture_half_float')) {\r\n\t\t\t\tthrow new Error('OES_texture_half_float is required but not supported')\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\r\n\t\t\t\t!gl.getExtension('OES_texture_half_float_linear')\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error('OES_texture_half_float_linear is required but not supported')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.texture = gl.createTexture()!\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.wrap || options.wrapS || gl.CLAMP_TO_EDGE)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.wrap || options.wrapT || gl.CLAMP_TO_EDGE)\r\n\t\tgl.texImage2D(\r\n\t\t\tgl.TEXTURE_2D,\r\n\t\t\t0,\r\n\t\t\tthis.internalFormat as any,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.type as any,\r\n\t\t\toptions.data,\r\n\t\t)\r\n\t}\r\n\r\n\tsetData(data: ArrayBufferView) {\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\r\n\t\tthis.gl.texImage2D(\r\n\t\t\tthis.gl.TEXTURE_2D,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.width,\r\n\t\t\tthis.height,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.type as any,\r\n\t\t\tdata as any,\r\n\t\t)\r\n\t}\r\n\r\n\tbind(unit: int) {\r\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\r\n\t}\r\n\r\n\tunbind(unit: int) {\r\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, null)\r\n\t}\r\n\r\n\tprivate framebuffer: WebGLFramebuffer | undefined\r\n\tstatic checkerBoardCanvas: HTMLCanvasElement\r\n\r\n\tdrawTo(render: (gl: TSGLContext) => void): void {\r\n\t\tconst gl = this.gl\r\n\t\tconst prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\r\n\t\tif (!this.framebuffer) {\r\n\t\t\t// create a renderbuffer for the depth component\r\n\t\t\tconst prevRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING)\r\n\t\t\tconst depthRenderbuffer = gl.createRenderbuffer()\r\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderbuffer)\r\n\t\t\t// DEPTH_COMPONENT16 is the only depth format\r\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height)\r\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer)\r\n\r\n\t\t\t// create a framebuffer to render to\r\n\t\t\tthis.framebuffer = gl.createFramebuffer()!\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\r\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0)\r\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthRenderbuffer)\r\n\t\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\tthrow new Error('Rendering to this texture is not supported (incomplete this.framebuffer)')\r\n\t\t\t}\r\n\t\t} else if (prevFramebuffer !== this.framebuffer) {\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\r\n\t\t}\r\n\r\n\t\tconst prevViewport = gl.getParameter(gl.VIEWPORT)\r\n\r\n\t\tgl.viewport(0, 0, this.width, this.height)\r\n\t\trender(gl)\r\n\r\n\t\t// restore previous state\r\n\t\tprevFramebuffer !== this.framebuffer && gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\r\n\t\tgl.viewport(prevViewport[0], prevViewport[1], prevViewport[2], prevViewport[3])\r\n\t}\r\n\r\n\tswapWith(other: Texture): void {\r\n\t\tassert(this.gl == other.gl)\r\n\t\tlet temp\r\n\t\ttemp = other.texture\r\n\t\tother.texture = this.texture\r\n\t\tthis.texture = temp\r\n\r\n\t\ttemp = other.width\r\n\t\tother.width = this.width\r\n\t\tthis.width = temp\r\n\r\n\t\ttemp = other.height\r\n\t\tother.height = this.height\r\n\t\tthis.height = temp\r\n\t}\r\n\r\n\t/**\r\n\t * Return a new texture created from `imgElement`, an `<img>` tag.\r\n\t */\r\n\tstatic fromImage(\r\n\t\timgElement: HTMLImageElement | HTMLCanvasElement,\r\n\t\toptions: TextureOptions = {},\r\n\t\tgl: TSGLContext = currentGL(),\r\n\t): Texture {\r\n\t\tconst texture = new Texture(imgElement.width, imgElement.height, options, gl)\r\n\t\ttry {\r\n\t\t\tgl.texImage2D(\r\n\t\t\t\tgl.TEXTURE_2D,\r\n\t\t\t\t0,\r\n\t\t\t\ttexture.format as any,\r\n\t\t\t\ttexture.format as any,\r\n\t\t\t\ttexture.type as any,\r\n\t\t\t\timgElement,\r\n\t\t\t)\r\n\t\t} catch (e) {\r\n\t\t\tif (location.protocol == 'file:') {\r\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (serve this page over \"http://\" instead)')\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t'imgElement not loaded for security reasons (imgElement must originate from the same ' +\r\n\t\t\t\t\t\t'domain as this page or use Cross-Origin Resource Sharing)',\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.minFilter && options.minFilter != gl.NEAREST && options.minFilter != gl.LINEAR) {\r\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D)\r\n\t\t}\r\n\t\treturn texture\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a checkerboard texture that will switch to the correct texture when it loads.\r\n\t */\r\n\tstatic fromURLSwitch(url: string, options?: TextureOptions, gl = currentGL()): Texture {\r\n\t\tTexture.checkerBoardCanvas =\r\n\t\t\tTexture.checkerBoardCanvas ||\r\n\t\t\t(function() {\r\n\t\t\t\tconst c = document.createElement('canvas').getContext('2d')\r\n\t\t\t\tif (!c) throw new Error('Could not create 2d canvas.')\r\n\t\t\t\tc.canvas.width = c.canvas.height = 128\r\n\t\t\t\tfor (let y = 0; y < c.canvas.height; y += 16) {\r\n\t\t\t\t\tfor (let x = 0; x < c.canvas.width; x += 16) {\r\n\t\t\t\t\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\t\t\t\t\tc.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD'\r\n\t\t\t\t\t\tc.fillRect(x, y, 16, 16)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn c.canvas\r\n\t\t\t})()\r\n\t\tconst texture = Texture.fromImage(Texture.checkerBoardCanvas, options)\r\n\t\tconst image = new Image()\r\n\t\timage.onload = () => Texture.fromImage(image, options, gl).swapWith(texture)\r\n\t\t// error event doesn't return a reason. Most likely a 404.\r\n\t\timage.onerror = () => {\r\n\t\t\tthrow new Error('Could not load image ' + image.src + '. 404?')\r\n\t\t}\r\n\t\timage.src = url\r\n\t\treturn texture\r\n\t}\r\n\r\n\tstatic fromURL(url: string, options?: TextureOptions, gl = currentGL()): Promise<Texture> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst image = new Image()\r\n\t\t\timage.onload = () => resolve(Texture.fromImage(image, options, gl))\r\n\t\t\timage.onerror = ev => reject('Could not load image ' + image.src + '. 404?' + ev)\r\n\t\t\timage.src = url\r\n\t\t})\r\n\t}\r\n}\r\n","/*\r\n** Copyright (c) 2012 The Khronos Group Inc.\r\n**\r\n** Permission is hereby granted, free of charge, to any person obtaining a\r\n** copy of this software and/or associated documentation files (the\r\n** 'Materials'), to deal in the Materials without restriction, including\r\n** without limitation the rights to use, copy, modify, merge, publish,\r\n** distribute, sublicense, and/or sell copies of the Materials, and to\r\n** permit persons to whom the Materials are furnished to do so, subject to\r\n** the following conditions:\r\n**\r\n** The above copyright notice and this permission notice shall be included\r\n** in all copies or substantial portions of the Materials.\r\n**\r\n** THE MATERIALS ARE PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\r\n*/\r\n\r\n// tslint:disable\r\nimport GL = WebGLRenderingContextStrict\r\n\r\n// Various functions for helping debug WebGL apps.\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction log(msg: string) {\r\n\tif (window.console && window.console.log) {\r\n\t\twindow.console.log(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Wrapped error logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction error(msg: string) {\r\n\tif (window.console && window.console.error) {\r\n\t\twindow.console.error(msg)\r\n\t} else {\r\n\t\tlog(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Which arguments are enums based on the number of arguments to the function.\r\n * So\r\n *    'texImage2D': {\r\n *       9: { 0:true, 2:true, 6:true, 7:true },\r\n *       6: { 0:true, 2:true, 3:true, 4:true },\r\n *    },\r\n *\r\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\r\n * arguments 3 and 4 are enums\r\n *\r\n * @type {!Object.<number, !Object.<number, string>}\r\n */\r\nconst glValidEnumContexts: {\r\n\t[funcName: string]: { [argCount: number]: { [argIndex: number]: boolean | { enumBitwiseOr: string[] } } }\r\n} = {\r\n\t// Generic setters and getters\r\n\r\n\tenable: { 1: { 0: true } },\r\n\tdisable: { 1: { 0: true } },\r\n\tgetParameter: { 1: { 0: true } },\r\n\r\n\t// Rendering\r\n\r\n\tdrawArrays: { 3: { 0: true } },\r\n\tdrawElements: { 4: { 0: true, 2: true } },\r\n\r\n\t// Shaders\r\n\r\n\tcreateShader: { 1: { 0: true } },\r\n\tgetShaderParameter: { 2: { 1: true } },\r\n\tgetProgramParameter: { 2: { 1: true } },\r\n\tgetShaderPrecisionFormat: { 2: { 0: true, 1: true } },\r\n\r\n\t// Vertex attributes\r\n\r\n\tgetVertexAttrib: { 2: { 1: true } },\r\n\tvertexAttribPointer: { 6: { 2: true } },\r\n\r\n\t// Textures\r\n\r\n\tbindTexture: { 2: { 0: true } },\r\n\tactiveTexture: { 1: { 0: true } },\r\n\tgetTexParameter: { 2: { 0: true, 1: true } },\r\n\ttexParameterf: { 3: { 0: true, 1: true } },\r\n\ttexParameteri: { 3: { 0: true, 1: true, 2: true } },\r\n\t// texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\r\n\tcopyTexImage2D: { 8: { 0: true, 2: true } },\r\n\tcopyTexSubImage2D: { 8: { 0: true } },\r\n\tgenerateMipmap: { 1: { 0: true } },\r\n\t// compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\r\n\r\n\t// Buffer objects\r\n\r\n\tbindBuffer: { 2: { 0: true } },\r\n\t// bufferData and bufferSubData are defined below with WebGL 2 entrypoints\r\n\tgetBufferParameter: { 2: { 0: true, 1: true } },\r\n\r\n\t// Renderbuffers and framebuffers\r\n\r\n\tpixelStorei: { 2: { 0: true, 1: true } },\r\n\t// readPixels is defined below with WebGL 2 entrypoints\r\n\tbindRenderbuffer: { 2: { 0: true } },\r\n\tbindFramebuffer: { 2: { 0: true } },\r\n\tcheckFramebufferStatus: { 1: { 0: true } },\r\n\tframebufferRenderbuffer: { 4: { 0: true, 1: true, 2: true } },\r\n\tframebufferTexture2D: { 5: { 0: true, 1: true, 2: true } },\r\n\tgetFramebufferAttachmentParameter: { 3: { 0: true, 1: true, 2: true } },\r\n\tgetRenderbufferParameter: { 2: { 0: true, 1: true } },\r\n\trenderbufferStorage: { 4: { 0: true, 1: true } },\r\n\r\n\t// Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n\tclear: { 1: { 0: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] } } },\r\n\tdepthFunc: { 1: { 0: true } },\r\n\tblendFunc: { 2: { 0: true, 1: true } },\r\n\tblendFuncSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\tblendEquation: { 1: { 0: true } },\r\n\tblendEquationSeparate: { 2: { 0: true, 1: true } },\r\n\tstencilFunc: { 3: { 0: true } },\r\n\tstencilFuncSeparate: { 4: { 0: true, 1: true } },\r\n\tstencilMaskSeparate: { 2: { 0: true } },\r\n\tstencilOp: { 3: { 0: true, 1: true, 2: true } },\r\n\tstencilOpSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\r\n\t// Culling\r\n\r\n\tcullFace: { 1: { 0: true } },\r\n\tfrontFace: { 1: { 0: true } },\r\n\r\n\t// ANGLE_instanced_arrays extension\r\n\r\n\tdrawArraysInstancedANGLE: { 4: { 0: true } },\r\n\tdrawElementsInstancedANGLE: { 5: { 0: true, 2: true } },\r\n\r\n\t// EXT_blend_minmax extension\r\n\r\n\tblendEquationEXT: { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Buffer objects\r\n\r\n\tbufferData: {\r\n\t\t3: { 0: true, 2: true }, // WebGL 1\r\n\t\t4: { 0: true, 2: true }, // WebGL 2\r\n\t\t5: { 0: true, 2: true }, // WebGL 2\r\n\t},\r\n\tbufferSubData: {\r\n\t\t3: { 0: true }, // WebGL 1\r\n\t\t4: { 0: true }, // WebGL 2\r\n\t\t5: { 0: true }, // WebGL 2\r\n\t},\r\n\tcopyBufferSubData: { 5: { 0: true, 1: true } },\r\n\tgetBufferSubData: { 3: { 0: true }, 4: { 0: true }, 5: { 0: true } },\r\n\r\n\t// WebGL 2 Framebuffer objects\r\n\r\n\tblitFramebuffer: {\r\n\t\t10: { 8: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9: true },\r\n\t},\r\n\tframebufferTextureLayer: { 5: { 0: true, 1: true } },\r\n\tinvalidateFramebuffer: { 2: { 0: true } },\r\n\tinvalidateSubFramebuffer: { 6: { 0: true } },\r\n\treadBuffer: { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Renderbuffer objects\r\n\r\n\tgetInternalformatParameter: { 3: { 0: true, 1: true, 2: true } },\r\n\trenderbufferStorageMultisample: { 5: { 0: true, 2: true } },\r\n\r\n\t// WebGL 2 Texture objects\r\n\r\n\ttexStorage2D: { 5: { 0: true, 2: true } },\r\n\ttexStorage3D: { 6: { 0: true, 2: true } },\r\n\ttexImage2D: {\r\n\t\t9: { 0: true, 2: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t6: { 0: true, 2: true, 3: true, 4: true }, // WebGL 1\r\n\t\t10: { 0: true, 2: true, 6: true, 7: true }, // WebGL 2\r\n\t},\r\n\ttexImage3D: {\r\n\t\t10: { 0: true, 2: true, 7: true, 8: true },\r\n\t\t11: { 0: true, 2: true, 7: true, 8: true },\r\n\t},\r\n\ttexSubImage2D: {\r\n\t\t9: { 0: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t7: { 0: true, 4: true, 5: true }, // WebGL 1\r\n\t\t10: { 0: true, 6: true, 7: true }, // WebGL 2\r\n\t},\r\n\ttexSubImage3D: {\r\n\t\t11: { 0: true, 8: true, 9: true },\r\n\t\t12: { 0: true, 8: true, 9: true },\r\n\t},\r\n\tcopyTexSubImage3D: { 9: { 0: true } },\r\n\tcompressedTexImage2D: {\r\n\t\t7: { 0: true, 2: true }, // WebGL 1 & 2\r\n\t\t8: { 0: true, 2: true }, // WebGL 2\r\n\t\t9: { 0: true, 2: true }, // WebGL 2\r\n\t},\r\n\tcompressedTexImage3D: {\r\n\t\t8: { 0: true, 2: true },\r\n\t\t9: { 0: true, 2: true },\r\n\t\t10: { 0: true, 2: true },\r\n\t},\r\n\tcompressedTexSubImage2D: {\r\n\t\t8: { 0: true, 6: true }, // WebGL 1 & 2\r\n\t\t9: { 0: true, 6: true }, // WebGL 2\r\n\t\t10: { 0: true, 6: true }, // WebGL 2\r\n\t},\r\n\tcompressedTexSubImage3D: {\r\n\t\t10: { 0: true, 8: true },\r\n\t\t11: { 0: true, 8: true },\r\n\t\t12: { 0: true, 8: true },\r\n\t},\r\n\r\n\t// WebGL 2 Vertex attribs\r\n\r\n\tvertexAttribIPointer: { 5: { 2: true } },\r\n\r\n\t// WebGL 2 Writing to the drawing buffer\r\n\r\n\tdrawArraysInstanced: { 4: { 0: true } },\r\n\tdrawElementsInstanced: { 5: { 0: true, 2: true } },\r\n\tdrawRangeElements: { 6: { 0: true, 4: true } },\r\n\r\n\t// WebGL 2 Reading back pixels\r\n\r\n\treadPixels: {\r\n\t\t7: { 4: true, 5: true }, // WebGL 1 & 2\r\n\t\t8: { 4: true, 5: true }, // WebGL 2\r\n\t},\r\n\r\n\t// WebGL 2 Multiple Render Targets\r\n\r\n\tclearBufferfv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferiv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferuiv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferfi: { 4: { 0: true } },\r\n\r\n\t// WebGL 2 Query objects\r\n\r\n\tbeginQuery: { 2: { 0: true } },\r\n\tendQuery: { 1: { 0: true } },\r\n\tgetQuery: { 2: { 0: true, 1: true } },\r\n\tgetQueryParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sampler objects\r\n\r\n\tsamplerParameteri: { 3: { 1: true, 2: true } },\r\n\tsamplerParameterf: { 3: { 1: true } },\r\n\tgetSamplerParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sync objects\r\n\r\n\tfenceSync: { 2: { 0: true, 1: { enumBitwiseOr: [] } } },\r\n\tclientWaitSync: { 3: { 1: { enumBitwiseOr: ['SYNC_FLUSH_COMMANDS_BIT'] } } },\r\n\twaitSync: { 3: { 1: { enumBitwiseOr: [] } } },\r\n\tgetSyncParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Transform Feedback\r\n\r\n\tbindTransformFeedback: { 2: { 0: true } },\r\n\tbeginTransformFeedback: { 1: { 0: true } },\r\n\ttransformFeedbackVaryings: { 3: { 2: true } },\r\n\r\n\t// WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\r\n\r\n\tbindBufferBase: { 3: { 0: true } },\r\n\tbindBufferRange: { 5: { 0: true } },\r\n\tgetIndexedParameter: { 2: { 0: true } },\r\n\tgetActiveUniforms: { 3: { 2: true } },\r\n\tgetActiveUniformBlockParameter: { 3: { 2: true } },\r\n}\r\n\r\n/**\r\n * Map of numbers to names.\r\n * @type {Object}\r\n */\r\nlet glEnums: { [k: number]: string } = null as any\r\n\r\n/**\r\n * Map of names to numbers.\r\n * @type {Object}\r\n */\r\nlet enumStringToValue: { [k: string]: GL.GLenum<string> } = null as any\r\n\r\n/**\r\n * Initializes this module. Safe to call more than once.\r\n * @param ctx A WebGL context. If\r\n *    you have more than one context it doesn't matter which one\r\n *    you pass in, it is only used to pull out constants.\r\n */\r\nexport function init() {\r\n\tif (null === glEnums) {\r\n\t\tglEnums = {}\r\n\t\tenumStringToValue = {}\r\n\t\tconst c = (window as any).WebGL2RenderingContext || (window as any).WebGLRenderingContext\r\n\t\tif (!c) throw new Error('Neither WebGL2RenderingContext nor WebGLRenderingContext exists on window.')\r\n\t\tfor (const propertyName in c) {\r\n\t\t\tconst prop = c[propertyName]\r\n\t\t\tif ('number' === typeof prop) {\r\n\t\t\t\tglEnums[prop] = propertyName\r\n\t\t\t\tenumStringToValue[propertyName] = prop as any\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns true or false if value matches any WebGL enum\r\n * @param value Value to check if it might be an enum.\r\n * @return True if value matches one of the WebGL defined enums\r\n */\r\nexport function mightBeEnum(value: number): boolean {\r\n\tinit()\r\n\treturn glEnums[value] !== undefined\r\n}\r\n\r\n/**\r\n * Gets an string version of an WebGL enum.\r\n *\r\n * Example:\r\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError())\r\n *\r\n * @param value Value to return an enum for\r\n * @return The string version of the enum.\r\n */\r\nexport function glEnumToString(value: GL.GLenum<string>): string {\r\n\tinit()\r\n\tvar name = glEnums[value as any]\r\n\treturn name !== undefined ? 'gl.' + name : '/*UNKNOWN WebGL ENUM*/ 0x' + (value as any).toString(16) + ''\r\n}\r\n\r\n/**\r\n * Converts the argument of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * Example:\r\n *   WebGLDebugUtil.init(ctx)\r\n *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D)\r\n *\r\n * would return 'TEXTURE_2D'\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param numArgs the number of arguments passed to the function.\r\n * @param argumentIndex the index of the argument.\r\n * @param value The value of the argument.\r\n * @return The value as a string.\r\n */\r\nexport function glFunctionArgToString(\r\n\tfunctionName: string,\r\n\tnumArgs: number,\r\n\targumentIndex: number,\r\n\tvalue: any,\r\n): string {\r\n\tconst funcInfo = glValidEnumContexts[functionName]\r\n\tif (funcInfo !== undefined) {\r\n\t\tconst funcOverloadInfo = funcInfo[numArgs]\r\n\t\tif (funcOverloadInfo !== undefined) {\r\n\t\t\tconst argInfo = funcOverloadInfo[argumentIndex]\r\n\t\t\tif (argInfo) {\r\n\t\t\t\tif (typeof argInfo === 'object') {\r\n\t\t\t\t\tconst enums = argInfo.enumBitwiseOr\r\n\t\t\t\t\tconst orEnums = []\r\n\t\t\t\t\tlet orResult = 0\r\n\t\t\t\t\tfor (let i = 0; i < enums.length; ++i) {\r\n\t\t\t\t\t\tconst enumValue = enumStringToValue[enums[i]]\r\n\t\t\t\t\t\tif ((value & enumValue) !== 0) {\r\n\t\t\t\t\t\t\torResult |= enumValue\r\n\t\t\t\t\t\t\torEnums.push(glEnumToString(enumValue))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (orResult === value) {\r\n\t\t\t\t\t\treturn orEnums.join(' | ')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (value === null) {\r\n\t\treturn 'null'\r\n\t} else if (value === undefined) {\r\n\t\treturn 'undefined'\r\n\t} else {\r\n\t\treturn value.toString()\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts the arguments of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param args The arguments.\r\n * @return The arguments as a string.\r\n */\r\nexport function glFunctionArgsToString(functionName: string, args: number[]): string {\r\n\t// apparently we can't do args.join(',')\r\n\tvar argStr = ''\r\n\tvar numArgs = args.length\r\n\tfor (var ii = 0; ii < numArgs; ++ii) {\r\n\t\targStr += (ii == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, ii, args[ii])\r\n\t}\r\n\treturn argStr\r\n}\r\n\r\nfunction makePropertyWrapper(wrapper: any, original: any, propertyName: string) {\r\n\t//log('wrap prop: ' + propertyName)\r\n\twrapper.__defineGetter__(propertyName, function() {\r\n\t\treturn original[propertyName]\r\n\t})\r\n\t// TODO(gmane): this needs to handle properties that take more than\r\n\t// one value?\r\n\twrapper.__defineSetter__(propertyName, function(value: any) {\r\n\t\t//log('set: ' + propertyName)\r\n\t\toriginal[propertyName] = value\r\n\t})\r\n}\r\n\r\n/**\r\n * Given a WebGL context returns a wrapped context that calls\r\n * gl.getError after every command and calls a function if the\r\n * result is not NO_ERROR.\r\n *\r\n * You can supply your own function if you want. For example, if you'd like\r\n * an exception thrown on any GL error you could do this\r\n *\r\n *    function throwOnGLError(err, funcName, args) {\r\n *      throw new Error(WebGLDebugUtils.glEnumToString(err) +\r\n *            ' was caused by call to ' + funcName)\r\n *    }\r\n *\r\n *    ctx = WebGLDebugUtils.makeDebugContext(\r\n *        canvas.getContext('webgl'), throwOnGLError)\r\n *\r\n * @param ctx The webgl context to wrap.\r\n * @param opt_onErrorFunc The function\r\n *     to call when gl.getError returns an error. If not specified the default\r\n *     function calls console.log with a message.\r\n * @param opt_onFunc The\r\n *     function to call when each webgl function is called. You\r\n *     can use this to log all calls for example.\r\n * @param opt_err_ctx The webgl context\r\n *        to call getError on if different than ctx.\r\n */\r\nexport function makeDebugContext(\r\n\tctx: WebGLRenderingContextStrict,\r\n\topt_onErrorFunc?: (err: GL.Error, funcName: string, args: any[]) => void,\r\n\topt_onFunc?: (funcName: string, args: any[]) => void,\r\n\topt_err_ctx: WebGLRenderingContextStrict = ctx,\r\n): WebGLRenderingContext {\r\n\tinit()\r\n\topt_onErrorFunc =\r\n\t\topt_onErrorFunc ||\r\n\t\tfunction(err, functionName, args) {\r\n\t\t\t// apparently we can't do args.join(',')\r\n\t\t\tvar argStr = ''\r\n\t\t\tvar numArgs = args.length\r\n\t\t\tfor (let i = 0; i < numArgs; ++i) {\r\n\t\t\t\targStr += (i == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, i, args[i])\r\n\t\t\t}\r\n\t\t\terror('WebGL error ' + glEnumToString(err) + ' in ' + functionName + '(' + argStr + ')')\r\n\t\t}\r\n\r\n\t// Holds booleans for each GL error so after we get the error ourselves\r\n\t// we can still return it to the client app.\r\n\tconst glErrorShadow: { [k: number]: boolean } = {}\r\n\r\n\t// Makes a function that calls a WebGL function and then calls getError.\r\n\tfunction makeErrorWrapper(ctx: WebGLRenderingContextStrict, functionName: string) {\r\n\t\treturn function(...args: any[]) {\r\n\t\t\tif (opt_onFunc) {\r\n\t\t\t\topt_onFunc(functionName, args)\r\n\t\t\t}\r\n\t\t\tconst result = (ctx as any)[functionName].apply(ctx, args)\r\n\t\t\tconst err = opt_err_ctx.getError()\r\n\t\t\tif (err != 0) {\r\n\t\t\t\tglErrorShadow[err] = true\r\n\t\t\t\topt_onErrorFunc!(err, functionName, args)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t}\r\n\r\n\t// Make a an object that has a copy of every property of the WebGL context\r\n\t// but wraps all functions.\r\n\tconst wrapper: any = {}\r\n\tfor (let propertyName in ctx) {\r\n\t\tconst prop = ctx[propertyName as keyof WebGLRenderingContextStrict]\r\n\t\tif ('function' === typeof prop) {\r\n\t\t\tif (propertyName != 'getExtension') {\r\n\t\t\t\twrapper[propertyName] = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tlet wrapped = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t\twrapper[propertyName as any] = function() {\r\n\t\t\t\t\tconst result = wrapped.apply(ctx, arguments)\r\n\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmakePropertyWrapper(wrapper, ctx, propertyName)\r\n\t\t}\r\n\t}\r\n\r\n\t// Override the getError function with one that returns our saved results.\r\n\twrapper.getError = function() {\r\n\t\tfor (const err in glErrorShadow) {\r\n\t\t\tif (glErrorShadow.hasOwnProperty(err)) {\r\n\t\t\t\tif (glErrorShadow[err]) {\r\n\t\t\t\t\tglErrorShadow[err] = false\r\n\t\t\t\t\treturn parseInt(err)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ctx.NO_ERROR\r\n\t}\r\n\r\n\treturn wrapper\r\n}\r\nexport function isWebGL2RenderingContext(o: any): o is WebGL2RenderingContext {\r\n\treturn !!o.createTransformFeedback\r\n}\r\n/**\r\n * Resets a context to the initial state.\r\n * @param ctx The webgl context to\r\n *     reset.\r\n */\r\nexport function resetToInitialState(ctx2: WebGL2RenderingContext | WebGLRenderingContextStrict) {\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.bindVertexArray(null)\r\n\t}\r\n\r\n\tconst numAttribs = ctx2.getParameter(ctx2.MAX_VERTEX_ATTRIBS)\r\n\tconst tmp = ctx2.createBuffer()\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, tmp)\r\n\tfor (let ii = 0; ii < numAttribs; ++ii) {\r\n\t\tctx2.disableVertexAttribArray(ii)\r\n\t\tctx2.vertexAttribPointer(ii, 4, ctx2.FLOAT, false, 0, 0)\r\n\t\tctx2.vertexAttrib1f(ii, 0)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.vertexAttribDivisor(ii, 0)\r\n\t\t}\r\n\t}\r\n\tctx2.deleteBuffer(tmp)\r\n\r\n\tconst numTextureUnits = ctx2.getParameter(ctx2.MAX_TEXTURE_IMAGE_UNITS)\r\n\tfor (let ii = 0; ii < numTextureUnits; ++ii) {\r\n\t\tctx2.activeTexture((ctx2.TEXTURE0 + ii) as GL.TextureUnit)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_CUBE_MAP, null)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_2D, null)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_2D_ARRAY, null)\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_3D, null)\r\n\t\t\tctx2.bindSampler(ii, null)\r\n\t\t}\r\n\t}\r\n\r\n\tctx2.activeTexture(ctx2.TEXTURE0)\r\n\tctx2.useProgram(null)\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, null)\r\n\tctx2.bindBuffer(ctx2.ELEMENT_ARRAY_BUFFER, null)\r\n\tctx2.bindFramebuffer(ctx2.FRAMEBUFFER, null)\r\n\tctx2.bindRenderbuffer(ctx2.RENDERBUFFER, null)\r\n\tctx2.disable(ctx2.BLEND)\r\n\tctx2.disable(ctx2.CULL_FACE)\r\n\tctx2.disable(ctx2.DEPTH_TEST)\r\n\tctx2.disable(ctx2.DITHER)\r\n\tctx2.disable(ctx2.SCISSOR_TEST)\r\n\tctx2.blendColor(0, 0, 0, 0)\r\n\tctx2.blendEquation(ctx2.FUNC_ADD)\r\n\tctx2.blendFunc(ctx2.ONE, ctx2.ZERO)\r\n\tctx2.clearColor(0, 0, 0, 0)\r\n\tctx2.clearDepth(1)\r\n\tctx2.clearStencil(-1)\r\n\tctx2.colorMask(true, true, true, true)\r\n\tctx2.cullFace(ctx2.BACK)\r\n\tctx2.depthFunc(ctx2.LESS)\r\n\tctx2.depthMask(true)\r\n\tctx2.depthRange(0, 1)\r\n\tctx2.frontFace(ctx2.CCW)\r\n\tctx2.hint(ctx2.GENERATE_MIPMAP_HINT, ctx2.DONT_CARE)\r\n\tctx2.lineWidth(1)\r\n\tctx2.pixelStorei(ctx2.PACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_FLIP_Y_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx2.BROWSER_DEFAULT_WEBGL)\r\n\tctx2.polygonOffset(0, 0)\r\n\tctx2.sampleCoverage(1, false)\r\n\tctx2.scissor(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.stencilFunc(ctx2.ALWAYS, 0, 0xffffffff)\r\n\tctx2.stencilMask(0xffffffff)\r\n\tctx2.stencilOp(ctx2.KEEP, ctx2.KEEP, ctx2.KEEP)\r\n\tctx2.viewport(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.clear(ctx2.COLOR_BUFFER_BIT | ctx2.DEPTH_BUFFER_BIT | ctx2.STENCIL_BUFFER_BIT)\r\n\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.drawBuffers([ctx2.BACK])\r\n\t\tctx2.readBuffer(ctx2.BACK)\r\n\t\tctx2.bindBuffer(ctx2.COPY_READ_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.COPY_WRITE_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_PACK_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_UNPACK_BUFFER, null)\r\n\t\tconst numTransformFeedbacks = ctx2.getParameter(ctx2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)\r\n\t\tfor (let ii = 0; ii < numTransformFeedbacks; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.TRANSFORM_FEEDBACK_BUFFER, ii, null)\r\n\t\t}\r\n\t\tconst numUBOs = ctx2.getParameter(ctx2.MAX_UNIFORM_BUFFER_BINDINGS)\r\n\t\tfor (let ii = 0; ii < numUBOs; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.UNIFORM_BUFFER, ii, null)\r\n\t\t}\r\n\t\tctx2.disable(ctx2.RASTERIZER_DISCARD)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_IMAGE_HEIGHT, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_IMAGES, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_PIXELS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_PIXELS, 0)\r\n\t\tctx2.hint(ctx2.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx2.DONT_CARE)\r\n\t}\r\n\r\n\t// TODO: This should NOT be needed but Firefox fails with 'hint'\r\n\twhile (ctx2.getError()) {}\r\n}\r\n\r\n/**\r\n * Given a canvas element returns a wrapped canvas element that will\r\n * simulate lost context. The canvas returned adds the following functions.\r\n *\r\n * loseContext:\r\n *   simulates a lost context event.\r\n *\r\n * restoreContext:\r\n *   simulates the context being restored.\r\n *\r\n * lostContextInNCalls:\r\n *   loses the context after N gl calls.\r\n *\r\n * getNumCalls:\r\n *   tells you how many gl calls there have been so far.\r\n *\r\n * setRestoreTimeout:\r\n *   sets the number of milliseconds until the context is restored\r\n *   after it has been lost. Defaults to 0. Pass -1 to prevent\r\n *   automatic restoring.\r\n *\r\n * @param canvas The canvas element to wrap.\r\n */\r\nexport function makeLostContextSimulatingCanvas(canvas: HTMLCanvasElement) {\r\n\tconst canvas2 = canvas as any\r\n\tlet unwrappedContext_: any\r\n\tconst onLost_: WebGLContextEventListener[] = []\r\n\tconst onRestored_: WebGLContextEventListener[] = []\r\n\tlet wrappedContext_: any = {}\r\n\tlet contextId_ = 1\r\n\tlet contextLost_ = false\r\n\t// const resourceId_ = 0\r\n\tconst resourceDb_: WebGLObject[] = []\r\n\tlet numCallsToLoseContext_ = 0\r\n\tlet numCalls_ = 0\r\n\tlet canRestore_ = false\r\n\tlet restoreTimeout_ = 0\r\n\r\n\t// Holds booleans for each GL error so can simulate errors.\r\n\tconst glErrorShadow_: { [e: number]: boolean } = {}\r\n\r\n\tcanvas2.getContext = (function(f) {\r\n\t\treturn function() {\r\n\t\t\tconst ctx = f.apply(canvas2, arguments)\r\n\t\t\t// Did we get a context and is it a WebGL context?\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (\r\n\t\t\t\tctx instanceof WebGLRenderingContext ||\r\n\t\t\t\t// TODO:?\r\n\t\t\t\t((window as any).WebGL2RenderingContext && ctx instanceof WebGL2RenderingContext)\r\n\t\t\t) {\r\n\t\t\t\tif (ctx != unwrappedContext_) {\r\n\t\t\t\t\tif (unwrappedContext_) {\r\n\t\t\t\t\t\tthrow new Error('got different context')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tunwrappedContext_ = ctx\r\n\t\t\t\t\twrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_)\r\n\t\t\t\t}\r\n\t\t\t\treturn wrappedContext_\r\n\t\t\t}\r\n\t\t\treturn ctx\r\n\t\t}\r\n\t})(canvas2.getContext)\r\n\r\n\tfunction wrapEvent(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tif (typeof listener == 'function') {\r\n\t\t\treturn listener\r\n\t\t} else {\r\n\t\t\treturn function(e: CustomWebGLContextEvent) {\r\n\t\t\t\tlistener.handleEvent(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addOnContextLostListener(\r\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\r\n\t) {\r\n\t\tonLost_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction addOnContextRestoredListener(\r\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\r\n\t) {\r\n\t\tonRestored_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction wrapAddEventListener(canvas: HTMLCanvasElement) {\r\n\t\tconst f = canvas.addEventListener\r\n\t\tcanvas.addEventListener = function(type: string, listener: any) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'webglcontextlost':\r\n\t\t\t\t\taddOnContextLostListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'webglcontextrestored':\r\n\t\t\t\t\taddOnContextRestoredListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tf.apply(canvas, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twrapAddEventListener(canvas2)\r\n\r\n\tcanvas2.loseContext = function() {\r\n\t\tif (!contextLost_) {\r\n\t\t\tcontextLost_ = true\r\n\t\t\tnumCallsToLoseContext_ = 0\r\n\t\t\t++contextId_\r\n\t\t\twhile (unwrappedContext_.getError()) clearErrors()\r\n\t\t\tglErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true\r\n\t\t\tconst event = makeWebGLContextEvent('context lost')\r\n\t\t\tconst callbacks = onLost_.slice()\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t//log('numCallbacks:' + callbacks.length)\r\n\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t//log('calling callback:' + ii)\r\n\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t}\r\n\t\t\t\tif (restoreTimeout_ >= 0) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tcanvas2.restoreContext()\r\n\t\t\t\t\t}, restoreTimeout_)\r\n\t\t\t\t}\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.restoreContext = function() {\r\n\t\tif (contextLost_) {\r\n\t\t\tif (onRestored_.length) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tif (!canRestore_) {\r\n\t\t\t\t\t\tthrow new Error('can not restore. webglcontestlost listener did not call event.preventDefault')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfreeResources()\r\n\t\t\t\t\tresetToInitialState(unwrappedContext_)\r\n\t\t\t\t\tcontextLost_ = false\r\n\t\t\t\t\tnumCalls_ = 0\r\n\t\t\t\t\tcanRestore_ = false\r\n\t\t\t\t\tconst callbacks = onRestored_.slice()\r\n\t\t\t\t\tconst event = makeWebGLContextEvent('context restored')\r\n\t\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.loseContextInNCalls = function(numCalls: number) {\r\n\t\tif (contextLost_) {\r\n\t\t\tthrow new Error('You can not ask a lost context to be lost')\r\n\t\t}\r\n\t\tnumCallsToLoseContext_ = numCalls_ + numCalls\r\n\t}\r\n\r\n\tcanvas2.getNumCalls = function() {\r\n\t\treturn numCalls_\r\n\t}\r\n\r\n\tcanvas2.setRestoreTimeout = function(timeout: number) {\r\n\t\trestoreTimeout_ = timeout\r\n\t}\r\n\r\n\tfunction isWebGLObject(obj: any): obj is WebGLObject {\r\n\t\t//return false\r\n\t\treturn (\r\n\t\t\tobj instanceof WebGLBuffer ||\r\n\t\t\tobj instanceof WebGLFramebuffer ||\r\n\t\t\tobj instanceof WebGLProgram ||\r\n\t\t\tobj instanceof WebGLRenderbuffer ||\r\n\t\t\tobj instanceof WebGLShader ||\r\n\t\t\tobj instanceof WebGLTexture\r\n\t\t)\r\n\t}\r\n\r\n\tfunction checkResources(args: any[]) {\r\n\t\tfor (let i = 0; i < args.length; ++i) {\r\n\t\t\tconst arg = args[i]\r\n\t\t\tif (isWebGLObject(arg)) {\r\n\t\t\t\treturn (arg as any).__webglDebugContextLostId__ == contextId_\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tfunction clearErrors() {\r\n\t\tconst k = (Object.keys(glErrorShadow_) as any) as number[]\r\n\t\tfor (let i = 0; i < k.length; ++i) {\r\n\t\t\tdelete glErrorShadow_[k[i]]\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loseContextIfTime() {\r\n\t\t++numCalls_\r\n\t\tif (!contextLost_) {\r\n\t\t\tif (numCallsToLoseContext_ == numCalls_) {\r\n\t\t\t\tcanvas2.loseContext()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Makes a function that simulates WebGL when out of context.\r\n\tfunction makeLostContextFunctionWrapper(ctx: WebGLRenderingContext, functionName: string) {\r\n\t\tconst f = (ctx as any)[functionName]\r\n\t\treturn function() {\r\n\t\t\t// log('calling:' + functionName)\r\n\t\t\t// Only call the functions if the context is not lost.\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\t//if (!checkResources(arguments)) {\r\n\t\t\t\t//  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true\r\n\t\t\t\t//  return\r\n\t\t\t\t//}\r\n\t\t\t\tconst result = f.apply(ctx, arguments)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction freeResources() {\r\n\t\tfor (let ii = 0; ii < resourceDb_.length; ++ii) {\r\n\t\t\tconst resource = resourceDb_[ii]\r\n\t\t\tif (resource instanceof WebGLBuffer) {\r\n\t\t\t\tunwrappedContext_.deleteBuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLFramebuffer) {\r\n\t\t\t\tunwrappedContext_.deleteFramebuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLProgram) {\r\n\t\t\t\tunwrappedContext_.deleteProgram(resource)\r\n\t\t\t} else if (resource instanceof WebGLRenderbuffer) {\r\n\t\t\t\tunwrappedContext_.deleteRenderbuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLShader) {\r\n\t\t\t\tunwrappedContext_.deleteShader(resource)\r\n\t\t\t} else if (resource instanceof WebGLTexture) {\r\n\t\t\t\tunwrappedContext_.deleteTexture(resource)\r\n\t\t\t} else if (isWebGL2RenderingContext) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (resource instanceof WebGLQuery) {\r\n\t\t\t\t\tunwrappedContext_.deleteQuery(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSampler) {\r\n\t\t\t\t\tunwrappedContext_.deleteSampler(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSync) {\r\n\t\t\t\t\tunwrappedContext_.deleteSync(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLTransformFeedback) {\r\n\t\t\t\t\tunwrappedContext_.deleteTransformFeedback(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLVertexArrayObject) {\r\n\t\t\t\t\tunwrappedContext_.deleteVertexArray(resource)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tinterface CustomWebGLContextEvent {\r\n\t\tstatusMessage: string\r\n\t\tpreventDefault: () => void\r\n\t}\r\n\ttype WebGLContextEventListener = (e: CustomWebGLContextEvent) => void\r\n\tfunction makeWebGLContextEvent(statusMessage: string): CustomWebGLContextEvent {\r\n\t\treturn {\r\n\t\t\tstatusMessage: statusMessage,\r\n\t\t\tpreventDefault: function() {\r\n\t\t\t\tcanRestore_ = true\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\r\n\treturn canvas2\r\n\r\n\tfunction makeLostContextSimulatingContext(ctx: WebGLRenderingContext) {\r\n\t\t// copy all functions and properties to wrapper\r\n\t\tfor (const propertyName in ctx) {\r\n\t\t\tif (typeof (ctx as any)[propertyName] == 'function') {\r\n\t\t\t\twrappedContext_[propertyName] = makeLostContextFunctionWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tmakePropertyWrapper(wrappedContext_, ctx, propertyName)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Wrap a few functions specially.\r\n\t\twrappedContext_.getError = function() {\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\tlet err\r\n\t\t\t\twhile ((err = unwrappedContext_.getError())) {\r\n\t\t\t\t\tglErrorShadow_[err] = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const err in glErrorShadow_) {\r\n\t\t\t\tif (glErrorShadow_[err]) {\r\n\t\t\t\t\tdelete glErrorShadow_[err]\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn wrappedContext_.NO_ERROR\r\n\t\t}\r\n\r\n\t\tconst creationFunctions = [\r\n\t\t\t'createBuffer',\r\n\t\t\t'createFramebuffer',\r\n\t\t\t'createProgram',\r\n\t\t\t'createRenderbuffer',\r\n\t\t\t'createShader',\r\n\t\t\t'createTexture',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tcreationFunctions.push(\r\n\t\t\t\t'createQuery',\r\n\t\t\t\t'createSampler',\r\n\t\t\t\t'fenceSync',\r\n\t\t\t\t'createTransformFeedback',\r\n\t\t\t\t'createVertexArray',\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let i = 0; i < creationFunctions.length; ++i) {\r\n\t\t\tconst functionName = creationFunctions[i]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst obj = f.apply(ctx, arguments)\r\n\t\t\t\t\tobj.__webglDebugContextLostId__ = contextId_\r\n\t\t\t\t\tresourceDb_.push(obj)\r\n\t\t\t\t\treturn obj\r\n\t\t\t\t}\r\n\t\t\t})((ctx as any)[functionName])\r\n\t\t}\r\n\r\n\t\tconst functionsThatShouldReturnNull = [\r\n\t\t\t'getActiveAttrib',\r\n\t\t\t'getActiveUniform',\r\n\t\t\t'getBufferParameter',\r\n\t\t\t'getContextAttributes',\r\n\t\t\t'getAttachedShaders',\r\n\t\t\t'getFramebufferAttachmentParameter',\r\n\t\t\t'getParameter',\r\n\t\t\t'getProgramParameter',\r\n\t\t\t'getProgramInfoLog',\r\n\t\t\t'getRenderbufferParameter',\r\n\t\t\t'getShaderParameter',\r\n\t\t\t'getShaderInfoLog',\r\n\t\t\t'getShaderSource',\r\n\t\t\t'getTexParameter',\r\n\t\t\t'getUniform',\r\n\t\t\t'getUniformLocation',\r\n\t\t\t'getVertexAttrib',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tfunctionsThatShouldReturnNull.push(\r\n\t\t\t\t'getInternalformatParameter',\r\n\t\t\t\t'getQuery',\r\n\t\t\t\t'getQueryParameter',\r\n\t\t\t\t'getSamplerParameter',\r\n\t\t\t\t'getSyncParameter',\r\n\t\t\t\t'getTransformFeedbackVarying',\r\n\t\t\t\t'getIndexedParameter',\r\n\t\t\t\t'getUniformIndices',\r\n\t\t\t\t'getActiveUniforms',\r\n\t\t\t\t'getActiveUniformBlockParameter',\r\n\t\t\t\t'getActiveUniformBlockName',\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n\t\t\tconst functionName = functionsThatShouldReturnNull[ii]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\tconst isFunctions = [\r\n\t\t\t'isBuffer',\r\n\t\t\t'isEnabled',\r\n\t\t\t'isFramebuffer',\r\n\t\t\t'isProgram',\r\n\t\t\t'isRenderbuffer',\r\n\t\t\t'isShader',\r\n\t\t\t'isTexture',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tisFunctions.push('isQuery', 'isSampler', 'isSync', 'isTransformFeedback', 'isVertexArray')\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < isFunctions.length; ++ii) {\r\n\t\t\tconst functionName = isFunctions[ii]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\twrappedContext_.checkFramebufferStatus = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn wrappedContext_.FRAMEBUFFER_UNSUPPORTED\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.checkFramebufferStatus)\r\n\r\n\t\twrappedContext_.getAttribLocation = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.getAttribLocation)\r\n\r\n\t\twrappedContext_.getVertexAttribOffset = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.getVertexAttribOffset)\r\n\r\n\t\twrappedContext_.isContextLost = function() {\r\n\t\t\treturn contextLost_\r\n\t\t}\r\n\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\twrappedContext_.getFragDataLocation = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.getFragDataLocation)\r\n\r\n\t\t\twrappedContext_.clientWaitSync = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.WAIT_FAILED\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.clientWaitSync)\r\n\r\n\t\t\twrappedContext_.getUniformBlockIndex = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.INVALID_INDEX\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.getUniformBlockIndex)\r\n\t\t}\r\n\r\n\t\treturn wrappedContext_\r\n\t}\r\n}\r\n","\r\nattribute vec2 ts_TexCoord;\r\nattribute vec4 ts_Vertex;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nvarying vec2 coord;\r\nvoid main() {\r\n    coord = ts_TexCoord.xy;\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","// A fragment shader for rendering signed distance fields. Main use case: text.\r\n\r\nprecision mediump float;\r\n\r\n// the atlas texture\r\nuniform sampler2D u_texture;\r\n\r\n// the color the text should be rendered\r\nuniform vec4 u_color;\r\n\r\n// the zero distance value in the texture\r\nuniform float u_buffer;\r\n\r\n// control the bluriness of the output 0.05 is a good value\r\nuniform float u_gamma;\r\n\r\n// set to > 1.0 to just output the texture \r\nuniform float u_debug;\r\n\r\nvarying vec2 coord;\r\n\r\nvoid main() {\r\n    float dist = texture2D(u_texture, coord).r;\r\n    if (u_debug > 0.0) {\r\n        gl_FragColor = vec4(dist, dist, dist, 1);\r\n    } else {\r\n        float alpha = smoothstep(u_buffer - u_gamma, u_buffer + u_gamma, dist);\r\n        gl_FragColor = vec4(u_color.rgb, alpha * u_color.a);\r\n        if (gl_FragColor.a == 0.0) {\r\n            discard;\r\n        }\r\n    }\r\n}","import chroma from 'chroma.ts'\r\nimport { addOwnProperties, assert, DEG, int, M4, P3ZX, V, V3 } from 'ts3dutils'\r\nimport { glEnumToString } from './KhronosGroupWebGLDebug'\r\n\r\n// @ts-ignore\r\nimport posCoordVS from '../src/shaders/posCoordVS.glslx'\r\n// @ts-ignore\r\nimport sdfRenderFS from '../src/shaders/sdfRenderFS.glslx'\r\nimport { makeDebugContext, Mesh, Shader, Texture } from './index'\r\n\r\nimport GL = WebGLRenderingContextStrict\r\nexport type GL_COLOR = [number, number, number, number]\r\n/**\r\n * There's only one constant, use it for default values. Use chroma-js or similar for actual colors.\r\n */\r\nexport const GL_COLOR_BLACK: GL_COLOR = [0, 0, 0, 1]\r\n\r\nexport function currentGL(): TSGLContext {\r\n\treturn TSGLContextBase.gl\r\n}\r\n\r\nexport function isNumber(obj: any) {\r\n\tconst str = Object.prototype.toString.call(obj)\r\n\treturn str == '[object Number]' || str == '[object Boolean]'\r\n}\r\n\r\nexport type UniformType = V3 | M4 | number[] | boolean | number\r\nexport type TSGLContext = TSGLContextBase & (WebGLRenderingContextStrict | WebGL2RenderingContext)\r\nexport interface TSGLContextBase extends WebGLRenderingContextStrict {}\r\nexport class TSGLContextBase {\r\n\tmodelViewMatrix: M4 = M4.identity()\r\n\tprojectionMatrix: M4 = M4.identity()\r\n\tstatic readonly MODELVIEW: { __MATRIX_MODE_CONSTANT: any } = 0 as any\r\n\tstatic readonly PROJECTION: { __MATRIX_MODE_CONSTANT: any } = 1 as any\r\n\tMODELVIEW: typeof TSGLContextBase.MODELVIEW\r\n\tPROJECTION: typeof TSGLContextBase.PROJECTION\r\n\r\n\treadonly version: 1 | 2\r\n\r\n\tstatic HALF_FLOAT_OES: int = 0x8d61\r\n\tHALF_FLOAT_OES: int\r\n\r\n\tprivate tempMatrix = new M4()\r\n\tprivate resultMatrix = new M4()\r\n\tprivate modelViewStack: M4[] = []\r\n\tprivate projectionStack: M4[] = []\r\n\tprivate currentMatrixName: 'modelViewMatrix' | 'projectionMatrix'\r\n\tprivate stack: M4[]\r\n\r\n\tmeshes: { [name: string]: Mesh }\r\n\tshaders: { [name: string]: Shader }\r\n\tpublic drawCallCount: int = 0\r\n\tpublic projectionMatrixVersion: int = 0\r\n\tpublic modelViewMatrixVersion: int = 0\r\n\ttextCtx!: CanvasRenderingContext2D\r\n\tTEXT_TEXTURE_HEIGHT: string\r\n\tTEXT_TEXTURE_FONT: string\r\n\ttextMetrics: FontJsonMetrics\r\n\ttextAtlas: Texture\r\n\ttextRenderShader: Shader<any, any>\r\n\r\n\tprotected constructor(\r\n\t\tgl: TSGLContextBase,\r\n\t\tprivate immediate = {\r\n\t\t\tmesh: new Mesh().addVertexBuffer('coords', 'ts_TexCoord').addVertexBuffer('colors', 'ts_Color'),\r\n\t\t\tmode: -1 as GL.DrawMode | -1,\r\n\t\t\tcoord: [0, 0] as [number, number],\r\n\t\t\tcolor: [1, 1, 1, 1] as GL_COLOR,\r\n\t\t\tpointSize: 1,\r\n\t\t\tshader: Shader.create(\r\n\t\t\t\t`\r\n\t\t\tattribute vec4 ts_Color;\r\n\t\t\tattribute vec4 ts_Vertex;\r\n\t\t\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\t\t\tattribute vec2 ts_TexCoord;\r\n            uniform float pointSize;\r\n            varying vec4 color;\r\n            varying vec2 coord;\r\n            void main() {\r\n                color = ts_Color;\r\n                coord = ts_TexCoord;\r\n                gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n                gl_PointSize = pointSize;\r\n            }\r\n\t\t`,\r\n\t\t\t\t`\r\n\t\t\tprecision highp float;\r\n            uniform sampler2D texture;\r\n            uniform float pointSize;\r\n            // uniform bool useTexture;\r\n            varying vec4 color;\r\n            varying vec2 coord;\r\n            void main() {\r\n                gl_FragColor = color;\r\n                // if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\r\n            }\r\n        `,\r\n\t\t\t\tgl,\r\n\t\t\t),\r\n\t\t},\r\n\t) {\r\n\t\tthis.matrixMode(TSGLContextBase.MODELVIEW)\r\n\t}\r\n\r\n\t/// Implement the OpenGL modelview and projection matrix stacks, along with some other useful GLU matrix functions.\r\n\tmatrixMode(mode: { __MATRIX_MODE_CONSTANT: any }): void {\r\n\t\tswitch (mode) {\r\n\t\t\tcase this.MODELVIEW:\r\n\t\t\t\tthis.currentMatrixName = 'modelViewMatrix'\r\n\t\t\t\tthis.stack = this.modelViewStack\r\n\t\t\t\tbreak\r\n\t\t\tcase this.PROJECTION:\r\n\t\t\t\tthis.currentMatrixName = 'projectionMatrix'\r\n\t\t\t\tthis.stack = this.projectionStack\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('invalid matrix mode ' + mode)\r\n\t\t}\r\n\t}\r\n\r\n\tloadIdentity(): void {\r\n\t\tM4.identity(this[this.currentMatrixName])\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tloadMatrix(m4: M4) {\r\n\t\tM4.copy(m4, this[this.currentMatrixName])\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tmultMatrix(m4: M4) {\r\n\t\tM4.multiply(this[this.currentMatrixName], m4, this.resultMatrix)\r\n\t\tconst temp = this.resultMatrix\r\n\t\tthis.resultMatrix = this[this.currentMatrixName]\r\n\t\tthis[this.currentMatrixName] = temp\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tmirror(plane: { normal1: V3; w: number }) {\r\n\t\tthis.multMatrix(M4.mirror(plane))\r\n\t}\r\n\r\n\tperspective(fovDegrees: number, aspect: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tfrustum(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.frustum(left, right, bottom, top, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tortho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.ortho(left, right, bottom, top, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tscale(x: number, y: number, z?: number): void\r\n\tscale(scale: number): void\r\n\tscale(v: V3): void\r\n\tscale(...args: any[]) {\r\n\t\tthis.multMatrix((M4.scale as any)(...args, this.tempMatrix))\r\n\t}\r\n\r\n\tmirroredX() {\r\n\t\tthis.multMatrix(M4.mirror(P3ZX))\r\n\t}\r\n\r\n\ttranslate(x: number, y?: number, z?: number): void\r\n\ttranslate(v: V3): void\r\n\ttranslate(x: any, y?: any, z?: any) {\r\n\t\tif (undefined !== y) {\r\n\t\t\tthis.multMatrix(M4.translate(x, y, z, this.tempMatrix))\r\n\t\t} else {\r\n\t\t\tthis.multMatrix(M4.translate(x, this.tempMatrix))\r\n\t\t}\r\n\t}\r\n\r\n\trotate(angleDegrees: number, x: number, y: number, z: number) {\r\n\t\tthis.multMatrix(M4.rotate(angleDegrees * DEG, { x, y, z }, this.tempMatrix))\r\n\t}\r\n\r\n\tlookAt(eye: V3, center: V3, up: V3) {\r\n\t\tthis.multMatrix(M4.lookAt(eye, center, up, this.tempMatrix))\r\n\t}\r\n\r\n\tpushMatrix() {\r\n\t\tthis.stack.push(M4.copy(this[this.currentMatrixName]))\r\n\t}\r\n\r\n\tpopMatrix() {\r\n\t\tconst pop = this.stack.pop()\r\n\t\tassert(undefined !== pop)\r\n\t\tthis[this.currentMatrixName] = pop as M4\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\t/**\r\n\t * World coordinates (WC) to screen/window coordinates matrix\r\n\t */\r\n\twcToWindowMatrix() {\r\n\t\tconst viewport = this.getParameter(this.VIEWPORT)\r\n\t\tconst [x, y, w, h] = viewport\r\n\t\t// prettier-ignore\r\n\t\tconst viewportToScreenMatrix = new M4([\r\n\t\t\tw / 2, 0, 0, x + w / 2,\r\n\t\t\th / 2, 0, 0, y + h / 2,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t])\r\n\t\treturn M4.product(viewportToScreenMatrix, this.projectionMatrix, this.modelViewMatrix)\r\n\t}\r\n\r\n\t/////////// IMMEDIATE MODE\r\n\t// ### Immediate mode\r\n\t//\r\n\t// Provide an implementation of OpenGL's deprecated immediate mode. This is\r\n\t// deprecated for a reason: constantly re-specifying the geometry is a bad\r\n\t// idea for performance. You should use a `GL.Mesh` instead, which specifies\r\n\t// the geometry once and caches it on the graphics card. Still, nothing\r\n\t// beats a quick `viewerGL.begin(WGL.POINTS); viewerGL.vertex(1, 2, 3); viewerGL.end();` for\r\n\t// debugging. This intentionally doesn't implement fixed-function lighting\r\n\t// because it's only meant for quick debugging tasks.\r\n\r\n\tpointSize(pointSize: number): void {\r\n\t\tthis.immediate.shader.uniforms({ pointSize: pointSize })\r\n\t}\r\n\r\n\tbegin(mode: GL.DrawMode) {\r\n\t\tif (this.immediate.mode != -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\r\n\t\tthis.immediate.mode = mode\r\n\t\tthis.immediate.mesh.colors = []\r\n\t\tthis.immediate.mesh.coords = []\r\n\t\tthis.immediate.mesh.vertices = []\r\n\t}\r\n\r\n\tcolor(cssColor: string): void\r\n\tcolor(r: number, g: number, b: number, a?: number): void\r\n\tcolor(hexInt: int): void\r\n\tcolor(glColor: GL_COLOR): void\r\n\tcolor(...args: any[]) {\r\n\t\tthis.immediate.color =\r\n\t\t\t1 == args.length && Array.isArray(args[0])\r\n\t\t\t\t? args[0]\r\n\t\t\t\t: 1 == args.length && 'number' == typeof args[0]\r\n\t\t\t\t\t? hexIntToGLColor(args[0])\r\n\t\t\t\t\t: 1 == args.length && 'string' == typeof args[0]\r\n\t\t\t\t\t\t? chroma(args[0]).gl()\r\n\t\t\t\t\t\t: [args[0], args[1], args[2], args[3] || 1]\r\n\t}\r\n\r\n\ttexCoord(s: number, t: number): void\r\n\ttexCoord(coords: [number, number]): void\r\n\ttexCoord(coords: { x: number; y: number }): void\r\n\ttexCoord(...args: any[]) {\r\n\t\tthis.immediate.coord = V.apply(undefined, args).toArray(2)\r\n\t}\r\n\r\n\tvertex(v: V3): void\r\n\tvertex(x: number, y: number, z: number): void\r\n\tvertex(...args: any[]) {\r\n\t\tthis.immediate.mesh.colors.push(this.immediate.color)\r\n\t\tthis.immediate.mesh.coords.push(this.immediate.coord)\r\n\t\tthis.immediate.mesh.vertices.push(V.apply(undefined, args))\r\n\t}\r\n\r\n\tend(): void {\r\n\t\tif (this.immediate.mode == -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\r\n\t\tthis.immediate.mesh.compile()\r\n\t\tthis.immediate.shader\r\n\t\t\t.uniforms({\r\n\t\t\t\tuseTexture: !!TSGLContextBase.gl.getParameter(this.TEXTURE_BINDING_2D),\r\n\t\t\t})\r\n\t\t\t.drawBuffers(this.immediate.mesh.vertexBuffers, undefined, this.immediate.mode)\r\n\t\tthis.immediate.mode = -1\r\n\t}\r\n\r\n\t////////// MISCELLANEOUS METHODS\r\n\tstatic gl: TSGLContextBase\r\n\r\n\tmakeCurrent() {\r\n\t\tTSGLContextBase.gl = this\r\n\t}\r\n\r\n\t/**\r\n\t * Starts an animation loop.\r\n\t */\r\n\tanimate(callback: (this: TSGLContextBase, domHighResTimeStamp: number, timeSinceLast: number) => void): () => void {\r\n\t\tconst requestAnimationFrame: typeof window.requestAnimationFrame =\r\n\t\t\twindow.requestAnimationFrame ||\r\n\t\t\t(window as any).mozRequestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\tfunction(callback: FrameRequestCallback) {\r\n\t\t\t\tsetTimeout(() => callback(performance.now()), 1000 / 60)\r\n\t\t\t}\r\n\t\tlet time = performance.now(),\r\n\t\t\tkeepUpdating = true\r\n\t\tconst update = (now: number) => {\r\n\t\t\tif (keepUpdating) {\r\n\t\t\t\tcallback.call(this, now, now - time)\r\n\t\t\t\ttime = now\r\n\t\t\t\trequestAnimationFrame(update)\r\n\t\t\t}\r\n\t\t}\r\n\t\trequestAnimationFrame(update)\r\n\t\treturn () => {\r\n\t\t\tkeepUpdating = false\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provide an easy way to get a fullscreen app running, including an\r\n\t * automatic 3D perspective projection matrix by default. This should be\r\n\t * called once.\r\n\t *\r\n\t * Just fullscreen, no automatic camera:\r\n\t *\r\n\t *     viewerGL.fullscreen({ camera: false })\r\n\t *\r\n\t * Adjusting field of view, near plane distance, and far plane distance:\r\n\t *\r\n\t *     viewerGL.fullscreen({ fov: 45, near: 0.1, far: 1000 })\r\n\t *\r\n\t * Adding padding from the edge of the window:\r\n\t *\r\n\t *     viewerGL.fullscreen({ paddingLeft: 250, paddingBottom: 60 })\r\n\t */\r\n\tfullscreen(\r\n\t\toptions: {\r\n\t\t\tpaddingTop?: number\r\n\t\t\tpaddingLeft?: number\r\n\t\t\tpaddingRight?: number\r\n\t\t\tpaddingBottom?: number\r\n\t\t\tcamera?: boolean\r\n\t\t\tfov?: number\r\n\t\t\tnear?: number\r\n\t\t\tfar?: number\r\n\t\t} = {},\r\n\t) {\r\n\t\tconst top = options.paddingTop || 0\r\n\t\tconst left = options.paddingLeft || 0\r\n\t\tconst right = options.paddingRight || 0\r\n\t\tconst bottom = options.paddingBottom || 0\r\n\t\tif (!document.body) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t\"document.body doesn't exist yet (call viewerGL.fullscreen() from \" +\r\n\t\t\t\t\t'window.onload() or from inside the <body> tag)',\r\n\t\t\t)\r\n\t\t}\r\n\t\tdocument.body.appendChild(this.canvas)\r\n\t\tdocument.body.style.overflow = 'hidden'\r\n\t\tthis.canvas.style.position = 'absolute'\r\n\t\tthis.canvas.style.left = left + 'px'\r\n\t\tthis.canvas.style.top = top + 'px'\r\n\t\tthis.canvas.style.width = window.innerWidth - left - right + 'px'\r\n\t\tthis.canvas.style.bottom = window.innerHeight - top - bottom + 'px'\r\n\r\n\t\tconst gl = this\r\n\r\n\t\tfunction windowOnResize() {\r\n\t\t\tgl.canvas.width = (window.innerWidth - left - right) * window.devicePixelRatio\r\n\t\t\tgl.canvas.height = (window.innerHeight - top - bottom) * window.devicePixelRatio\r\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\r\n\t\t\tif (options.camera) {\r\n\t\t\t\tgl.matrixMode(TSGLContextBase.PROJECTION)\r\n\t\t\t\tgl.loadIdentity()\r\n\t\t\t\tgl.perspective(\r\n\t\t\t\t\toptions.fov || 45,\r\n\t\t\t\t\tgl.canvas.width / gl.canvas.height,\r\n\t\t\t\t\toptions.near || 0.1,\r\n\t\t\t\t\toptions.far || 1000,\r\n\t\t\t\t)\r\n\t\t\t\tgl.matrixMode(TSGLContextBase.MODELVIEW)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', windowOnResize)\r\n\t\twindowOnResize()\r\n\t\treturn this\r\n\t}\r\n\tgetMouseLine(e: MouseEvent): { anchor: V3; dir: V3 }\r\n\tgetMouseLine(canvasPosX: number, canvasPosY: number): { anchor: V3; dir: V3 }\r\n\tgetMouseLine(canvasPosXOrE: number | MouseEvent, canvasPosY?: number): { anchor: V3; dir: V3 } {\r\n\t\tif (canvasPosXOrE instanceof MouseEvent) {\r\n\t\t\treturn this.getMouseLine(canvasPosXOrE.offsetX, canvasPosXOrE.offsetY)\r\n\t\t}\r\n\t\tconst ndc1 = V(\r\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\r\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\r\n\t\t\t0,\r\n\t\t)\r\n\t\tconst ndc2 = V(\r\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\r\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\r\n\t\t\t1,\r\n\t\t)\r\n\t\tconst inverseProjectionMatrix = this.projectionMatrix.inversed()\r\n\t\tconst anchor = inverseProjectionMatrix.transformPoint(ndc1)\r\n\t\tconst dir = inverseProjectionMatrix.transformPoint(ndc2).minus(anchor)\r\n\t\treturn { anchor, dir }\r\n\t}\r\n\r\n\tviewportFill() {\r\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\r\n\t}\r\n\r\n\tasync setupTextRendering(pngURL: string, jsonURL: string) {\r\n\t\tthis.textRenderShader = Shader.create(posCoordVS, sdfRenderFS)\r\n\t\t;[this.textAtlas, this.textMetrics] = await Promise.all([\r\n\t\t\tTexture.fromURL(pngURL, {\r\n\t\t\t\tformat: this.LUMINANCE,\r\n\t\t\t\tinternalFormat: this.LUMINANCE,\r\n\t\t\t\ttype: this.UNSIGNED_BYTE,\r\n\t\t\t}),\r\n\t\t\tfetch(jsonURL).then(r => r.json()),\r\n\t\t])\r\n\t\t// const cs = this.textMetrics.chars\r\n\t\t// const maxY = Object.keys(cs).reduce((a, b) => Math.max(a, cs[b][3]), 0)\r\n\t\t// const minY = Object.keys(cs).reduce((a, b) => Math.min(a, cs[b][3] - cs[b][1]), 0)\r\n\t\t// console.log(maxY, minY)\r\n\t}\r\n\r\n\tcachedSDFMeshes: {\r\n\t\t[str: string]: Mesh & { TRIANGLES: int[]; coords: number[]; width: number; lineCount: int }\r\n\t} = {}\r\n\r\n\tgetSDFMeshForString(str: string) {\r\n\t\tassert(this.textMetrics)\r\n\t\treturn (\r\n\t\t\tthis.cachedSDFMeshes[str] ||\r\n\t\t\t(this.cachedSDFMeshes[str] = createTextMesh(this.textMetrics, this.textAtlas, str))\r\n\t\t)\r\n\t}\r\n\r\n\trenderText(\r\n\t\tstring: string,\r\n\t\tcolor: GL_COLOR,\r\n\t\tsize = 1,\r\n\t\txAlign: 'left' | 'center' | 'right' = 'left',\r\n\t\tbaseline: 'top' | 'middle' | 'alphabetic' | 'bottom' = 'bottom',\r\n\t\tgamma = 0.05,\r\n\t\tlineHeight = 1.2,\r\n\t) {\r\n\t\tconst strMesh = this.getSDFMeshForString(string)\r\n\t\tthis.pushMatrix()\r\n\t\tthis.scale(size)\r\n\t\tconst xTranslate = { left: 0, center: -0.5, right: -1 }\r\n\t\tconst yTranslate = {\r\n\t\t\ttop: -this.textMetrics.ascender / this.textMetrics.size,\r\n\t\t\tmiddle: (-this.textMetrics.ascender - this.textMetrics.descender) / 2 / this.textMetrics.size,\r\n\t\t\talphabetic: 0,\r\n\t\t\tbottom: -this.textMetrics.descender / this.textMetrics.size,\r\n\t\t}\r\n\t\t// console.log('yTranslate[baseline]', yTranslate[baseline])\r\n\t\tthis.translate(xTranslate[xAlign] * strMesh.width, yTranslate[baseline], 0)\r\n\t\tthis.multMatrix(M4.forSys(V3.X, V3.Y, new V3(0, -lineHeight, 0)))\r\n\t\tthis.textAtlas.bind(0)\r\n\t\tthis.textRenderShader\r\n\t\t\t.uniforms({ texture: 0, u_color: color, u_debug: 0, u_gamma: gamma, u_buffer: 192 / 256 })\r\n\t\t\t.draw(strMesh)\r\n\t\tthis.popMatrix()\r\n\r\n\t\t// gl.uniform1f(shader.u_debug, debug ? 1 : 0)\r\n\r\n\t\t// gl.uniform4fv(shader.u_color, [1, 1, 1, 1])\r\n\t\t// gl.uniform1f(shader.u_buffer, buffer)\r\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\r\n\r\n\t\t// gl.uniform4fv(shader.u_color, [0, 0, 0, 1])\r\n\t\t// gl.uniform1f(shader.u_buffer, 192 / 256)\r\n\t\t// gl.uniform1f(shader.u_gamma, (gamma * 1.4142) / scale)\r\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\r\n\t}\r\n\r\n\tstatic create(\r\n\t\toptions: Partial<GL.WebGLContextAttributes & { canvas: HTMLCanvasElement; throwOnError: boolean }> = {},\r\n\t): TSGLContext {\r\n\t\tconst canvas = options.canvas || document.createElement('canvas')\r\n\t\tif (!options.canvas) {\r\n\t\t\tcanvas.width = 800\r\n\t\t\tcanvas.height = 600\r\n\t\t}\r\n\t\tif (!('alpha' in options)) options.alpha = false\r\n\t\tlet newGL: any = undefined\r\n\t\ttry {\r\n\t\t\tnewGL = canvas.getContext('webgl2', options)\r\n\t\t\tnewGL && (newGL.version = 2)\r\n\t\t\tif (!newGL) {\r\n\t\t\t\tnewGL = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options)\r\n\t\t\t\tnewGL && (newGL.version = 1)\r\n\t\t\t}\r\n\t\t\tconsole.log('getting context')\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e, 'Failed to get context')\r\n\t\t}\r\n\t\tif (!newGL) throw new Error('WebGL not supported')\r\n\t\tif (options.throwOnError) {\r\n\t\t\tnewGL = makeDebugContext(newGL, (err, funcName) => {\r\n\t\t\t\tthrow new Error(glEnumToString(err) + ' was caused by ' + funcName)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tTSGLContextBase.gl = newGL\r\n\t\taddOwnProperties(newGL, TSGLContextBase.prototype)\r\n\t\taddOwnProperties(newGL, new TSGLContextBase(newGL))\r\n\t\t//addEventListeners(newGL)\r\n\t\treturn newGL\r\n\t}\r\n\r\n\tfixCanvasRes() {\r\n\t\tthis.canvas.width = this.canvas.clientWidth * window.devicePixelRatio\r\n\t\tthis.canvas.height = this.canvas.clientHeight * window.devicePixelRatio\r\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\r\n\t}\r\n}\r\nexport namespace TSGLContext {\r\n\t/**\r\n\t * `create()` creates a new WebGL context and augments it with more methods. The alpha channel is disabled\r\n\t * by default because it usually causes unintended transparencies in the canvas.\r\n\t */\r\n\texport const create = TSGLContextBase.create\r\n}\r\n\r\n// enum WGL_ERROR {\r\n// \tNO_ERROR = WGL.NO_ERROR,\r\n// \tINVALID_ENUM = WGL.INVALID_ENUM,\r\n// \tINVALID_VALUE = WGL.INVALID_VALUE,\r\n// \tINVALID_OPERATION = WGL.INVALID_OPERATION,\r\n// \tINVALID_FRAMEBUFFER_OPERATION = WGL.INVALID_FRAMEBUFFER_OPERATION,\r\n// \tOUT_OF_MEMORY = WGL.OUT_OF_MEMORY,\r\n// \tCONTEXT_LOST_WEBGL = WGL.CONTEXT_LOST_WEBGL,\r\n// }\r\n\r\nTSGLContextBase.prototype.MODELVIEW = TSGLContextBase.MODELVIEW\r\nTSGLContextBase.prototype.PROJECTION = TSGLContextBase.PROJECTION\r\nTSGLContextBase.prototype.HALF_FLOAT_OES = TSGLContextBase.HALF_FLOAT_OES\r\n\r\n/**\r\n *\r\n * Push two triangles:\r\n * ```\r\n c - d\r\n | \\ |\r\n a - b\r\n ```\r\n */\r\nexport function pushQuad(triangles: int[], flipped: boolean, a: int, b: int, c: int, d: int) {\r\n\t// prettier-ignore\r\n\tif (flipped) {\r\n\t\ttriangles.push(\r\n\t\t\ta, c, b,\r\n\t\t\tb, c, d)\r\n\t} else {\r\n\t\ttriangles.push(\r\n\t\t\ta, b, c,\r\n\t\t\tb, d, c)\r\n\t}\r\n}\r\n\r\nfunction hexIntToGLColor(color: int): GL_COLOR {\r\n\treturn [(color >> 16) / 255.0, ((color >> 8) & 0xff) / 255.0, (color & 0xff) / 255.0, 1.0]\r\n}\r\n\r\nexport interface FontJsonMetrics {\r\n\tfamily: string\r\n\tstyle: string\r\n\r\n\t// buffer refers to the width of the margin around glyph bounding boxes with distance values\r\n\tbuffer: int\r\n\tsize: number\r\n\r\n\t// [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY]\r\n\t// see https://www.freetype.org/freetype2/docs/tutorial/step2.html\r\n\tchars: { [char: string]: [number, number, number, number, number, number, number] }\r\n\r\n\tdescender: number\r\n\tascender: number\r\n}\r\n// function measureText(metrics: FontJsonMetrics, text: string, size: number) {\r\n// \tconst dimensions = {\r\n// \t\tadvance: 0,\r\n// \t}\r\n\r\n// \tconst scale = size / metrics.size\r\n// \tfor (let i = 0; i < text.length; i++) {\r\n// \t\tconst horiAdvance = metrics.chars[text[i]][4]\r\n// \t\tdimensions.advance += horiAdvance * scale\r\n// \t}\r\n\r\n// \treturn dimensions\r\n// }\r\n\r\n// gl.getExtension('OES_standard_derivatives')\r\n\r\n// gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\r\n\r\n// gl.enable(gl.BLEND)\r\n\r\n// const texture = gl.createTexture()\r\n\r\n// const vertexBuffer = gl.createBuffer()\r\n// const textureBuffer = gl.createBuffer()\r\n\r\nfunction createTextMesh(fontMetrics: FontJsonMetrics, fontTextureAtlas: Texture, str: string, lineHeight = 1) {\r\n\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\r\n\r\n\tlet cursorX = 0\r\n\tlet cursorY = 0\r\n\r\n\tfunction drawGlyph(chr: string) {\r\n\t\tconst metric = fontMetrics.chars[chr]\r\n\t\tif (!metric) return\r\n\r\n\t\tconst [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY] = metric\r\n\t\tconst { size, buffer } = fontMetrics\r\n\t\tconst quadStartIndex = mesh.vertices.length\r\n\r\n\t\t// buffer = margin on texture\r\n\t\tif (width > 0 && height > 0) {\r\n\t\t\t// Add a quad (= two triangles) per glyph.\r\n\t\t\tconst left = (cursorX + horiBearingX - buffer) / size\r\n\t\t\tconst right = (cursorX + horiBearingX + width + buffer) / size\r\n\t\t\tconst bottom = (horiBearingY - height - buffer) / size\r\n\t\t\tconst top = (horiBearingY + buffer) / size\r\n\t\t\tmesh.vertices.push(\r\n\t\t\t\tnew V3(left, bottom, cursorY / size),\r\n\t\t\t\tnew V3(right, bottom, cursorY / size),\r\n\t\t\t\tnew V3(left, top, cursorY / size),\r\n\t\t\t\tnew V3(right, top, cursorY / size),\r\n\t\t\t)\r\n\r\n\t\t\tconst coordsLeft = posX / fontTextureAtlas.width\r\n\t\t\tconst coordsRight = (posX + width + 2 * buffer) / fontTextureAtlas.width\r\n\t\t\tconst coordsBottom = (posY + height + 2 * buffer) / fontTextureAtlas.height\r\n\t\t\tconst coordsTop = posY / fontTextureAtlas.height\r\n\t\t\tmesh.coords.push(\r\n\t\t\t\t[coordsLeft, coordsBottom],\r\n\t\t\t\t[coordsRight, coordsBottom],\r\n\t\t\t\t[coordsLeft, coordsTop],\r\n\t\t\t\t[coordsRight, coordsTop],\r\n\t\t\t)\r\n\t\t\t// mesh.coords.push([0, 0], [0, 1], [1, 0], [1, 1])\r\n\r\n\t\t\tpushQuad(mesh.TRIANGLES, false, quadStartIndex, quadStartIndex + 1, quadStartIndex + 2, quadStartIndex + 3)\r\n\t\t}\r\n\r\n\t\t// pen.x += Math.ceil(horiAdvance * scale);\r\n\t\tcursorX += horiAdvance\r\n\t}\r\n\r\n\tfor (let i = 0; i < str.length; i++) {\r\n\t\tconst chr = str[i]\r\n\t\tif ('\\n' == chr) {\r\n\t\t\tcursorX = 0\r\n\t\t\tcursorY += lineHeight * fontMetrics.size\r\n\t\t} else {\r\n\t\t\tdrawGlyph(chr)\r\n\t\t}\r\n\t}\r\n\r\n\treturn Object.assign(mesh.compile(), { width: cursorX / fontMetrics.size, lineCount: cursorY + 1 })\r\n}\r\n","precision mediump float;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nattribute vec4 ts_Vertex;\r\nvoid main() {\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = memoize;\n","precision mediump float;\r\nuniform vec4 color;\r\nvoid main() {\r\n    gl_FragColor = color;\r\n}","precision mediump float;\r\n\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nuniform mat3 ts_NormalMatrix;\r\nuniform float f;\r\n\r\nattribute vec3 ts_Normal;\r\nattribute vec4 ts_Vertex;\r\nattribute vec4 ts_Vertex2;\r\nattribute vec4 ts_Color;\r\n\r\nvarying vec3 normal;\r\nvarying vec4 color;\r\n\r\nvoid main() {\r\n    vec4 v = mix(ts_Vertex, ts_Vertex2, f);\r\n\tgl_Position = ts_ModelViewProjectionMatrix * v;\r\n\tnormal = ts_NormalMatrix * ts_Normal;\r\n\tcolor = ts_Color;\r\n}","precision mediump float;\r\nvarying vec4 color;\r\nvoid main() {\r\n    gl_FragColor = color;\r\n}","import { TSGLContext } from \"tsgl\"\r\nimport { V3, DEG, lerp, V } from \"ts3dutils\"\r\nimport chroma from \"..\"\r\nimport React from \"react\"\r\ntype Color = chroma.Color\r\nexport type DrawableColorSpaces = keyof typeof colorSpaces\r\nfunction renderHueCylinder(\r\n\tgl: TSGLContext,\r\n\tradius: number,\r\n\tradialStart: string,\r\n\tradialName: string,\r\n\tradialEnd: string,\r\n\tvStart: string,\r\n\tvName: string,\r\n\tvEnd: string,\r\n) {\r\n\tgl.begin(gl.LINES)\r\n\tgl.color(\"black\")\r\n\t// lightness\r\n\tgl.vertex(V3.O)\r\n\tgl.vertex(V(0, 0, 1))\r\n\r\n\t// saturation\r\n\tgl.vertex(V3.O)\r\n\tgl.vertex(V(radius, 0, 0))\r\n\r\n\tfor (let i = 0; i < 256; i++) {\r\n\t\tgl.vertex(V3.polar(radius, (i / 256) * 2 * Math.PI, 0))\r\n\t\tgl.vertex(V3.polar(radius, ((i + 1) / 256) * 2 * Math.PI, 0))\r\n\t}\r\n\tgl.end()\r\n\r\n\tfor (let hue = 0; hue < 360; hue += 30) {\r\n\t\tgl.pushMatrix()\r\n\t\tgl.rotate(hue, 0, 0, 1)\r\n\t\tgl.translate(radius, 0)\r\n\t\tgl.rotate(90, 0, 0, 1.0)\r\n\t\tgl.renderText(hue + \"°\", chroma.hsl(hue, 1, 0.5).gl(), 0.05, \"center\", \"top\")\r\n\t\tgl.renderText(hue + \"°\", [0, 0, 0, 1], 0.05, \"center\", \"top\", 0.2)\r\n\t\tgl.popMatrix()\r\n\t}\r\n\r\n\tgl.pushMatrix()\r\n\tgl.rotate(90, 1, 0, 0)\r\n\r\n\tgl.renderText(radialStart, [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\tgl.translate(0.25, 0, 0)\r\n\tgl.renderText(radialName, [0, 0, 0, 1], 0.05, \"center\", \"top\")\r\n\tgl.translate(0.25, 0, 0)\r\n\tgl.renderText(radialEnd, [0, 0, 0, 1], 0.05, \"right\", \"top\")\r\n\tgl.popMatrix()\r\n\r\n\t// lightness\r\n\tgl.pushMatrix()\r\n\t// gl.rotate(-135, 0, 0, 1)\r\n\tgl.rotate(90, 1, 0, 0)\r\n\r\n\tgl.renderText(vStart, [0, 0, 0, 1], 0.05, \"left\", \"bottom\")\r\n\tgl.translate(0, 0.5, 0)\r\n\tgl.renderText(vName, [0, 0, 0, 1], 0.05, \"left\", \"middle\")\r\n\tgl.translate(0, 0.5, 0)\r\n\tgl.renderText(vEnd, [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\tgl.popMatrix()\r\n}\r\nexport const colorSpaces = {\r\n\trgb: {\r\n\t\trender(gl: TSGLContext) {\r\n\t\t\tgl.translate(-0.5, -0.5, 0)\r\n\t\t\tgl.begin(gl.LINES)\r\n\t\t\tgl.color(\"black\")\r\n\t\t\tgl.vertex(V3.O)\r\n\t\t\tgl.vertex(V3.X)\r\n\t\t\tgl.vertex(V3.O)\r\n\t\t\tgl.vertex(V3.Y)\r\n\t\t\tgl.vertex(V3.O)\r\n\t\t\tgl.vertex(V3.Z)\r\n\t\t\tgl.end()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"0\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.translate(0.5, 0, 0)\r\n\t\t\tgl.renderText(\"red\", [1, 0, 0, 1], 0.05, \"center\", \"top\")\r\n\t\t\tgl.translate(0.5, 0, 0)\r\n\t\t\tgl.renderText(\"255\", [0, 0, 0, 1], 0.05, \"right\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(90, 0, 0, 1)\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"0\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.translate(0.5, 0, 0)\r\n\t\t\tgl.renderText(\"green\", [0, 1, 0, 1], 0.05, \"center\", \"top\")\r\n\t\t\tgl.translate(0.5, 0, 0)\r\n\t\t\tgl.renderText(\"255\", [0, 0, 0, 1], 0.05, \"right\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(-135, 0, 0, 1)\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"0\", [0, 0, 0, 1], 0.05, \"left\", \"bottom\")\r\n\t\t\tgl.translate(0, 0.5, 0)\r\n\t\t\tgl.renderText(\"blue\", [0, 0, 1, 1], 0.05, \"left\", \"middle\")\r\n\t\t\tgl.translate(0, 0.5, 0)\r\n\t\t\tgl.renderText(\"255\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\t\t},\r\n\t\tconvert(color: Color) {\r\n\t\t\tconst [x, y, z] = color.gl()\r\n\t\t\treturn new V3(x - 0.5, y - 0.5, z)\r\n\t\t},\r\n\t\ttitle: \"RGB\",\r\n\t\tchildren: (\r\n\t\t\t<>\r\n\t\t\t\tThe RGB color space. What your screen uses. Red, green and blue channels, generally 8 bits each, for a\r\n\t\t\t\ttotal of 16 million colors.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\thsl: {\r\n\t\trender(gl: TSGLContext) {\r\n\t\t\trenderHueCylinder(gl, 0.5, \"0\", \"saturation\", \"100%\", \"0\", \"lightness\", \"100%\")\r\n\t\t},\r\n\t\tconvert(color: Color) {\r\n\t\t\tconst [h, s, l] = color.hsl()\r\n\t\t\treturn V3.polar(s * 0.5, h * DEG).plus(new V3(0, 0, l))\r\n\t\t},\r\n\t\ttitle: \"HSL\",\r\n\t\tchildren: <>Hue, saturation and lightness. Also supported by CSS.</>,\r\n\t},\r\n\thsv: {\r\n\t\trender(gl: TSGLContext) {\r\n\t\t\trenderHueCylinder(gl, 0.5, \"0\", \"saturation\", \"100%\", \"0\", \"value\", \"100%\")\r\n\t\t},\r\n\t\tconvert(color: Color) {\r\n\t\t\tconst [h, s, v] = color.hsv()\r\n\t\t\treturn V3.polar(s * 0.5, h * DEG).plus(new V3(0, 0, v))\r\n\t\t},\r\n\t\ttitle: \"HSV\",\r\n\t\tchildren: <></>,\r\n\t},\r\n\thcl: {\r\n\t\trender(gl: TSGLContext) {\r\n\t\t\trenderHueCylinder(gl, 0.5, \"0\", \"chroma\", \"200\", \"0\", \"luminance\", \"100\")\r\n\t\t},\r\n\t\tconvert(color: Color) {\r\n\t\t\tconst [l, c, h] = color.lch()\r\n\t\t\treturn V3.polar((c / 200) * 0.5, h * DEG).plus(new V3(0, 0, l / 100))\r\n\t\t},\r\n\t\ttitle: \"HCL\",\r\n\t\tchildren: (\r\n\t\t\t<>\r\n\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/HCL_color_space\">wiki</a>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\tlab: {\r\n\t\trender(gl: TSGLContext) {\r\n\t\t\tgl.begin(gl.LINES)\r\n\t\t\tgl.color(\"black\")\r\n\t\t\t// L*\r\n\t\t\tgl.vertex(V3.O)\r\n\t\t\tgl.vertex(new V3(0, 0, 1))\r\n\t\t\t// A*\r\n\t\t\tgl.vertex(new V3((-87 / 100) * 0.5, 0, 0))\r\n\t\t\tgl.vertex(new V3((99 / 100) * 0.5, 0, 0))\r\n\t\t\t// B*\r\n\t\t\tgl.vertex(new V3(0, (-108 / 100) * 0.5, 0))\r\n\t\t\tgl.vertex(new V3(0, (95 / 100) * 0.5, 0))\r\n\t\t\tgl.end()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"A*\", [1, 0, 0, 1], 0.05, \"center\", \"top\")\r\n\t\t\tgl.translate((-87 / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"-87\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.translate(((99 + 87) / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"99\", [0, 0, 0, 1], 0.05, \"right\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(90, 0, 0, 1)\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"B*\", [1, 0, 0, 1], 0.05, \"center\", \"top\")\r\n\t\t\tgl.translate((-108 / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"-108\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.translate(((95 + 108) / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"95\", [0, 0, 0, 1], 0.05, \"right\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(-135, 0, 0, 1)\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"0\", [0, 0, 0, 1], 0.05, \"left\", \"bottom\")\r\n\t\t\tgl.translate(0, 0.5, 0)\r\n\t\t\tgl.renderText(\"blue\", [0, 0, 1, 1], 0.05, \"left\", \"middle\")\r\n\t\t\tgl.translate(0, 0.5, 0)\r\n\t\t\tgl.renderText(\"255\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\t\t},\r\n\t\tconvert(color: Color) {\r\n\t\t\tconst [l, a, b] = color.lab()\r\n\t\t\treturn new V3((a / 100) * 0.5, (b / 100) * 0.5, l / 100)\r\n\t\t},\r\n\t\ttitle: \"CIELAB\",\r\n\t\tchildren: (\r\n\t\t\t<>\r\n\t\t\t\tCIELAB color space. Much closer to perceptual uniform that RGB or HSL.{\" \"}\r\n\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/CIELAB_color_space\">wiki</a>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\txyz: {\r\n\t\trender(gl: TSGLContext) {\r\n\t\t\tgl.begin(gl.LINES)\r\n\t\t\tgl.color(\"black\")\r\n\t\t\t// L*\r\n\t\t\tgl.vertex(V3.O)\r\n\t\t\tgl.vertex(new V3(0, 0, 1))\r\n\t\t\t// A*\r\n\t\t\tgl.vertex(new V3((-87 / 100) * 0.5, 0, 0))\r\n\t\t\tgl.vertex(new V3((99 / 100) * 0.5, 0, 0))\r\n\t\t\t// B*\r\n\t\t\tgl.vertex(new V3(0, (-108 / 100) * 0.5, 0))\r\n\t\t\tgl.vertex(new V3(0, (95 / 100) * 0.5, 0))\r\n\t\t\tgl.end()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"X\", [1, 0, 0, 1], 0.05, \"center\", \"top\")\r\n\t\t\tgl.translate((-87 / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"-87\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.translate(((99 + 87) / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"99\", [0, 0, 0, 1], 0.05, \"right\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(90, 0, 0, 1)\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"Y\", [1, 0, 0, 1], 0.05, \"center\", \"top\")\r\n\t\t\tgl.translate((-108 / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"-108\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.translate(((95 + 108) / 100) * 0.5, 0, 0)\r\n\t\t\tgl.renderText(\"95\", [0, 0, 0, 1], 0.05, \"right\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tgl.rotate(-135, 0, 0, 1)\r\n\t\t\tgl.rotate(90, 1, 0, 0)\r\n\r\n\t\t\tgl.renderText(\"0\", [0, 0, 0, 1], 0.05, \"left\", \"bottom\")\r\n\t\t\tgl.translate(0, 0.5, 0)\r\n\t\t\tgl.renderText(\"Z\", [0, 0, 1, 1], 0.05, \"left\", \"middle\")\r\n\t\t\tgl.translate(0, 0.5, 0)\r\n\t\t\tgl.renderText(\"255\", [0, 0, 0, 1], 0.05, \"left\", \"top\")\r\n\t\t\tgl.popMatrix()\r\n\t\t},\r\n\t\tconvert(color: Color) {\r\n\t\t\tconst [x, y, z] = color.xyz()\r\n\t\t\treturn new V3(x * 0.5, y * 0.5, z)\r\n\t\t},\r\n\t\ttitle: \"XYZ\",\r\n\t\tchildren: (\r\n\t\t\t<>\r\n\t\t\t\tCIELAB color space. Much closer to perceptual uniform that RGB or HSL.{\" \"}\r\n\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/CIELAB_color_space\">wiki</a>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n}\r\n","/*\r\n\r\n+-----------------------------------------------------------------+\r\n|   Created by Chirag Mehta - http://chir.ag/tech/download/ntc    |\r\n|-----------------------------------------------------------------|\r\n|               ntc js (Name that Color JavaScript)               |\r\n+-----------------------------------------------------------------+\r\n\r\nAll the functions, code, lists etc. have been written specifically\r\nfor the Name that Color JavaScript by Chirag Mehta unless otherwise\r\nspecified.\r\n\r\nThis script is released under the: Creative Commons License:\r\nAttribution 2.5 http://creativecommons.org/licenses/by/2.5/\r\n\r\nSample Usage:\r\n\r\n  <script type=\"text/javascript\" src=\"ntc.js\"></script>\r\n\r\n  <script type=\"text/javascript\">\r\n\r\n    var n_match  = ntc.name(\"#6195ED\");\r\n    n_rgb = n_match[0]; // This is the RGB value of the closest matching color\r\n    n_name = n_match[1]; // This is the text string for the name of the match\r\n    n_shade_rgb = n_match[2]; // This is the RGB value for the name of colors shade\r\n    n_shade_name = n_match[3]; // This is the text string for the name of colors shade\r\n    n_exactmatch = n_match[4]; // True if exact color match, False if close-match\r\n\r\n    alert(n_match);\r\n\r\n  </script>\r\n\r\n*/\r\n\r\nvar ntc = {\r\n\tinit: function() {\r\n\t\tvar color, rgb, hsl\r\n\t\tfor (var i = 0; i < ntc.names.length; i++) {\r\n\t\t\tcolor = \"#\" + ntc.names[i][0]\r\n\t\t\trgb = ntc.rgb(color)\r\n\t\t\thsl = ntc.hsl(color)\r\n\t\t\tntc.names[i].push(rgb[0], rgb[1], rgb[2], hsl[0], hsl[1], hsl[2])\r\n\t\t}\r\n\t},\r\n\r\n\tname: function(color) {\r\n\t\tcolor = color.toUpperCase()\r\n\t\tif (color.length < 3 || color.length > 7) return [\"#000000\", \"Invalid Color: \" + color, \"#000000\", \"\", false]\r\n\t\tif (color.length % 3 == 0) color = \"#\" + color\r\n\t\tif (color.length == 4)\r\n\t\t\tcolor =\r\n\t\t\t\t\"#\" +\r\n\t\t\t\tcolor.substr(1, 1) +\r\n\t\t\t\tcolor.substr(1, 1) +\r\n\t\t\t\tcolor.substr(2, 1) +\r\n\t\t\t\tcolor.substr(2, 1) +\r\n\t\t\t\tcolor.substr(3, 1) +\r\n\t\t\t\tcolor.substr(3, 1)\r\n\r\n\t\tvar rgb = ntc.rgb(color)\r\n\t\tvar r = rgb[0],\r\n\t\t\tg = rgb[1],\r\n\t\t\tb = rgb[2]\r\n\t\tvar hsl = ntc.hsl(color)\r\n\t\tvar h = hsl[0],\r\n\t\t\ts = hsl[1],\r\n\t\t\tl = hsl[2]\r\n\t\tvar ndf1 = 0\r\n\t\tndf2 = 0\r\n\t\tndf = 0\r\n\t\tvar cl = -1,\r\n\t\t\tdf = -1\r\n\r\n\t\tfor (var i = 0; i < ntc.names.length; i++) {\r\n\t\t\tif (color == \"#\" + ntc.names[i][0])\r\n\t\t\t\treturn [\"#\" + ntc.names[i][0], ntc.names[i][1], ntc.shadergb(ntc.names[i][2]), ntc.names[i][2], true]\r\n\r\n\t\t\tndf1 =\r\n\t\t\t\tMath.pow(r - ntc.names[i][3], 2) + Math.pow(g - ntc.names[i][4], 2) + Math.pow(b - ntc.names[i][5], 2)\r\n\t\t\tndf2 =\r\n\t\t\t\tMath.abs(Math.pow(h - ntc.names[i][6], 2)) +\r\n\t\t\t\tMath.pow(s - ntc.names[i][7], 2) +\r\n\t\t\t\tMath.abs(Math.pow(l - ntc.names[i][8], 2))\r\n\t\t\tndf = ndf1 + ndf2 * 2\r\n\t\t\tif (df < 0 || df > ndf) {\r\n\t\t\t\tdf = ndf\r\n\t\t\t\tcl = i\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn cl < 0\r\n\t\t\t? [\"#000000\", \"Invalid Color: \" + color, \"#000000\", \"\", false]\r\n\t\t\t: [\"#\" + ntc.names[cl][0], ntc.names[cl][1], ntc.shadergb(ntc.names[cl][2]), ntc.names[cl][2], false]\r\n\t},\r\n\r\n\t// adopted from: Farbtastic 1.2\r\n\t// http://acko.net/dev/farbtastic\r\n\thsl: function(color) {\r\n\t\tvar rgb = [\r\n\t\t\tparseInt(\"0x\" + color.substring(1, 3)) / 255,\r\n\t\t\tparseInt(\"0x\" + color.substring(3, 5)) / 255,\r\n\t\t\tparseInt(\"0x\" + color.substring(5, 7)) / 255,\r\n\t\t]\r\n\t\tvar min, max, delta, h, s, l\r\n\t\tvar r = rgb[0],\r\n\t\t\tg = rgb[1],\r\n\t\t\tb = rgb[2]\r\n\r\n\t\tmin = Math.min(r, Math.min(g, b))\r\n\t\tmax = Math.max(r, Math.max(g, b))\r\n\t\tdelta = max - min\r\n\t\tl = (min + max) / 2\r\n\r\n\t\ts = 0\r\n\t\tif (l > 0 && l < 1) s = delta / (l < 0.5 ? 2 * l : 2 - 2 * l)\r\n\r\n\t\th = 0\r\n\t\tif (delta > 0) {\r\n\t\t\tif (max == r && max != g) h += (g - b) / delta\r\n\t\t\tif (max == g && max != b) h += 2 + (b - r) / delta\r\n\t\t\tif (max == b && max != r) h += 4 + (r - g) / delta\r\n\t\t\th /= 6\r\n\t\t}\r\n\t\treturn [parseInt(h * 255), parseInt(s * 255), parseInt(l * 255)]\r\n\t},\r\n\r\n\t// adopted from: Farbtastic 1.2\r\n\t// http://acko.net/dev/farbtastic\r\n\trgb: function(color) {\r\n\t\treturn [\r\n\t\t\tparseInt(\"0x\" + color.substring(1, 3)),\r\n\t\t\tparseInt(\"0x\" + color.substring(3, 5)),\r\n\t\t\tparseInt(\"0x\" + color.substring(5, 7)),\r\n\t\t]\r\n\t},\r\n\r\n\tshadergb: function(shadename) {\r\n\t\tfor (var i = 0; i < ntc.shades.length; i++) {\r\n\t\t\tif (shadename == ntc.shades[i][1]) return \"#\" + ntc.shades[i][0]\r\n\t\t}\r\n\t\treturn \"#000000\"\r\n\t},\r\n\r\n\tshades: [\r\n\t\t[\"FF0000\", \"Red\"],\r\n\t\t[\"FFA500\", \"Orange\"],\r\n\t\t[\"FFFF00\", \"Yellow\"],\r\n\t\t[\"008000\", \"Green\"],\r\n\t\t[\"0000FF\", \"Blue\"],\r\n\t\t[\"EE82EE\", \"Violet\"],\r\n\t\t[\"A52A2A\", \"Brown\"],\r\n\t\t[\"000000\", \"Black\"],\r\n\t\t[\"808080\", \"Grey\"],\r\n\t\t[\"FFFFFF\", \"White\"],\r\n\t],\r\n\r\n\tnames: [\r\n\t\t[\"35312C\", \"Acadia\", \"Brown\"],\r\n\t\t[\"75AA94\", \"Acapulco\", \"Green\"],\r\n\t\t[\"C0E8D5\", \"Aero Blue\", \"Green\"],\r\n\t\t[\"745085\", \"Affair\", \"Violet\"],\r\n\t\t[\"905E26\", \"Afghan Tan\", \"Yellow\"],\r\n\t\t[\"5D8AA8\", \"Air Force Blue\", \"Blue\"],\r\n\t\t[\"BEB29A\", \"Akaroa\", \"Yellow\"],\r\n\t\t[\"F2F0E6\", \"Alabaster\", \"Grey\"],\r\n\t\t[\"E1DACB\", \"Albescent White\", \"Yellow\"],\r\n\t\t[\"954E2C\", \"Alert Tan\", \"Orange\"],\r\n\t\t[\"F0F8FF\", \"Alice Blue\", \"Blue\"],\r\n\t\t[\"E32636\", \"Alizarin\", \"Red\"],\r\n\t\t[\"1F6A7D\", \"Allports\", \"Blue\"],\r\n\t\t[\"EED9C4\", \"Almond\", \"Yellow\"],\r\n\t\t[\"9A8678\", \"Almond Frost\", \"Brown\"],\r\n\t\t[\"AD8A3B\", \"Alpine\", \"Yellow\"],\r\n\t\t[\"CDC6C5\", \"Alto\", \"Grey\"],\r\n\t\t[\"848789\", \"Aluminium\", \"Grey\"],\r\n\t\t[\"E52B50\", \"Amaranth\", \"Red\"],\r\n\t\t[\"387B54\", \"Amazon\", \"Green\"],\r\n\t\t[\"FFBF00\", \"Amber\", \"Yellow\"],\r\n\t\t[\"8A7D72\", \"Americano\", \"Brown\"],\r\n\t\t[\"9966CC\", \"Amethyst\", \"Violet\"],\r\n\t\t[\"95879C\", \"Amethyst Smoke\", \"Violet\"],\r\n\t\t[\"F5E6EA\", \"Amour\", \"Violet\"],\r\n\t\t[\"7D9D72\", \"Amulet\", \"Green\"],\r\n\t\t[\"8CCEEA\", \"Anakiwa\", \"Blue\"],\r\n\t\t[\"6C461F\", \"Antique Brass\", \"Orange\"],\r\n\t\t[\"FAEBD7\", \"Antique White\", \"White\"],\r\n\t\t[\"C68E3F\", \"Anzac\", \"Yellow\"],\r\n\t\t[\"D3A95C\", \"Apache\", \"Yellow\"],\r\n\t\t[\"66B348\", \"Apple\", \"Green\"],\r\n\t\t[\"A95249\", \"Apple Blossom\", \"Red\"],\r\n\t\t[\"DEEADC\", \"Apple Green\", \"Green\"],\r\n\t\t[\"FBCEB1\", \"Apricot\", \"Orange\"],\r\n\t\t[\"F7F0DB\", \"Apricot White\", \"Yellow\"],\r\n\t\t[\"00FFFF\", \"Aqua\", \"Blue\"],\r\n\t\t[\"D9DDD5\", \"Aqua Haze\", \"Grey\"],\r\n\t\t[\"E8F3E8\", \"Aqua Spring\", \"Green\"],\r\n\t\t[\"DBE4DC\", \"Aqua Squeeze\", \"Grey\"],\r\n\t\t[\"7FFFD4\", \"Aquamarine\", \"Blue\"],\r\n\t\t[\"274A5D\", \"Arapawa\", \"Blue\"],\r\n\t\t[\"484A46\", \"Armadillo\", \"Grey\"],\r\n\t\t[\"4B5320\", \"Army green\", \"Green\"],\r\n\t\t[\"827A67\", \"Arrowtown\", \"Yellow\"],\r\n\t\t[\"3B444B\", \"Arsenic\", \"Grey\"],\r\n\t\t[\"BEBAA7\", \"Ash\", \"Green\"],\r\n\t\t[\"7BA05B\", \"Asparagus\", \"Green\"],\r\n\t\t[\"EDD5A6\", \"Astra\", \"Yellow\"],\r\n\t\t[\"376F89\", \"Astral\", \"Blue\"],\r\n\t\t[\"445172\", \"Astronaut\", \"Blue\"],\r\n\t\t[\"214559\", \"Astronaut Blue\", \"Blue\"],\r\n\t\t[\"DCDDDD\", \"Athens Grey\", \"Grey\"],\r\n\t\t[\"D5CBB2\", \"Aths Special\", \"Yellow\"],\r\n\t\t[\"9CD03B\", \"Atlantis\", \"Green\"],\r\n\t\t[\"2B797A\", \"Atoll\", \"Green\"],\r\n\t\t[\"3D4B52\", \"Atomic\", \"Blue\"],\r\n\t\t[\"FF9966\", \"Atomic Tangerine\", \"Orange\"],\r\n\t\t[\"9E6759\", \"Au Chico\", \"Brown\"],\r\n\t\t[\"372528\", \"Aubergine\", \"Brown\"],\r\n\t\t[\"712F2C\", \"Auburn\", \"Brown\"],\r\n\t\t[\"EFF8AA\", \"Australian Mint\", \"Green\"],\r\n\t\t[\"95986B\", \"Avocado\", \"Green\"],\r\n\t\t[\"63775A\", \"Axolotl\", \"Green\"],\r\n\t\t[\"F9C0C4\", \"Azalea\", \"Red\"],\r\n\t\t[\"293432\", \"Aztec\", \"Green\"],\r\n\t\t[\"F0FFFF\", \"Azure\", \"Blue\"],\r\n\t\t[\"6FFFFF\", \"Baby Blue\", \"Blue\"],\r\n\t\t[\"25597F\", \"Bahama Blue\", \"Blue\"],\r\n\t\t[\"A9C01C\", \"Bahia\", \"Green\"],\r\n\t\t[\"5C3317\", \"Baker's Chocolate\", \"Brown\"],\r\n\t\t[\"849CA9\", \"Bali Hai\", \"Blue\"],\r\n\t\t[\"3C3D3E\", \"Baltic Sea\", \"Grey\"],\r\n\t\t[\"FBE7B2\", \"Banana Mania\", \"Yellow\"],\r\n\t\t[\"878466\", \"Bandicoot\", \"Green\"],\r\n\t\t[\"D2C61F\", \"Barberry\", \"Green\"],\r\n\t\t[\"B6935C\", \"Barley Corn\", \"Yellow\"],\r\n\t\t[\"F7E5B7\", \"Barley White\", \"Yellow\"],\r\n\t\t[\"452E39\", \"Barossa\", \"Violet\"],\r\n\t\t[\"2C2C32\", \"Bastille\", \"Blue\"],\r\n\t\t[\"51574F\", \"Battleship Grey\", \"Grey\"],\r\n\t\t[\"7BB18D\", \"Bay Leaf\", \"Green\"],\r\n\t\t[\"353E64\", \"Bay Of Many\", \"Blue\"],\r\n\t\t[\"8F7777\", \"Bazaar\", \"Brown\"],\r\n\t\t[\"EBB9B3\", \"Beauty Bush\", \"Red\"],\r\n\t\t[\"926F5B\", \"Beaver\", \"Brown\"],\r\n\t\t[\"E9D7AB\", \"Beeswax\", \"Yellow\"],\r\n\t\t[\"F5F5DC\", \"Beige\", \"Brown\"],\r\n\t\t[\"86D2C1\", \"Bermuda\", \"Green\"],\r\n\t\t[\"6F8C9F\", \"Bermuda Grey\", \"Blue\"],\r\n\t\t[\"BCBFA8\", \"Beryl Green\", \"Green\"],\r\n\t\t[\"F4EFE0\", \"Bianca\", \"Yellow\"],\r\n\t\t[\"334046\", \"Big Stone\", \"Blue\"],\r\n\t\t[\"3E8027\", \"Bilbao\", \"Green\"],\r\n\t\t[\"AE99D2\", \"Biloba Flower\", \"Violet\"],\r\n\t\t[\"3F3726\", \"Birch\", \"Yellow\"],\r\n\t\t[\"D0C117\", \"Bird Flower\", \"Green\"],\r\n\t\t[\"2F3C53\", \"Biscay\", \"Blue\"],\r\n\t\t[\"486C7A\", \"Bismark\", \"Blue\"],\r\n\t\t[\"B5AC94\", \"Bison Hide\", \"Yellow\"],\r\n\t\t[\"FFE4C4\", \"Bisque\", \"Brown\"],\r\n\t\t[\"3D2B1F\", \"Bistre\", \"Brown\"],\r\n\t\t[\"88896C\", \"Bitter\", \"Green\"],\r\n\t\t[\"D2DB32\", \"Bitter Lemon\", \"Green\"],\r\n\t\t[\"FE6F5E\", \"Bittersweet\", \"Orange\"],\r\n\t\t[\"E7D2C8\", \"Bizarre\", \"Orange\"],\r\n\t\t[\"000000\", \"Black\", \"Black\"],\r\n\t\t[\"232E26\", \"Black Bean\", \"Green\"],\r\n\t\t[\"2C3227\", \"Black Forest\", \"Green\"],\r\n\t\t[\"E0DED7\", \"Black Haze\", \"Grey\"],\r\n\t\t[\"332C22\", \"Black Magic\", \"Brown\"],\r\n\t\t[\"383740\", \"Black Marlin\", \"Blue\"],\r\n\t\t[\"1E272C\", \"Black Pearl\", \"Blue\"],\r\n\t\t[\"2C2D3C\", \"Black Rock\", \"Blue\"],\r\n\t\t[\"532934\", \"Black Rose\", \"Red\"],\r\n\t\t[\"24252B\", \"Black Russian\", \"Grey\"],\r\n\t\t[\"E5E6DF\", \"Black Squeeze\", \"Grey\"],\r\n\t\t[\"E5E4DB\", \"Black White\", \"Grey\"],\r\n\t\t[\"43182F\", \"Blackberry\", \"Violet\"],\r\n\t\t[\"2E183B\", \"Blackcurrant\", \"Violet\"],\r\n\t\t[\"D9D0C1\", \"Blanc\", \"Yellow\"],\r\n\t\t[\"FFEBCD\", \"Blanched Almond\", \"Brown\"],\r\n\t\t[\"EBE1CE\", \"Bleach White\", \"Yellow\"],\r\n\t\t[\"A3E3ED\", \"Blizzard Blue\", \"Blue\"],\r\n\t\t[\"DFB1B6\", \"Blossom\", \"Red\"],\r\n\t\t[\"0000FF\", \"Blue\", \"Blue\"],\r\n\t\t[\"62777E\", \"Blue Bayoux\", \"Blue\"],\r\n\t\t[\"9999CC\", \"Blue Bell\", \"Blue\"],\r\n\t\t[\"E3D6E9\", \"Blue Chalk\", \"Violet\"],\r\n\t\t[\"262B2F\", \"Blue Charcoal\", \"Blue\"],\r\n\t\t[\"408F90\", \"Blue Chill\", \"Green\"],\r\n\t\t[\"4B2D72\", \"Blue Diamond\", \"Violet\"],\r\n\t\t[\"35514F\", \"Blue Dianne\", \"Green\"],\r\n\t\t[\"4B3C8E\", \"Blue Gem\", \"Violet\"],\r\n\t\t[\"BDBACE\", \"Blue Haze\", \"Violet\"],\r\n\t\t[\"00626F\", \"Blue Lagoon\", \"Green\"],\r\n\t\t[\"6A5BB1\", \"Blue Marguerite\", \"Violet\"],\r\n\t\t[\"D8F0D2\", \"Blue Romance\", \"Green\"],\r\n\t\t[\"78857A\", \"Blue Smoke\", \"Green\"],\r\n\t\t[\"166461\", \"Blue Stone\", \"Green\"],\r\n\t\t[\"8A2BE2\", \"Blue Violet\", \"Violet\"],\r\n\t\t[\"1E3442\", \"Blue Whale\", \"Blue\"],\r\n\t\t[\"3C4354\", \"Blue Zodiac\", \"Blue\"],\r\n\t\t[\"305C71\", \"Blumine\", \"Blue\"],\r\n\t\t[\"B55067\", \"Blush\", \"Red\"],\r\n\t\t[\"2A2725\", \"Bokara Grey\", \"Grey\"],\r\n\t\t[\"79443B\", \"Bole\", \"Brown\"],\r\n\t\t[\"AEAEAD\", \"Bombay\", \"Grey\"],\r\n\t\t[\"DFD7D2\", \"Bon Jour\", \"Grey\"],\r\n\t\t[\"0095B6\", \"Bondi Blue\", \"Blue\"],\r\n\t\t[\"DBC2AB\", \"Bone\", \"Orange\"],\r\n\t\t[\"4C1C24\", \"Bordeaux\", \"Red\"],\r\n\t\t[\"4C3D4E\", \"Bossanova\", \"Violet\"],\r\n\t\t[\"438EAC\", \"Boston Blue\", \"Blue\"],\r\n\t\t[\"92ACB4\", \"Botticelli\", \"Blue\"],\r\n\t\t[\"254636\", \"Bottle Green\", \"Green\"],\r\n\t\t[\"7C817C\", \"Boulder\", \"Grey\"],\r\n\t\t[\"A78199\", \"Bouquet\", \"Violet\"],\r\n\t\t[\"AF6C3E\", \"Bourbon\", \"Orange\"],\r\n\t\t[\"5B3D27\", \"Bracken\", \"Brown\"],\r\n\t\t[\"DCB68A\", \"Brandy\", \"Orange\"],\r\n\t\t[\"C07C40\", \"Brandy Punch\", \"Orange\"],\r\n\t\t[\"B6857A\", \"Brandy Rose\", \"Red\"],\r\n\t\t[\"B5A642\", \"Brass\", \"Yellow\"],\r\n\t\t[\"517B78\", \"Breaker Bay\", \"Green\"],\r\n\t\t[\"C62D42\", \"Brick Red\", \"Red\"],\r\n\t\t[\"F8EBDD\", \"Bridal Heath\", \"Orange\"],\r\n\t\t[\"FAE6DF\", \"Bridesmaid\", \"Orange\"],\r\n\t\t[\"66FF00\", \"Bright Green\", \"Green\"],\r\n\t\t[\"57595D\", \"Bright Grey\", \"Grey\"],\r\n\t\t[\"922A31\", \"Bright Red\", \"Red\"],\r\n\t\t[\"ECBD2C\", \"Bright Sun\", \"Yellow\"],\r\n\t\t[\"08E8DE\", \"Bright Turquoise\", \"Blue\"],\r\n\t\t[\"FF55A3\", \"Brilliant Rose\", \"Red\"],\r\n\t\t[\"FB607F\", \"Brink Pink\", \"Red\"],\r\n\t\t[\"004225\", \"British Racing Green\", \"Green\"],\r\n\t\t[\"A79781\", \"Bronco\", \"Brown\"],\r\n\t\t[\"CD7F32\", \"Bronze\", \"Brown\"],\r\n\t\t[\"584C25\", \"Bronze Olive\", \"Yellow\"],\r\n\t\t[\"434C28\", \"Bronzetone\", \"Yellow\"],\r\n\t\t[\"EECC24\", \"Broom\", \"Yellow\"],\r\n\t\t[\"A52A2A\", \"Brown\", \"Brown\"],\r\n\t\t[\"53331E\", \"Brown Bramble\", \"Brown\"],\r\n\t\t[\"594537\", \"Brown Derby\", \"Brown\"],\r\n\t\t[\"3C241B\", \"Brown Pod\", \"Brown\"],\r\n\t\t[\"E6F2EA\", \"Bubbles\", \"Green\"],\r\n\t\t[\"6E5150\", \"Buccaneer\", \"Red\"],\r\n\t\t[\"A5A88F\", \"Bud\", \"Green\"],\r\n\t\t[\"BC9B1B\", \"Buddha Gold\", \"Yellow\"],\r\n\t\t[\"F0DC82\", \"Buff\", \"Yellow\"],\r\n\t\t[\"482427\", \"Bulgarian Rose\", \"Red\"],\r\n\t\t[\"75442B\", \"Bull Shot\", \"Orange\"],\r\n\t\t[\"292C2F\", \"Bunker\", \"Grey\"],\r\n\t\t[\"2B3449\", \"Bunting\", \"Blue\"],\r\n\t\t[\"800020\", \"Burgundy\", \"Red\"],\r\n\t\t[\"DEB887\", \"Burly Wood\", \"Brown\"],\r\n\t\t[\"234537\", \"Burnham\", \"Green\"],\r\n\t\t[\"D08363\", \"Burning Sand\", \"Orange\"],\r\n\t\t[\"582124\", \"Burnt Crimson\", \"Red\"],\r\n\t\t[\"FF7034\", \"Burnt Orange\", \"Orange\"],\r\n\t\t[\"E97451\", \"Burnt Sienna\", \"Brown\"],\r\n\t\t[\"8A3324\", \"Burnt Umber\", \"Brown\"],\r\n\t\t[\"DA9429\", \"Buttercup\", \"Yellow\"],\r\n\t\t[\"9D702E\", \"Buttered Rum\", \"Yellow\"],\r\n\t\t[\"68578C\", \"Butterfly Bush\", \"Violet\"],\r\n\t\t[\"F6E0A4\", \"Buttermilk\", \"Yellow\"],\r\n\t\t[\"F1EBDA\", \"Buttery White\", \"Yellow\"],\r\n\t\t[\"4A2E32\", \"Cab Sav\", \"Red\"],\r\n\t\t[\"CD526C\", \"Cabaret\", \"Red\"],\r\n\t\t[\"4C5544\", \"Cabbage Pont\", \"Green\"],\r\n\t\t[\"5B6F55\", \"Cactus\", \"Green\"],\r\n\t\t[\"5F9EA0\", \"Cadet Blue\", \"Blue\"],\r\n\t\t[\"984961\", \"Cadillac\", \"Red\"],\r\n\t\t[\"6A4928\", \"Cafe Royale\", \"Brown\"],\r\n\t\t[\"D5B185\", \"Calico\", \"Brown\"],\r\n\t\t[\"E98C3A\", \"California\", \"Orange\"],\r\n\t\t[\"3D7188\", \"Calypso\", \"Blue\"],\r\n\t\t[\"206937\", \"Camarone\", \"Green\"],\r\n\t\t[\"803A4B\", \"Camelot\", \"Red\"],\r\n\t\t[\"CCA483\", \"Cameo\", \"Brown\"],\r\n\t\t[\"4F4D32\", \"Camouflage\", \"Yellow\"],\r\n\t\t[\"78866B\", \"Camouflage Green\", \"Green\"],\r\n\t\t[\"D08A9B\", \"Can Can\", \"Red\"],\r\n\t\t[\"FFFF99\", \"Canary\", \"Yellow\"],\r\n\t\t[\"8E5164\", \"Cannon Pink\", \"Red\"],\r\n\t\t[\"4E5552\", \"Cape Cod\", \"Grey\"],\r\n\t\t[\"FEE0A5\", \"Cape Honey\", \"Yellow\"],\r\n\t\t[\"75482F\", \"Cape Palliser\", \"Orange\"],\r\n\t\t[\"AFC182\", \"Caper\", \"Green\"],\r\n\t\t[\"592720\", \"Caput Mortuum\", \"Brown\"],\r\n\t\t[\"FFD59A\", \"Caramel\", \"Yellow\"],\r\n\t\t[\"EBE5D5\", \"Cararra\", \"Green\"],\r\n\t\t[\"1B3427\", \"Cardin Green\", \"Green\"],\r\n\t\t[\"C41E3A\", \"Cardinal\", \"Red\"],\r\n\t\t[\"C99AA0\", \"Careys Pink\", \"Red\"],\r\n\t\t[\"00CC99\", \"Caribbean Green\", \"Green\"],\r\n\t\t[\"E68095\", \"Carissma\", \"Red\"],\r\n\t\t[\"F5F9CB\", \"Carla\", \"Green\"],\r\n\t\t[\"960018\", \"Carmine\", \"Red\"],\r\n\t\t[\"5B3A24\", \"Carnaby Tan\", \"Brown\"],\r\n\t\t[\"FFA6C9\", \"Carnation Pink\", \"Red\"],\r\n\t\t[\"F8DBE0\", \"Carousel Pink\", \"Red\"],\r\n\t\t[\"ED9121\", \"Carrot Orange\", \"Orange\"],\r\n\t\t[\"F0B253\", \"Casablanca\", \"Yellow\"],\r\n\t\t[\"3F545A\", \"Casal\", \"Blue\"],\r\n\t\t[\"8CA8A0\", \"Cascade\", \"Green\"],\r\n\t\t[\"D1B399\", \"Cashmere\", \"Brown\"],\r\n\t\t[\"AAB5B8\", \"Casper\", \"Blue\"],\r\n\t\t[\"44232F\", \"Castro\", \"Red\"],\r\n\t\t[\"273C5A\", \"Catalina Blue\", \"Blue\"],\r\n\t\t[\"E0E4DC\", \"Catskill White\", \"Grey\"],\r\n\t\t[\"E0B8B1\", \"Cavern Pink\", \"Red\"],\r\n\t\t[\"9271A7\", \"Ce Soir\", \"Violet\"],\r\n\t\t[\"463430\", \"Cedar\", \"Brown\"],\r\n\t\t[\"ACE1AF\", \"Celadon\", \"Green\"],\r\n\t\t[\"B4C04C\", \"Celery\", \"Green\"],\r\n\t\t[\"D2D2C0\", \"Celeste\", \"Green\"],\r\n\t\t[\"3A4E5F\", \"Cello\", \"Blue\"],\r\n\t\t[\"2B3F36\", \"Celtic\", \"Green\"],\r\n\t\t[\"857158\", \"Cement\", \"Brown\"],\r\n\t\t[\"DE3163\", \"Cerise\", \"Violet\"],\r\n\t\t[\"007BA7\", \"Cerulean\", \"Blue\"],\r\n\t\t[\"2A52BE\", \"Cerulean Blue\", \"Blue\"],\r\n\t\t[\"FDE9E0\", \"Chablis\", \"Red\"],\r\n\t\t[\"5A6E41\", \"Chalet Green\", \"Green\"],\r\n\t\t[\"DFC281\", \"Chalky\", \"Yellow\"],\r\n\t\t[\"475877\", \"Chambray\", \"Blue\"],\r\n\t\t[\"E8CD9A\", \"Chamois\", \"Yellow\"],\r\n\t\t[\"EED9B6\", \"Champagne\", \"Yellow\"],\r\n\t\t[\"EDB8C7\", \"Chantilly\", \"Red\"],\r\n\t\t[\"394043\", \"Charade\", \"Blue\"],\r\n\t\t[\"464646\", \"Charcoal\", \"Grey\"],\r\n\t\t[\"F8EADF\", \"Chardon\", \"Orange\"],\r\n\t\t[\"FFC878\", \"Chardonnay\", \"Yellow\"],\r\n\t\t[\"A4DCE6\", \"Charlotte\", \"Blue\"],\r\n\t\t[\"D0748B\", \"Charm\", \"Red\"],\r\n\t\t[\"7FFF00\", \"Chartreuse\", \"Green\"],\r\n\t\t[\"DFFF00\", \"Chartreuse Yellow\", \"Yellow\"],\r\n\t\t[\"419F59\", \"Chateau Green\", \"Green\"],\r\n\t\t[\"B3ABB6\", \"Chatelle\", \"Violet\"],\r\n\t\t[\"2C5971\", \"Chathams Blue\", \"Blue\"],\r\n\t\t[\"88A95B\", \"Chelsea Cucumber\", \"Green\"],\r\n\t\t[\"95532F\", \"Chelsea Gem\", \"Orange\"],\r\n\t\t[\"DEC371\", \"Chenin\", \"Yellow\"],\r\n\t\t[\"F5CD82\", \"Cherokee\", \"Yellow\"],\r\n\t\t[\"372D52\", \"Cherry Pie\", \"Violet\"],\r\n\t\t[\"F5D7DC\", \"Cherub\", \"Red\"],\r\n\t\t[\"B94E48\", \"Chestnut\", \"Brown\"],\r\n\t\t[\"666FB4\", \"Chetwode Blue\", \"Blue\"],\r\n\t\t[\"5B5D56\", \"Chicago\", \"Grey\"],\r\n\t\t[\"F0F5BB\", \"Chiffon\", \"Green\"],\r\n\t\t[\"D05E34\", \"Chilean Fire\", \"Orange\"],\r\n\t\t[\"F9F7DE\", \"Chilean Heath\", \"Green\"],\r\n\t\t[\"FBF3D3\", \"China Ivory\", \"Green\"],\r\n\t\t[\"B8AD8A\", \"Chino\", \"Yellow\"],\r\n\t\t[\"9DD3A8\", \"Chinook\", \"Green\"],\r\n\t\t[\"D2691E\", \"Chocolate\", \"Brown\"],\r\n\t\t[\"382161\", \"Christalle\", \"Violet\"],\r\n\t\t[\"71A91D\", \"Christi\", \"Green\"],\r\n\t\t[\"BF652E\", \"Christine\", \"Orange\"],\r\n\t\t[\"CAC7B7\", \"Chrome White\", \"Green\"],\r\n\t\t[\"7D4E38\", \"Cigar\", \"Brown\"],\r\n\t\t[\"242A2E\", \"Cinder\", \"Grey\"],\r\n\t\t[\"FBD7CC\", \"Cinderella\", \"Red\"],\r\n\t\t[\"E34234\", \"Cinnabar\", \"Red\"],\r\n\t\t[\"5D3B2E\", \"Cioccolato\", \"Brown\"],\r\n\t\t[\"8E9A21\", \"Citron\", \"Green\"],\r\n\t\t[\"9FB70A\", \"Citrus\", \"Green\"],\r\n\t\t[\"D2B3A9\", \"Clam Shell\", \"Orange\"],\r\n\t\t[\"6E2233\", \"Claret\", \"Red\"],\r\n\t\t[\"F4C8DB\", \"Classic Rose\", \"Violet\"],\r\n\t\t[\"897E59\", \"Clay Creek\", \"Yellow\"],\r\n\t\t[\"DFEFEA\", \"Clear Day\", \"Green\"],\r\n\t\t[\"463623\", \"Clinker\", \"Brown\"],\r\n\t\t[\"C2BCB1\", \"Cloud\", \"Yellow\"],\r\n\t\t[\"353E4F\", \"Cloud Burst\", \"Blue\"],\r\n\t\t[\"B0A99F\", \"Cloudy\", \"Brown\"],\r\n\t\t[\"47562F\", \"Clover\", \"Green\"],\r\n\t\t[\"0047AB\", \"Cobalt\", \"Blue\"],\r\n\t\t[\"4F3835\", \"Cocoa Bean\", \"Red\"],\r\n\t\t[\"35281E\", \"Cocoa Brown\", \"Brown\"],\r\n\t\t[\"E1DABB\", \"Coconut Cream\", \"Green\"],\r\n\t\t[\"2D3032\", \"Cod Grey\", \"Grey\"],\r\n\t\t[\"726751\", \"Coffee\", \"Yellow\"],\r\n\t\t[\"362D26\", \"Coffee Bean\", \"Brown\"],\r\n\t\t[\"9A463D\", \"Cognac\", \"Red\"],\r\n\t\t[\"3C2F23\", \"Cola\", \"Brown\"],\r\n\t\t[\"9D8ABF\", \"Cold Purple\", \"Violet\"],\r\n\t\t[\"CAB5B2\", \"Cold Turkey\", \"Red\"],\r\n\t\t[\"9BDDFF\", \"Columbia Blue\", \"Blue\"],\r\n\t\t[\"636373\", \"Comet\", \"Blue\"],\r\n\t\t[\"4C785C\", \"Como\", \"Green\"],\r\n\t\t[\"A0B1AE\", \"Conch\", \"Green\"],\r\n\t\t[\"827F79\", \"Concord\", \"Grey\"],\r\n\t\t[\"D2D1CD\", \"Concrete\", \"Grey\"],\r\n\t\t[\"DDCB46\", \"Confetti\", \"Green\"],\r\n\t\t[\"654D49\", \"Congo Brown\", \"Brown\"],\r\n\t\t[\"B1DD52\", \"Conifer\", \"Green\"],\r\n\t\t[\"C16F68\", \"Contessa\", \"Red\"],\r\n\t\t[\"DA8A67\", \"Copper\", \"Red\"],\r\n\t\t[\"77422C\", \"Copper Canyon\", \"Orange\"],\r\n\t\t[\"996666\", \"Copper Rose\", \"Violet\"],\r\n\t\t[\"95524C\", \"Copper Rust\", \"Red\"],\r\n\t\t[\"FF7F50\", \"Coral\", \"Orange\"],\r\n\t\t[\"F5D0C9\", \"Coral Candy\", \"Red\"],\r\n\t\t[\"FF4040\", \"Coral Red\", \"Red\"],\r\n\t\t[\"AB6E67\", \"Coral Tree\", \"Red\"],\r\n\t\t[\"404D49\", \"Corduroy\", \"Green\"],\r\n\t\t[\"BBB58D\", \"Coriander\", \"Green\"],\r\n\t\t[\"5A4C42\", \"Cork\", \"Brown\"],\r\n\t\t[\"FBEC5D\", \"Corn\", \"Yellow\"],\r\n\t\t[\"F8F3C4\", \"Corn Field\", \"Green\"],\r\n\t\t[\"42426F\", \"Corn Flower Blue\", \"Blue\"],\r\n\t\t[\"8D702A\", \"Corn Harvest\", \"Yellow\"],\r\n\t\t[\"FFF8DC\", \"Corn Silk\", \"Yellow\"],\r\n\t\t[\"93CCEA\", \"Cornflower\", \"Blue\"],\r\n\t\t[\"6495ED\", \"Cornflower Blue\", \"Blue\"],\r\n\t\t[\"E9BA81\", \"Corvette\", \"Orange\"],\r\n\t\t[\"794D60\", \"Cosmic\", \"Violet\"],\r\n\t\t[\"E1F8E7\", \"Cosmic Latte\", \"White\"],\r\n\t\t[\"FCD5CF\", \"Cosmos\", \"Red\"],\r\n\t\t[\"625D2A\", \"Costa Del Sol\", \"Green\"],\r\n\t\t[\"FFB7D5\", \"Cotton Candy\", \"Red\"],\r\n\t\t[\"BFBAAF\", \"Cotton Seed\", \"Yellow\"],\r\n\t\t[\"1B4B35\", \"County Green\", \"Green\"],\r\n\t\t[\"443736\", \"Cowboy\", \"Brown\"],\r\n\t\t[\"87382F\", \"Crab Apple\", \"Red\"],\r\n\t\t[\"A65648\", \"Crail\", \"Red\"],\r\n\t\t[\"DB5079\", \"Cranberry\", \"Red\"],\r\n\t\t[\"4D3E3C\", \"Crater Brown\", \"Brown\"],\r\n\t\t[\"FFFDD0\", \"Cream\", \"White\"],\r\n\t\t[\"FFE39B\", \"Cream Brulee\", \"Yellow\"],\r\n\t\t[\"EEC051\", \"Cream Can\", \"Yellow\"],\r\n\t\t[\"393227\", \"Creole\", \"Brown\"],\r\n\t\t[\"77712B\", \"Crete\", \"Green\"],\r\n\t\t[\"DC143C\", \"Crimson\", \"Red\"],\r\n\t\t[\"706950\", \"Crocodile\", \"Yellow\"],\r\n\t\t[\"763C33\", \"Crown Of Thorns\", \"Red\"],\r\n\t\t[\"B4E2D5\", \"Cruise\", \"Green\"],\r\n\t\t[\"165B31\", \"Crusoe\", \"Green\"],\r\n\t\t[\"F38653\", \"Crusta\", \"Orange\"],\r\n\t\t[\"784430\", \"Cumin\", \"Orange\"],\r\n\t\t[\"F5F4C1\", \"Cumulus\", \"Green\"],\r\n\t\t[\"F5B2C5\", \"Cupid\", \"Red\"],\r\n\t\t[\"3D85B8\", \"Curious Blue\", \"Blue\"],\r\n\t\t[\"5C8173\", \"Cutty Sark\", \"Green\"],\r\n\t\t[\"0F4645\", \"Cyprus\", \"Green\"],\r\n\t\t[\"EDD2A4\", \"Dairy Cream\", \"Yellow\"],\r\n\t\t[\"5B3E90\", \"Daisy Bush\", \"Violet\"],\r\n\t\t[\"664A2D\", \"Dallas\", \"Brown\"],\r\n\t\t[\"FED85D\", \"Dandelion\", \"Yellow\"],\r\n\t\t[\"5B89C0\", \"Danube\", \"Blue\"],\r\n\t\t[\"00008B\", \"Dark Blue\", \"Blue\"],\r\n\t\t[\"654321\", \"Dark Brown\", \"Brown\"],\r\n\t\t[\"08457E\", \"Dark Cerulean\", \"Blue\"],\r\n\t\t[\"986960\", \"Dark Chestnut\", \"Red\"],\r\n\t\t[\"CD5B45\", \"Dark Coral\", \"Orange\"],\r\n\t\t[\"008B8B\", \"Dark Cyan\", \"Green\"],\r\n\t\t[\"B8860B\", \"Dark Goldenrod\", \"Yellow\"],\r\n\t\t[\"A9A9A9\", \"Dark Gray\", \"Grey\"],\r\n\t\t[\"013220\", \"Dark Green\", \"Green\"],\r\n\t\t[\"4A766E\", \"Dark Green Copper\", \"Green\"],\r\n\t\t[\"BDB76B\", \"Dark Khaki\", \"Yellow\"],\r\n\t\t[\"8B008B\", \"Dark Magenta\", \"Violet\"],\r\n\t\t[\"556B2F\", \"Dark Olive Green\", \"Green\"],\r\n\t\t[\"FF8C00\", \"Dark Orange\", \"Orange\"],\r\n\t\t[\"9932CC\", \"Dark Orchid\", \"Violet\"],\r\n\t\t[\"03C03C\", \"Dark Pastel Green\", \"Green\"],\r\n\t\t[\"E75480\", \"Dark Pink\", \"Red\"],\r\n\t\t[\"871F78\", \"Dark Purple\", \"Violet\"],\r\n\t\t[\"8B0000\", \"Dark Red\", \"Red\"],\r\n\t\t[\"45362B\", \"Dark Rum\", \"Brown\"],\r\n\t\t[\"E9967A\", \"Dark Salmon\", \"Orange\"],\r\n\t\t[\"8FBC8F\", \"Dark Sea Green\", \"Green\"],\r\n\t\t[\"465352\", \"Dark Slate\", \"Green\"],\r\n\t\t[\"483D8B\", \"Dark Slate Blue\", \"Blue\"],\r\n\t\t[\"2F4F4F\", \"Dark Slate Grey\", \"Grey\"],\r\n\t\t[\"177245\", \"Dark Spring Green\", \"Green\"],\r\n\t\t[\"97694F\", \"Dark Tan\", \"Brown\"],\r\n\t\t[\"FFA812\", \"Dark Tangerine\", \"Orange\"],\r\n\t\t[\"00CED1\", \"Dark Turquoise\", \"Blue\"],\r\n\t\t[\"9400D3\", \"Dark Violet\", \"Violet\"],\r\n\t\t[\"855E42\", \"Dark Wood\", \"Brown\"],\r\n\t\t[\"788878\", \"Davy's Grey\", \"Grey\"],\r\n\t\t[\"9F9D91\", \"Dawn\", \"Green\"],\r\n\t\t[\"E6D6CD\", \"Dawn Pink\", \"Orange\"],\r\n\t\t[\"85CA87\", \"De York\", \"Green\"],\r\n\t\t[\"CCCF82\", \"Deco\", \"Green\"],\r\n\t\t[\"E36F8A\", \"Deep Blush\", \"Red\"],\r\n\t\t[\"51412D\", \"Deep Bronze\", \"Brown\"],\r\n\t\t[\"DA3287\", \"Deep Cerise\", \"Violet\"],\r\n\t\t[\"193925\", \"Deep Fir\", \"Green\"],\r\n\t\t[\"343467\", \"Deep Koamaru\", \"Violet\"],\r\n\t\t[\"9955BB\", \"Deep Lilac\", \"Violet\"],\r\n\t\t[\"CC00CC\", \"Deep Magenta\", \"Violet\"],\r\n\t\t[\"FF1493\", \"Deep Pink\", \"Red\"],\r\n\t\t[\"167E65\", \"Deep Sea\", \"Green\"],\r\n\t\t[\"00BFFF\", \"Deep Sky Blue\", \"Blue\"],\r\n\t\t[\"19443C\", \"Deep Teal\", \"Green\"],\r\n\t\t[\"B5998E\", \"Del Rio\", \"Brown\"],\r\n\t\t[\"486531\", \"Dell\", \"Green\"],\r\n\t\t[\"999B95\", \"Delta\", \"Grey\"],\r\n\t\t[\"8272A4\", \"Deluge\", \"Violet\"],\r\n\t\t[\"1560BD\", \"Denim\", \"Blue\"],\r\n\t\t[\"F9E4C6\", \"Derby\", \"Yellow\"],\r\n\t\t[\"A15F3B\", \"Desert\", \"Orange\"],\r\n\t\t[\"EDC9AF\", \"Desert Sand\", \"Brown\"],\r\n\t\t[\"EDE7E0\", \"Desert Storm\", \"Grey\"],\r\n\t\t[\"E7F2E9\", \"Dew\", \"Green\"],\r\n\t\t[\"322C2B\", \"Diesel\", \"Grey\"],\r\n\t\t[\"696969\", \"Dim Gray\", \"Grey\"],\r\n\t\t[\"607C47\", \"Dingley\", \"Green\"],\r\n\t\t[\"892D4F\", \"Disco\", \"Red\"],\r\n\t\t[\"CD8431\", \"Dixie\", \"Yellow\"],\r\n\t\t[\"1E90FF\", \"Dodger Blue\", \"Blue\"],\r\n\t\t[\"F5F171\", \"Dolly\", \"Green\"],\r\n\t\t[\"6A6873\", \"Dolphin\", \"Violet\"],\r\n\t\t[\"6C5B4C\", \"Domino\", \"Brown\"],\r\n\t\t[\"5A4F51\", \"Don Juan\", \"Brown\"],\r\n\t\t[\"816E5C\", \"Donkey Brown\", \"Brown\"],\r\n\t\t[\"6E5F56\", \"Dorado\", \"Brown\"],\r\n\t\t[\"E4CF99\", \"Double Colonial White\", \"Yellow\"],\r\n\t\t[\"E9DCBE\", \"Double Pearl Lusta\", \"Yellow\"],\r\n\t\t[\"D2C3A3\", \"Double Spanish White\", \"Yellow\"],\r\n\t\t[\"777672\", \"Dove Grey\", \"Grey\"],\r\n\t\t[\"6FD2BE\", \"Downy\", \"Green\"],\r\n\t\t[\"FBEB9B\", \"Drover\", \"Yellow\"],\r\n\t\t[\"514F4A\", \"Dune\", \"Grey\"],\r\n\t\t[\"E5CAC0\", \"Dust Storm\", \"Orange\"],\r\n\t\t[\"AC9B9B\", \"Dusty Grey\", \"Grey\"],\r\n\t\t[\"F0DFBB\", \"Dutch White\", \"Yellow\"],\r\n\t\t[\"B0AC94\", \"Eagle\", \"Green\"],\r\n\t\t[\"B8A722\", \"Earls Green\", \"Green\"],\r\n\t\t[\"FBF2DB\", \"Early Dawn\", \"Yellow\"],\r\n\t\t[\"47526E\", \"East Bay\", \"Blue\"],\r\n\t\t[\"AA8CBC\", \"East Side\", \"Violet\"],\r\n\t\t[\"00879F\", \"Eastern Blue\", \"Blue\"],\r\n\t\t[\"E6D8D4\", \"Ebb\", \"Red\"],\r\n\t\t[\"313337\", \"Ebony\", \"Grey\"],\r\n\t\t[\"323438\", \"Ebony Clay\", \"Grey\"],\r\n\t\t[\"A4AFCD\", \"Echo Blue\", \"Blue\"],\r\n\t\t[\"3F3939\", \"Eclipse\", \"Grey\"],\r\n\t\t[\"C2B280\", \"Ecru\", \"Brown\"],\r\n\t\t[\"D6D1C0\", \"Ecru White\", \"Green\"],\r\n\t\t[\"C96138\", \"Ecstasy\", \"Orange\"],\r\n\t\t[\"266255\", \"Eden\", \"Green\"],\r\n\t\t[\"C1D8C5\", \"Edgewater\", \"Green\"],\r\n\t\t[\"97A49A\", \"Edward\", \"Green\"],\r\n\t\t[\"F9E4C5\", \"Egg Sour\", \"Yellow\"],\r\n\t\t[\"990066\", \"Eggplant\", \"Violet\"],\r\n\t\t[\"1034A6\", \"Egyptian Blue\", \"Blue\"],\r\n\t\t[\"39392C\", \"El Paso\", \"Green\"],\r\n\t\t[\"8F4E45\", \"El Salva\", \"Red\"],\r\n\t\t[\"7DF9FF\", \"Electric Blue\", \"Blue\"],\r\n\t\t[\"6600FF\", \"Electric Indigo\", \"Violet\"],\r\n\t\t[\"CCFF00\", \"Electric Lime\", \"Green\"],\r\n\t\t[\"BF00FF\", \"Electric Purple\", \"Violet\"],\r\n\t\t[\"243640\", \"Elephant\", \"Blue\"],\r\n\t\t[\"1B8A6B\", \"Elf Green\", \"Green\"],\r\n\t\t[\"297B76\", \"Elm\", \"Green\"],\r\n\t\t[\"50C878\", \"Emerald\", \"Green\"],\r\n\t\t[\"6E3974\", \"Eminence\", \"Violet\"],\r\n\t\t[\"50494A\", \"Emperor\", \"Grey\"],\r\n\t\t[\"7C7173\", \"Empress\", \"Grey\"],\r\n\t\t[\"29598B\", \"Endeavour\", \"Blue\"],\r\n\t\t[\"F5D752\", \"Energy Yellow\", \"Yellow\"],\r\n\t\t[\"274234\", \"English Holly\", \"Green\"],\r\n\t\t[\"8BA58F\", \"Envy\", \"Green\"],\r\n\t\t[\"DAB160\", \"Equator\", \"Yellow\"],\r\n\t\t[\"4E312D\", \"Espresso\", \"Red\"],\r\n\t\t[\"2D2F28\", \"Eternity\", \"Green\"],\r\n\t\t[\"329760\", \"Eucalyptus\", \"Green\"],\r\n\t\t[\"CDA59C\", \"Eunry\", \"Red\"],\r\n\t\t[\"26604F\", \"Evening Sea\", \"Green\"],\r\n\t\t[\"264334\", \"Everglade\", \"Green\"],\r\n\t\t[\"F3E5DC\", \"Fair Pink\", \"Orange\"],\r\n\t\t[\"6E5A5B\", \"Falcon\", \"Brown\"],\r\n\t\t[\"C19A6B\", \"Fallow\", \"Brown\"],\r\n\t\t[\"801818\", \"Falu Red\", \"Red\"],\r\n\t\t[\"F2E6DD\", \"Fantasy\", \"Orange\"],\r\n\t\t[\"625665\", \"Fedora\", \"Violet\"],\r\n\t\t[\"A5D785\", \"Feijoa\", \"Green\"],\r\n\t\t[\"4D5D53\", \"Feldgrau\", \"Grey\"],\r\n\t\t[\"D19275\", \"Feldspar\", \"Red\"],\r\n\t\t[\"63B76C\", \"Fern\", \"Green\"],\r\n\t\t[\"4F7942\", \"Fern Green\", \"Green\"],\r\n\t\t[\"876A68\", \"Ferra\", \"Brown\"],\r\n\t\t[\"EACC4A\", \"Festival\", \"Yellow\"],\r\n\t\t[\"DBE0D0\", \"Feta\", \"Green\"],\r\n\t\t[\"B1592F\", \"Fiery Orange\", \"Orange\"],\r\n\t\t[\"636F22\", \"Fiji Green\", \"Green\"],\r\n\t\t[\"75785A\", \"Finch\", \"Green\"],\r\n\t\t[\"61755B\", \"Finlandia\", \"Green\"],\r\n\t\t[\"694554\", \"Finn\", \"Violet\"],\r\n\t\t[\"4B5A62\", \"Fiord\", \"Blue\"],\r\n\t\t[\"8F3F2A\", \"Fire\", \"Orange\"],\r\n\t\t[\"B22222\", \"Fire Brick\", \"Red\"],\r\n\t\t[\"E09842\", \"Fire Bush\", \"Yellow\"],\r\n\t\t[\"CE1620\", \"Fire Engine Red\", \"Red\"],\r\n\t\t[\"314643\", \"Firefly\", \"Green\"],\r\n\t\t[\"BE5C48\", \"Flame Pea\", \"Orange\"],\r\n\t\t[\"86282E\", \"Flame Red\", \"Red\"],\r\n\t\t[\"EA8645\", \"Flamenco\", \"Orange\"],\r\n\t\t[\"E1634F\", \"Flamingo\", \"Orange\"],\r\n\t\t[\"EEDC82\", \"Flax\", \"Yellow\"],\r\n\t\t[\"716E61\", \"Flint\", \"Green\"],\r\n\t\t[\"7A2E4D\", \"Flirt\", \"Red\"],\r\n\t\t[\"FFFAF0\", \"Floral White\", \"White\"],\r\n\t\t[\"D0EAE8\", \"Foam\", \"Green\"],\r\n\t\t[\"D5C7E8\", \"Fog\", \"Violet\"],\r\n\t\t[\"A7A69D\", \"Foggy Grey\", \"Grey\"],\r\n\t\t[\"228B22\", \"Forest Green\", \"Green\"],\r\n\t\t[\"FDEFDB\", \"Forget Me Not\", \"Yellow\"],\r\n\t\t[\"65ADB2\", \"Fountain Blue\", \"Blue\"],\r\n\t\t[\"FFD7A0\", \"Frangipani\", \"Yellow\"],\r\n\t\t[\"029D74\", \"Free Speech Aquamarine\", \"Green\"],\r\n\t\t[\"4156C5\", \"Free Speech Blue\", \"Blue\"],\r\n\t\t[\"09F911\", \"Free Speech Green\", \"Green\"],\r\n\t\t[\"E35BD8\", \"Free Speech Magenta\", \"Red\"],\r\n\t\t[\"C00000\", \"Free Speech Red\", \"Red\"],\r\n\t\t[\"BFBDC1\", \"French Grey\", \"Grey\"],\r\n\t\t[\"DEB7D9\", \"French Lilac\", \"Violet\"],\r\n\t\t[\"A4D2E0\", \"French Pass\", \"Blue\"],\r\n\t\t[\"F64A8A\", \"French Rose\", \"Red\"],\r\n\t\t[\"86837A\", \"Friar Grey\", \"Grey\"],\r\n\t\t[\"B4E1BB\", \"Fringy Flower\", \"Green\"],\r\n\t\t[\"E56D75\", \"Froly\", \"Red\"],\r\n\t\t[\"E1E4C5\", \"Frost\", \"Green\"],\r\n\t\t[\"E2F2E4\", \"Frosted Mint\", \"Green\"],\r\n\t\t[\"DBE5D2\", \"Frostee\", \"Green\"],\r\n\t\t[\"4BA351\", \"Fruit Salad\", \"Green\"],\r\n\t\t[\"C154C1\", \"Fuchsia\", \"Violet\"],\r\n\t\t[\"FF77FF\", \"Fuchsia Pink\", \"Red\"],\r\n\t\t[\"C2D62E\", \"Fuego\", \"Green\"],\r\n\t\t[\"D19033\", \"Fuel Yellow\", \"Yellow\"],\r\n\t\t[\"335083\", \"Fun Blue\", \"Blue\"],\r\n\t\t[\"15633D\", \"Fun Green\", \"Green\"],\r\n\t\t[\"3C3B3C\", \"Fuscous Grey\", \"Grey\"],\r\n\t\t[\"C45655\", \"Fuzzy Wuzzy Brown\", \"Brown\"],\r\n\t\t[\"2C4641\", \"Gable Green\", \"Green\"],\r\n\t\t[\"DCDCDC\", \"Gainsboro\", \"White\"],\r\n\t\t[\"DCD7D1\", \"Gallery\", \"Grey\"],\r\n\t\t[\"D8A723\", \"Galliano\", \"Yellow\"],\r\n\t\t[\"E49B0F\", \"Gamboge\", \"Yellow\"],\r\n\t\t[\"C5832E\", \"Geebung\", \"Yellow\"],\r\n\t\t[\"31796D\", \"Genoa\", \"Green\"],\r\n\t\t[\"E77B75\", \"Geraldine\", \"Red\"],\r\n\t\t[\"CBD0CF\", \"Geyser\", \"Grey\"],\r\n\t\t[\"C0BFC7\", \"Ghost\", \"Blue\"],\r\n\t\t[\"F8F8FF\", \"Ghost White\", \"White\"],\r\n\t\t[\"564786\", \"Gigas\", \"Violet\"],\r\n\t\t[\"B9AD61\", \"Gimblet\", \"Green\"],\r\n\t\t[\"D9DFCD\", \"Gin\", \"Green\"],\r\n\t\t[\"F8EACA\", \"Gin Fizz\", \"Yellow\"],\r\n\t\t[\"EBD4AE\", \"Givry\", \"Yellow\"],\r\n\t\t[\"78B1BF\", \"Glacier\", \"Blue\"],\r\n\t\t[\"5F8151\", \"Glade Green\", \"Green\"],\r\n\t\t[\"786E4C\", \"Go Ben\", \"Yellow\"],\r\n\t\t[\"34533D\", \"Goblin\", \"Green\"],\r\n\t\t[\"FFD700\", \"Gold\", \"Yellow\"],\r\n\t\t[\"D56C30\", \"Gold Drop\", \"Orange\"],\r\n\t\t[\"E2B227\", \"Gold Tips\", \"Yellow\"],\r\n\t\t[\"CA8136\", \"Golden Bell\", \"Orange\"],\r\n\t\t[\"996515\", \"Golden Brown\", \"Brown\"],\r\n\t\t[\"F1CC2B\", \"Golden Dream\", \"Yellow\"],\r\n\t\t[\"EBDE31\", \"Golden Fizz\", \"Green\"],\r\n\t\t[\"F9D77E\", \"Golden Glow\", \"Yellow\"],\r\n\t\t[\"FCC200\", \"Golden Poppy\", \"Yellow\"],\r\n\t\t[\"EACE6A\", \"Golden Sand\", \"Yellow\"],\r\n\t\t[\"FFC152\", \"Golden Tainoi\", \"Yellow\"],\r\n\t\t[\"FFDF00\", \"Golden Yellow\", \"Yellow\"],\r\n\t\t[\"DBDB70\", \"Goldenrod\", \"Yellow\"],\r\n\t\t[\"373332\", \"Gondola\", \"Grey\"],\r\n\t\t[\"29332B\", \"Gordons Green\", \"Green\"],\r\n\t\t[\"FDE336\", \"Gorse\", \"Green\"],\r\n\t\t[\"399F86\", \"Gossamer\", \"Green\"],\r\n\t\t[\"9FD385\", \"Gossip\", \"Green\"],\r\n\t\t[\"698890\", \"Gothic\", \"Blue\"],\r\n\t\t[\"51559B\", \"Governor Bay\", \"Blue\"],\r\n\t\t[\"CAB8A2\", \"Grain Brown\", \"Yellow\"],\r\n\t\t[\"FFCD73\", \"Grandis\", \"Yellow\"],\r\n\t\t[\"8B8265\", \"Granite Green\", \"Yellow\"],\r\n\t\t[\"C5E7CD\", \"Granny Apple\", \"Green\"],\r\n\t\t[\"7B948C\", \"Granny Smith\", \"Green\"],\r\n\t\t[\"9DE093\", \"Granny Smith Apple\", \"Green\"],\r\n\t\t[\"413D4B\", \"Grape\", \"Violet\"],\r\n\t\t[\"383428\", \"Graphite\", \"Yellow\"],\r\n\t\t[\"4A4B46\", \"Gravel\", \"Grey\"],\r\n\t\t[\"008000\", \"Green\", \"Green\"],\r\n\t\t[\"3E6334\", \"Green House\", \"Green\"],\r\n\t\t[\"393D2A\", \"Green Kelp\", \"Green\"],\r\n\t\t[\"526B2D\", \"Green Leaf\", \"Green\"],\r\n\t\t[\"BFC298\", \"Green Mist\", \"Green\"],\r\n\t\t[\"266242\", \"Green Pea\", \"Green\"],\r\n\t\t[\"9CA664\", \"Green Smoke\", \"Green\"],\r\n\t\t[\"A9AF99\", \"Green Spring\", \"Green\"],\r\n\t\t[\"23414E\", \"Green Vogue\", \"Blue\"],\r\n\t\t[\"2C2D24\", \"Green Waterloo\", \"Green\"],\r\n\t\t[\"DEDDCB\", \"Green White\", \"Green\"],\r\n\t\t[\"ADFF2F\", \"Green Yellow\", \"Green\"],\r\n\t\t[\"C14D36\", \"Grenadier\", \"Orange\"],\r\n\t\t[\"808080\", \"Grey\", \"Grey\"],\r\n\t\t[\"9FA3A7\", \"Grey Chateau\", \"Grey\"],\r\n\t\t[\"BDBAAE\", \"Grey Nickel\", \"Green\"],\r\n\t\t[\"D1D3CC\", \"Grey Nurse\", \"Grey\"],\r\n\t\t[\"A19A7F\", \"Grey Olive\", \"Yellow\"],\r\n\t\t[\"9391A0\", \"Grey Suit\", \"Blue\"],\r\n\t\t[\"465945\", \"Grey-Asparagus\", \"Green\"],\r\n\t\t[\"952E31\", \"Guardsman Red\", \"Red\"],\r\n\t\t[\"343F5C\", \"Gulf Blue\", \"Blue\"],\r\n\t\t[\"74B2A8\", \"Gulf Stream\", \"Green\"],\r\n\t\t[\"A4ADB0\", \"Gull Grey\", \"Grey\"],\r\n\t\t[\"ACC9B2\", \"Gum Leaf\", \"Green\"],\r\n\t\t[\"718F8A\", \"Gumbo\", \"Green\"],\r\n\t\t[\"484753\", \"Gun Powder\", \"Violet\"],\r\n\t\t[\"2C3539\", \"Gunmetal\", \"Blue\"],\r\n\t\t[\"7A7C76\", \"Gunsmoke\", \"Grey\"],\r\n\t\t[\"989171\", \"Gurkha\", \"Green\"],\r\n\t\t[\"9E8022\", \"Hacienda\", \"Yellow\"],\r\n\t\t[\"633528\", \"Hairy Heath\", \"Brown\"],\r\n\t\t[\"2C2A35\", \"Haiti\", \"Violet\"],\r\n\t\t[\"EDE7C8\", \"Half And Half\", \"Green\"],\r\n\t\t[\"558F93\", \"Half Baked\", \"Blue\"],\r\n\t\t[\"F2E5BF\", \"Half Colonial White\", \"Yellow\"],\r\n\t\t[\"FBF0D6\", \"Half Dutch White\", \"Yellow\"],\r\n\t\t[\"F1EAD7\", \"Half Pearl Lusta\", \"Yellow\"],\r\n\t\t[\"E6DBC7\", \"Half Spanish White\", \"Yellow\"],\r\n\t\t[\"E8D4A2\", \"Hampton\", \"Yellow\"],\r\n\t\t[\"5218FA\", \"Han Purple\", \"Violet\"],\r\n\t\t[\"3FFF00\", \"Harlequin\", \"Green\"],\r\n\t\t[\"C93413\", \"Harley Davidson Orange\", \"Orange\"],\r\n\t\t[\"CBCEC0\", \"Harp\", \"Green\"],\r\n\t\t[\"EAB76A\", \"Harvest Gold\", \"Yellow\"],\r\n\t\t[\"3B2B2C\", \"Havana\", \"Brown\"],\r\n\t\t[\"5784C1\", \"Havelock Blue\", \"Blue\"],\r\n\t\t[\"99522B\", \"Hawaiian Tan\", \"Orange\"],\r\n\t\t[\"D2DAED\", \"Hawkes Blue\", \"Blue\"],\r\n\t\t[\"4F2A2C\", \"Heath\", \"Red\"],\r\n\t\t[\"AEBBC1\", \"Heather\", \"Blue\"],\r\n\t\t[\"948C7E\", \"Heathered Grey\", \"Brown\"],\r\n\t\t[\"46473E\", \"Heavy Metal\", \"Grey\"],\r\n\t\t[\"DF73FF\", \"Heliotrope\", \"Violet\"],\r\n\t\t[\"69684B\", \"Hemlock\", \"Yellow\"],\r\n\t\t[\"987D73\", \"Hemp\", \"Brown\"],\r\n\t\t[\"928C3C\", \"Highball\", \"Green\"],\r\n\t\t[\"7A9461\", \"Highland\", \"Green\"],\r\n\t\t[\"A7A07E\", \"Hillary\", \"Green\"],\r\n\t\t[\"736330\", \"Himalaya\", \"Yellow\"],\r\n\t\t[\"DFF1D6\", \"Hint Of Green\", \"Green\"],\r\n\t\t[\"F5EFEB\", \"Hint Of Red\", \"Grey\"],\r\n\t\t[\"F6F5D7\", \"Hint Of Yellow\", \"Green\"],\r\n\t\t[\"49889A\", \"Hippie Blue\", \"Blue\"],\r\n\t\t[\"608A5A\", \"Hippie Green\", \"Green\"],\r\n\t\t[\"AB495C\", \"Hippie Pink\", \"Red\"],\r\n\t\t[\"A1A9A8\", \"Hit Grey\", \"Grey\"],\r\n\t\t[\"FDA470\", \"Hit Pink\", \"Orange\"],\r\n\t\t[\"BB8E34\", \"Hokey Pokey\", \"Yellow\"],\r\n\t\t[\"647D86\", \"Hoki\", \"Blue\"],\r\n\t\t[\"25342B\", \"Holly\", \"Green\"],\r\n\t\t[\"F400A1\", \"Hollywood Cerise\", \"Red\"],\r\n\t\t[\"5C3C6D\", \"Honey Flower\", \"Violet\"],\r\n\t\t[\"F0FFF0\", \"Honeydew\", \"White\"],\r\n\t\t[\"E8ED69\", \"Honeysuckle\", \"Green\"],\r\n\t\t[\"CD6D93\", \"Hopbush\", \"Violet\"],\r\n\t\t[\"648894\", \"Horizon\", \"Blue\"],\r\n\t\t[\"6D562C\", \"Horses Neck\", \"Yellow\"],\r\n\t\t[\"815B28\", \"Hot Curry\", \"Yellow\"],\r\n\t\t[\"FF00CC\", \"Hot Magenta\", \"Red\"],\r\n\t\t[\"FF69B4\", \"Hot Pink\", \"Red\"],\r\n\t\t[\"4E2E53\", \"Hot Purple\", \"Violet\"],\r\n\t\t[\"A7752C\", \"Hot Toddy\", \"Yellow\"],\r\n\t\t[\"CEEFE4\", \"Humming Bird\", \"Green\"],\r\n\t\t[\"355E3B\", \"Hunter Green\", \"Green\"],\r\n\t\t[\"8B7E77\", \"Hurricane\", \"Brown\"],\r\n\t\t[\"B2994B\", \"Husk\", \"Yellow\"],\r\n\t\t[\"AFE3D6\", \"Ice Cold\", \"Green\"],\r\n\t\t[\"CAE1D9\", \"Iceberg\", \"Green\"],\r\n\t\t[\"EF95AE\", \"Illusion\", \"Red\"],\r\n\t\t[\"B0E313\", \"Inch Worm\", \"Green\"],\r\n\t\t[\"CD5C5C\", \"Indian Red\", \"Red\"],\r\n\t\t[\"4F301F\", \"Indian Tan\", \"Brown\"],\r\n\t\t[\"4B0082\", \"Indigo\", \"Violet\"],\r\n\t\t[\"9C5B34\", \"Indochine\", \"Orange\"],\r\n\t\t[\"002FA7\", \"International Klein Blue\", \"Blue\"],\r\n\t\t[\"FF4F00\", \"International Orange\", \"Orange\"],\r\n\t\t[\"03B4C8\", \"Iris Blue\", \"Blue\"],\r\n\t\t[\"62422B\", \"Irish Coffee\", \"Brown\"],\r\n\t\t[\"CBCDCD\", \"Iron\", \"Grey\"],\r\n\t\t[\"706E66\", \"Ironside Grey\", \"Grey\"],\r\n\t\t[\"865040\", \"Ironstone\", \"Brown\"],\r\n\t\t[\"009900\", \"Islamic Green\", \"Green\"],\r\n\t\t[\"F8EDDB\", \"Island Spice\", \"Yellow\"],\r\n\t\t[\"FFFFF0\", \"Ivory\", \"White\"],\r\n\t\t[\"3D325D\", \"Jacarta\", \"Violet\"],\r\n\t\t[\"413628\", \"Jacko Bean\", \"Brown\"],\r\n\t\t[\"3D3F7D\", \"Jacksons Purple\", \"Violet\"],\r\n\t\t[\"00A86B\", \"Jade\", \"Green\"],\r\n\t\t[\"E27945\", \"Jaffa\", \"Orange\"],\r\n\t\t[\"CAE7E2\", \"Jagged Ice\", \"Green\"],\r\n\t\t[\"3F2E4C\", \"Jagger\", \"Violet\"],\r\n\t\t[\"29292F\", \"Jaguar\", \"Blue\"],\r\n\t\t[\"674834\", \"Jambalaya\", \"Brown\"],\r\n\t\t[\"2F7532\", \"Japanese Laurel\", \"Green\"],\r\n\t\t[\"CE7259\", \"Japonica\", \"Orange\"],\r\n\t\t[\"259797\", \"Java\", \"Green\"],\r\n\t\t[\"5F2C2F\", \"Jazz\", \"Red\"],\r\n\t\t[\"A50B5E\", \"Jazzberry Jam\", \"Red\"],\r\n\t\t[\"44798E\", \"Jelly Bean\", \"Blue\"],\r\n\t\t[\"BBD0C9\", \"Jet Stream\", \"Green\"],\r\n\t\t[\"136843\", \"Jewel\", \"Green\"],\r\n\t\t[\"463D3E\", \"Jon\", \"Grey\"],\r\n\t\t[\"EEF293\", \"Jonquil\", \"Green\"],\r\n\t\t[\"7AAAE0\", \"Jordy Blue\", \"Blue\"],\r\n\t\t[\"5D5346\", \"Judge Grey\", \"Brown\"],\r\n\t\t[\"878785\", \"Jumbo\", \"Grey\"],\r\n\t\t[\"29AB87\", \"Jungle Green\", \"Green\"],\r\n\t\t[\"B0C4C4\", \"Jungle Mist\", \"Green\"],\r\n\t\t[\"74918E\", \"Juniper\", \"Green\"],\r\n\t\t[\"DCBFAC\", \"Just Right\", \"Orange\"],\r\n\t\t[\"6C5E53\", \"Kabul\", \"Brown\"],\r\n\t\t[\"245336\", \"Kaitoke Green\", \"Green\"],\r\n\t\t[\"C5C3B0\", \"Kangaroo\", \"Green\"],\r\n\t\t[\"2D2D24\", \"Karaka\", \"Green\"],\r\n\t\t[\"FEDCC1\", \"Karry\", \"Orange\"],\r\n\t\t[\"576D8E\", \"Kashmir Blue\", \"Blue\"],\r\n\t\t[\"4CBB17\", \"Kelly Green\", \"Green\"],\r\n\t\t[\"4D503C\", \"Kelp\", \"Green\"],\r\n\t\t[\"6C322E\", \"Kenyan Copper\", \"Red\"],\r\n\t\t[\"5FB69C\", \"Keppel\", \"Green\"],\r\n\t\t[\"F0E68C\", \"Khaki\", \"Yellow\"],\r\n\t\t[\"BFC0AB\", \"Kidnapper\", \"Green\"],\r\n\t\t[\"3A3532\", \"Kilamanjaro\", \"Grey\"],\r\n\t\t[\"49764F\", \"Killarney\", \"Green\"],\r\n\t\t[\"695D87\", \"Kimberly\", \"Violet\"],\r\n\t\t[\"583580\", \"Kingfisher Daisy\", \"Violet\"],\r\n\t\t[\"E093AB\", \"Kobi\", \"Red\"],\r\n\t\t[\"7B785A\", \"Kokoda\", \"Green\"],\r\n\t\t[\"804E2C\", \"Korma\", \"Orange\"],\r\n\t\t[\"FEB552\", \"Koromiko\", \"Yellow\"],\r\n\t\t[\"F9D054\", \"Kournikova\", \"Yellow\"],\r\n\t\t[\"428929\", \"La Palma\", \"Green\"],\r\n\t\t[\"BAC00E\", \"La Rioja\", \"Green\"],\r\n\t\t[\"C6DA36\", \"Las Palmas\", \"Green\"],\r\n\t\t[\"C6A95E\", \"Laser\", \"Yellow\"],\r\n\t\t[\"FFFF66\", \"Laser Lemon\", \"Yellow\"],\r\n\t\t[\"6E8D71\", \"Laurel\", \"Green\"],\r\n\t\t[\"E6E6FA\", \"Lavender\", \"Violet\"],\r\n\t\t[\"CCCCFF\", \"Lavender Blue\", \"Blue\"],\r\n\t\t[\"FFF0F5\", \"Lavender Blush\", \"Violet\"],\r\n\t\t[\"BDBBD7\", \"Lavender Grey\", \"Grey\"],\r\n\t\t[\"FBAED2\", \"Lavender Pink\", \"Red\"],\r\n\t\t[\"FBA0E3\", \"Lavender Rose\", \"Red\"],\r\n\t\t[\"7CFC00\", \"Lawn Green\", \"Green\"],\r\n\t\t[\"906A54\", \"Leather\", \"Brown\"],\r\n\t\t[\"FDE910\", \"Lemon\", \"Yellow\"],\r\n\t\t[\"FFFACD\", \"Lemon Chiffon\", \"Yellow\"],\r\n\t\t[\"968428\", \"Lemon Ginger\", \"Yellow\"],\r\n\t\t[\"999A86\", \"Lemon Grass\", \"Green\"],\r\n\t\t[\"2E3749\", \"Licorice\", \"Blue\"],\r\n\t\t[\"ADD8E6\", \"Light Blue\", \"Blue\"],\r\n\t\t[\"F08080\", \"Light Coral\", \"Orange\"],\r\n\t\t[\"E0FFFF\", \"Light Cyan\", \"Blue\"],\r\n\t\t[\"EEDD82\", \"Light Goldenrod\", \"Yellow\"],\r\n\t\t[\"FAFAD2\", \"Light Goldenrod Yellow\", \"Yellow\"],\r\n\t\t[\"90EE90\", \"Light Green\", \"Green\"],\r\n\t\t[\"D3D3D3\", \"Light Grey\", \"Grey\"],\r\n\t\t[\"FFB6C1\", \"Light Pink\", \"Red\"],\r\n\t\t[\"FFA07A\", \"Light Salmon\", \"Orange\"],\r\n\t\t[\"20B2AA\", \"Light Sea Green\", \"Green\"],\r\n\t\t[\"87CEFA\", \"Light Sky Blue\", \"Blue\"],\r\n\t\t[\"8470FF\", \"Light Slate Blue\", \"Blue\"],\r\n\t\t[\"778899\", \"Light Slate Grey\", \"Grey\"],\r\n\t\t[\"B0C4DE\", \"Light Steel Blue\", \"Blue\"],\r\n\t\t[\"856363\", \"Light Wood\", \"Brown\"],\r\n\t\t[\"FFFFE0\", \"Light Yellow\", \"Yellow\"],\r\n\t\t[\"F7A233\", \"Lightning Yellow\", \"Yellow\"],\r\n\t\t[\"C8A2C8\", \"Lilac\", \"Violet\"],\r\n\t\t[\"9470C4\", \"Lilac Bush\", \"Violet\"],\r\n\t\t[\"C19FB3\", \"Lily\", \"Violet\"],\r\n\t\t[\"E9EEEB\", \"Lily White\", \"Grey\"],\r\n\t\t[\"7AAC21\", \"Lima\", \"Green\"],\r\n\t\t[\"00FF00\", \"Lime\", \"Green\"],\r\n\t\t[\"32CD32\", \"Lime Green\", \"Green\"],\r\n\t\t[\"5F9727\", \"Limeade\", \"Green\"],\r\n\t\t[\"89AC27\", \"Limerick\", \"Green\"],\r\n\t\t[\"FAF0E6\", \"Linen\", \"White\"],\r\n\t\t[\"C7CDD8\", \"Link Water\", \"Blue\"],\r\n\t\t[\"962C54\", \"Lipstick\", \"Red\"],\r\n\t\t[\"534B4F\", \"Liver\", \"Brown\"],\r\n\t\t[\"312A29\", \"Livid Brown\", \"Brown\"],\r\n\t\t[\"DBD9C2\", \"Loafer\", \"Green\"],\r\n\t\t[\"B3BBB7\", \"Loblolly\", \"Green\"],\r\n\t\t[\"489084\", \"Lochinvar\", \"Green\"],\r\n\t\t[\"316EA0\", \"Lochmara\", \"Blue\"],\r\n\t\t[\"A2A580\", \"Locust\", \"Green\"],\r\n\t\t[\"393E2E\", \"Log Cabin\", \"Green\"],\r\n\t\t[\"9D9CB4\", \"Logan\", \"Blue\"],\r\n\t\t[\"B9ACBB\", \"Lola\", \"Violet\"],\r\n\t\t[\"AE94AB\", \"London Hue\", \"Violet\"],\r\n\t\t[\"522426\", \"Lonestar\", \"Red\"],\r\n\t\t[\"8B504B\", \"Lotus\", \"Brown\"],\r\n\t\t[\"4C3347\", \"Loulou\", \"Violet\"],\r\n\t\t[\"AB9A1C\", \"Lucky\", \"Green\"],\r\n\t\t[\"292D4F\", \"Lucky Point\", \"Blue\"],\r\n\t\t[\"4E5541\", \"Lunar Green\", \"Green\"],\r\n\t\t[\"782E2C\", \"Lusty\", \"Red\"],\r\n\t\t[\"AB8D3F\", \"Luxor Gold\", \"Yellow\"],\r\n\t\t[\"697D89\", \"Lynch\", \"Blue\"],\r\n\t\t[\"CBE8E8\", \"Mabel\", \"Blue\"],\r\n\t\t[\"FFB97B\", \"Macaroni And Cheese\", \"Orange\"],\r\n\t\t[\"B7E3A8\", \"Madang\", \"Green\"],\r\n\t\t[\"2D3C54\", \"Madison\", \"Blue\"],\r\n\t\t[\"473E23\", \"Madras\", \"Brown\"],\r\n\t\t[\"FF00FF\", \"Magenta\", \"Violet\"],\r\n\t\t[\"AAF0D1\", \"Magic Mint\", \"Green\"],\r\n\t\t[\"F8F4FF\", \"Magnolia\", \"White\"],\r\n\t\t[\"CA3435\", \"Mahogany\", \"Brown\"],\r\n\t\t[\"A56531\", \"Mai Tai\", \"Orange\"],\r\n\t\t[\"2A2922\", \"Maire\", \"Yellow\"],\r\n\t\t[\"E3B982\", \"Maize\", \"Yellow\"],\r\n\t\t[\"695F50\", \"Makara\", \"Brown\"],\r\n\t\t[\"505555\", \"Mako\", \"Grey\"],\r\n\t\t[\"0BDA51\", \"Malachite\", \"Green\"],\r\n\t\t[\"97976F\", \"Malachite Green\", \"Green\"],\r\n\t\t[\"66B7E1\", \"Malibu\", \"Blue\"],\r\n\t\t[\"3A4531\", \"Mallard\", \"Green\"],\r\n\t\t[\"A59784\", \"Malta\", \"Brown\"],\r\n\t\t[\"766D7C\", \"Mamba\", \"Violet\"],\r\n\t\t[\"8D90A1\", \"Manatee\", \"Blue\"],\r\n\t\t[\"B57B2E\", \"Mandalay\", \"Yellow\"],\r\n\t\t[\"8E2323\", \"Mandarian Orange\", \"Orange\"],\r\n\t\t[\"CD525B\", \"Mandy\", \"Red\"],\r\n\t\t[\"F5B799\", \"Mandys Pink\", \"Orange\"],\r\n\t\t[\"E77200\", \"Mango Tango\", \"Orange\"],\r\n\t\t[\"E2AF80\", \"Manhattan\", \"Orange\"],\r\n\t\t[\"7FC15C\", \"Mantis\", \"Green\"],\r\n\t\t[\"96A793\", \"Mantle\", \"Green\"],\r\n\t\t[\"E4DB55\", \"Manz\", \"Green\"],\r\n\t\t[\"352235\", \"Mardi Gras\", \"Violet\"],\r\n\t\t[\"B88A3D\", \"Marigold\", \"Yellow\"],\r\n\t\t[\"42639F\", \"Mariner\", \"Blue\"],\r\n\t\t[\"800000\", \"Maroon\", \"Brown\"],\r\n\t\t[\"2B2E26\", \"Marshland\", \"Green\"],\r\n\t\t[\"B7A8A3\", \"Martini\", \"Brown\"],\r\n\t\t[\"3C3748\", \"Martinique\", \"Violet\"],\r\n\t\t[\"EBC881\", \"Marzipan\", \"Yellow\"],\r\n\t\t[\"57534B\", \"Masala\", \"Brown\"],\r\n\t\t[\"365C7D\", \"Matisse\", \"Blue\"],\r\n\t\t[\"8E4D45\", \"Matrix\", \"Red\"],\r\n\t\t[\"524B4B\", \"Matterhorn\", \"Grey\"],\r\n\t\t[\"E0B0FF\", \"Mauve\", \"Violet\"],\r\n\t\t[\"915F6D\", \"Mauve Taupe\", \"Red\"],\r\n\t\t[\"F091A9\", \"Mauvelous\", \"Red\"],\r\n\t\t[\"C8B1C0\", \"Maverick\", \"Violet\"],\r\n\t\t[\"73C2FB\", \"Maya Blue\", \"Blue\"],\r\n\t\t[\"8C6338\", \"McKenzie\", \"Orange\"],\r\n\t\t[\"66CDAA\", \"Medium Aquamarine\", \"Blue\"],\r\n\t\t[\"0000CD\", \"Medium Blue\", \"Blue\"],\r\n\t\t[\"AF4035\", \"Medium Carmine\", \"Red\"],\r\n\t\t[\"EAEAAE\", \"Medium Goldenrod\", \"Yellow\"],\r\n\t\t[\"BA55D3\", \"Medium Orchid\", \"Violet\"],\r\n\t\t[\"9370DB\", \"Medium Purple\", \"Violet\"],\r\n\t\t[\"3CB371\", \"Medium Sea Green\", \"Green\"],\r\n\t\t[\"7B68EE\", \"Medium Slate Blue\", \"Blue\"],\r\n\t\t[\"00FA9A\", \"Medium Spring Green\", \"Green\"],\r\n\t\t[\"48D1CC\", \"Medium Turquoise\", \"Blue\"],\r\n\t\t[\"C71585\", \"Medium Violet Red\", \"Red\"],\r\n\t\t[\"A68064\", \"Medium Wood\", \"Brown\"],\r\n\t\t[\"E0B7C2\", \"Melanie\", \"Red\"],\r\n\t\t[\"342931\", \"Melanzane\", \"Violet\"],\r\n\t\t[\"FEBAAD\", \"Melon\", \"Red\"],\r\n\t\t[\"C3B9DD\", \"Melrose\", \"Violet\"],\r\n\t\t[\"D5D2D1\", \"Mercury\", \"Grey\"],\r\n\t\t[\"E1DBD0\", \"Merino\", \"Yellow\"],\r\n\t\t[\"4F4E48\", \"Merlin\", \"Grey\"],\r\n\t\t[\"73343A\", \"Merlot\", \"Red\"],\r\n\t\t[\"554A3C\", \"Metallic Bronze\", \"Red\"],\r\n\t\t[\"6E3D34\", \"Metallic Copper\", \"Red\"],\r\n\t\t[\"D4AF37\", \"Metallic Gold\", \"Yellow\"],\r\n\t\t[\"BB7431\", \"Meteor\", \"Orange\"],\r\n\t\t[\"4A3B6A\", \"Meteorite\", \"Violet\"],\r\n\t\t[\"9B3D3D\", \"Mexican Red\", \"Red\"],\r\n\t\t[\"666A6D\", \"Mid Grey\", \"Grey\"],\r\n\t\t[\"21303E\", \"Midnight\", \"Blue\"],\r\n\t\t[\"191970\", \"Midnight Blue\", \"Blue\"],\r\n\t\t[\"21263A\", \"Midnight Express\", \"Blue\"],\r\n\t\t[\"242E28\", \"Midnight Moss\", \"Green\"],\r\n\t\t[\"3F3623\", \"Mikado\", \"Brown\"],\r\n\t\t[\"F6F493\", \"Milan\", \"Green\"],\r\n\t\t[\"9E3332\", \"Milano Red\", \"Red\"],\r\n\t\t[\"F3E5C0\", \"Milk Punch\", \"Yellow\"],\r\n\t\t[\"DCD9CD\", \"Milk White\", \"Grey\"],\r\n\t\t[\"595648\", \"Millbrook\", \"Brown\"],\r\n\t\t[\"F5F5CC\", \"Mimosa\", \"Green\"],\r\n\t\t[\"DAEA6F\", \"Mindaro\", \"Green\"],\r\n\t\t[\"373E41\", \"Mine Shaft\", \"Blue\"],\r\n\t\t[\"506355\", \"Mineral Green\", \"Green\"],\r\n\t\t[\"407577\", \"Ming\", \"Green\"],\r\n\t\t[\"3E3267\", \"Minsk\", \"Violet\"],\r\n\t\t[\"F5FFFA\", \"Mint Cream\", \"White\"],\r\n\t\t[\"98FF98\", \"Mint Green\", \"Green\"],\r\n\t\t[\"E0D8A7\", \"Mint Julep\", \"Green\"],\r\n\t\t[\"C6EADD\", \"Mint Tulip\", \"Green\"],\r\n\t\t[\"373F43\", \"Mirage\", \"Blue\"],\r\n\t\t[\"A5A9B2\", \"Mischka\", \"Blue\"],\r\n\t\t[\"BAB9A9\", \"Mist Grey\", \"Grey\"],\r\n\t\t[\"FFE4E1\", \"Misty Rose\", \"Violet\"],\r\n\t\t[\"605A67\", \"Mobster\", \"Violet\"],\r\n\t\t[\"582F2B\", \"Moccaccino\", \"Red\"],\r\n\t\t[\"FFE4B5\", \"Moccasin\", \"Yellow\"],\r\n\t\t[\"6F372D\", \"Mocha\", \"Red\"],\r\n\t\t[\"97463C\", \"Mojo\", \"Red\"],\r\n\t\t[\"FF9889\", \"Mona Lisa\", \"Red\"],\r\n\t\t[\"6B252C\", \"Monarch\", \"Red\"],\r\n\t\t[\"554D42\", \"Mondo\", \"Brown\"],\r\n\t\t[\"A58B6F\", \"Mongoose\", \"Brown\"],\r\n\t\t[\"7A7679\", \"Monsoon\", \"Grey\"],\r\n\t\t[\"393B3C\", \"Montana\", \"Grey\"],\r\n\t\t[\"7AC5B4\", \"Monte Carlo\", \"Green\"],\r\n\t\t[\"8378C7\", \"Moody Blue\", \"Violet\"],\r\n\t\t[\"F5F3CE\", \"Moon Glow\", \"Green\"],\r\n\t\t[\"CECDB8\", \"Moon Mist\", \"Green\"],\r\n\t\t[\"C0B2D7\", \"Moon Raker\", \"Violet\"],\r\n\t\t[\"F0C420\", \"Moon Yellow\", \"Yellow\"],\r\n\t\t[\"9ED1D3\", \"Morning Glory\", \"Blue\"],\r\n\t\t[\"442D21\", \"Morocco Brown\", \"Brown\"],\r\n\t\t[\"565051\", \"Mortar\", \"Grey\"],\r\n\t\t[\"005F5B\", \"Mosque\", \"Green\"],\r\n\t\t[\"ADDFAD\", \"Moss Green\", \"Green\"],\r\n\t\t[\"1AB385\", \"Mountain Meadow\", \"Green\"],\r\n\t\t[\"A09F9C\", \"Mountain Mist\", \"Grey\"],\r\n\t\t[\"997A8D\", \"Mountbatten Pink\", \"Violet\"],\r\n\t\t[\"A9844F\", \"Muddy Waters\", \"Yellow\"],\r\n\t\t[\"9E7E53\", \"Muesli\", \"Brown\"],\r\n\t\t[\"C54B8C\", \"Mulberry\", \"Violet\"],\r\n\t\t[\"884F40\", \"Mule Fawn\", \"Brown\"],\r\n\t\t[\"524D5B\", \"Mulled Wine\", \"Violet\"],\r\n\t\t[\"FFDB58\", \"Mustard\", \"Yellow\"],\r\n\t\t[\"D68B80\", \"My Pink\", \"Red\"],\r\n\t\t[\"FDAE45\", \"My Sin\", \"Yellow\"],\r\n\t\t[\"21421E\", \"Myrtle\", \"Green\"],\r\n\t\t[\"D8DDDA\", \"Mystic\", \"Grey\"],\r\n\t\t[\"4E5D4E\", \"Nandor\", \"Green\"],\r\n\t\t[\"A39A87\", \"Napa\", \"Yellow\"],\r\n\t\t[\"E9E6DC\", \"Narvik\", \"Green\"],\r\n\t\t[\"FFDEAD\", \"Navajo White\", \"Brown\"],\r\n\t\t[\"000080\", \"Navy\", \"Blue\"],\r\n\t\t[\"0066CC\", \"Navy Blue\", \"Blue\"],\r\n\t\t[\"B8C6BE\", \"Nebula\", \"Green\"],\r\n\t\t[\"EEC7A2\", \"Negroni\", \"Orange\"],\r\n\t\t[\"4D4DFF\", \"Neon Blue\", \"Blue\"],\r\n\t\t[\"FF9933\", \"Neon Carrot\", \"Orange\"],\r\n\t\t[\"FF6EC7\", \"Neon Pink\", \"Violet\"],\r\n\t\t[\"93AAB9\", \"Nepal\", \"Blue\"],\r\n\t\t[\"77A8AB\", \"Neptune\", \"Green\"],\r\n\t\t[\"252525\", \"Nero\", \"Grey\"],\r\n\t\t[\"AAA583\", \"Neutral Green\", \"Green\"],\r\n\t\t[\"666F6F\", \"Nevada\", \"Grey\"],\r\n\t\t[\"6D3B24\", \"New Amber\", \"Orange\"],\r\n\t\t[\"00009C\", \"New Midnight Blue\", \"Blue\"],\r\n\t\t[\"E4C385\", \"New Orleans\", \"Yellow\"],\r\n\t\t[\"EBC79E\", \"New Tan\", \"Brown\"],\r\n\t\t[\"DD8374\", \"New York Pink\", \"Red\"],\r\n\t\t[\"29A98B\", \"Niagara\", \"Green\"],\r\n\t\t[\"332E2E\", \"Night Rider\", \"Grey\"],\r\n\t\t[\"A23D54\", \"Night Shadz\", \"Red\"],\r\n\t\t[\"253F4E\", \"Nile Blue\", \"Blue\"],\r\n\t\t[\"A99D9D\", \"Nobel\", \"Grey\"],\r\n\t\t[\"A19986\", \"Nomad\", \"Yellow\"],\r\n\t\t[\"1D393C\", \"Nordic\", \"Blue\"],\r\n\t\t[\"A4B88F\", \"Norway\", \"Green\"],\r\n\t\t[\"BC9229\", \"Nugget\", \"Yellow\"],\r\n\t\t[\"7E4A3B\", \"Nutmeg\", \"Brown\"],\r\n\t\t[\"FCEDC5\", \"Oasis\", \"Yellow\"],\r\n\t\t[\"008F70\", \"Observatory\", \"Green\"],\r\n\t\t[\"4CA973\", \"Ocean Green\", \"Green\"],\r\n\t\t[\"CC7722\", \"Ochre\", \"Brown\"],\r\n\t\t[\"DFF0E2\", \"Off Green\", \"Green\"],\r\n\t\t[\"FAF3DC\", \"Off Yellow\", \"Yellow\"],\r\n\t\t[\"313330\", \"Oil\", \"Grey\"],\r\n\t\t[\"8A3335\", \"Old Brick\", \"Red\"],\r\n\t\t[\"73503B\", \"Old Copper\", \"Red\"],\r\n\t\t[\"CFB53B\", \"Old Gold\", \"Yellow\"],\r\n\t\t[\"FDF5E6\", \"Old Lace\", \"White\"],\r\n\t\t[\"796878\", \"Old Lavender\", \"Violet\"],\r\n\t\t[\"C02E4C\", \"Old Rose\", \"Red\"],\r\n\t\t[\"808000\", \"Olive\", \"Green\"],\r\n\t\t[\"6B8E23\", \"Olive Drab\", \"Green\"],\r\n\t\t[\"B5B35C\", \"Olive Green\", \"Green\"],\r\n\t\t[\"888064\", \"Olive Haze\", \"Yellow\"],\r\n\t\t[\"747028\", \"Olivetone\", \"Green\"],\r\n\t\t[\"9AB973\", \"Olivine\", \"Orange\"],\r\n\t\t[\"C2E6EC\", \"Onahau\", \"Blue\"],\r\n\t\t[\"48412B\", \"Onion\", \"Yellow\"],\r\n\t\t[\"A8C3BC\", \"Opal\", \"Green\"],\r\n\t\t[\"987E7E\", \"Opium\", \"Brown\"],\r\n\t\t[\"395555\", \"Oracle\", \"Green\"],\r\n\t\t[\"FFA500\", \"Orange\", \"Orange\"],\r\n\t\t[\"FFA000\", \"Orange Peel\", \"Orange\"],\r\n\t\t[\"FF4500\", \"Orange Red\", \"Orange\"],\r\n\t\t[\"A85335\", \"Orange Roughy\", \"Orange\"],\r\n\t\t[\"EAE3CD\", \"Orange White\", \"Yellow\"],\r\n\t\t[\"DA70D6\", \"Orchid\", \"Violet\"],\r\n\t\t[\"F1EBD9\", \"Orchid White\", \"Yellow\"],\r\n\t\t[\"255B77\", \"Orient\", \"Blue\"],\r\n\t\t[\"C28E88\", \"Oriental Pink\", \"Red\"],\r\n\t\t[\"D2D3B3\", \"Orinoco\", \"Green\"],\r\n\t\t[\"818988\", \"Oslo Grey\", \"Grey\"],\r\n\t\t[\"D3DBCB\", \"Ottoman\", \"Green\"],\r\n\t\t[\"2D383A\", \"Outer Space\", \"Grey\"],\r\n\t\t[\"FF6037\", \"Outrageous Orange\", \"Orange\"],\r\n\t\t[\"28353A\", \"Oxford Blue\", \"Blue\"],\r\n\t\t[\"6D9A78\", \"Oxley\", \"Green\"],\r\n\t\t[\"D1EAEA\", \"Oyster Bay\", \"Blue\"],\r\n\t\t[\"D4B5B0\", \"Oyster Pink\", \"Red\"],\r\n\t\t[\"864B36\", \"Paarl\", \"Orange\"],\r\n\t\t[\"7A715C\", \"Pablo\", \"Yellow\"],\r\n\t\t[\"009DC4\", \"Pacific Blue\", \"Blue\"],\r\n\t\t[\"4F4037\", \"Paco\", \"Brown\"],\r\n\t\t[\"7EB394\", \"Padua\", \"Green\"],\r\n\t\t[\"682860\", \"Palatinate Purple\", \"Violet\"],\r\n\t\t[\"987654\", \"Pale Brown\", \"Brown\"],\r\n\t\t[\"DDADAF\", \"Pale Chestnut\", \"Red\"],\r\n\t\t[\"ABCDEF\", \"Pale Cornflower Blue\", \"Blue\"],\r\n\t\t[\"EEE8AA\", \"Pale Goldenrod\", \"Yellow\"],\r\n\t\t[\"98FB98\", \"Pale Green\", \"Green\"],\r\n\t\t[\"BDCAA8\", \"Pale Leaf\", \"Green\"],\r\n\t\t[\"F984E5\", \"Pale Magenta\", \"Violet\"],\r\n\t\t[\"9C8D72\", \"Pale Oyster\", \"Brown\"],\r\n\t\t[\"FADADD\", \"Pale Pink\", \"Red\"],\r\n\t\t[\"F9F59F\", \"Pale Prim\", \"Green\"],\r\n\t\t[\"EFD6DA\", \"Pale Rose\", \"Red\"],\r\n\t\t[\"636D70\", \"Pale Sky\", \"Blue\"],\r\n\t\t[\"C3BEBB\", \"Pale Slate\", \"Grey\"],\r\n\t\t[\"BC987E\", \"Pale Taupe\", \"Grey\"],\r\n\t\t[\"AFEEEE\", \"Pale Turquoise\", \"Blue\"],\r\n\t\t[\"DB7093\", \"Pale Violet Red\", \"Red\"],\r\n\t\t[\"20392C\", \"Palm Green\", \"Green\"],\r\n\t\t[\"36482F\", \"Palm Leaf\", \"Green\"],\r\n\t\t[\"EAE4DC\", \"Pampas\", \"Grey\"],\r\n\t\t[\"EBF7E4\", \"Panache\", \"Green\"],\r\n\t\t[\"DFB992\", \"Pancho\", \"Orange\"],\r\n\t\t[\"544F3A\", \"Panda\", \"Yellow\"],\r\n\t\t[\"FFEFD5\", \"Papaya Whip\", \"Yellow\"],\r\n\t\t[\"7C2D37\", \"Paprika\", \"Red\"],\r\n\t\t[\"488084\", \"Paradiso\", \"Green\"],\r\n\t\t[\"D0C8B0\", \"Parchment\", \"Yellow\"],\r\n\t\t[\"FBEB50\", \"Paris Daisy\", \"Green\"],\r\n\t\t[\"312760\", \"Paris M\", \"Violet\"],\r\n\t\t[\"BFCDC0\", \"Paris White\", \"Green\"],\r\n\t\t[\"305D35\", \"Parsley\", \"Green\"],\r\n\t\t[\"77DD77\", \"Pastel Green\", \"Green\"],\r\n\t\t[\"639283\", \"Patina\", \"Green\"],\r\n\t\t[\"D3E5EF\", \"Pattens Blue\", \"Blue\"],\r\n\t\t[\"2A2551\", \"Paua\", \"Violet\"],\r\n\t\t[\"BAAB87\", \"Pavlova\", \"Yellow\"],\r\n\t\t[\"404048\", \"Payne's Grey\", \"Grey\"],\r\n\t\t[\"FFCBA4\", \"Peach\", \"Orange\"],\r\n\t\t[\"FFDAB9\", \"Peach Puff\", \"Yellow\"],\r\n\t\t[\"FFCC99\", \"Peach-Orange\", \"Orange\"],\r\n\t\t[\"FADFAD\", \"Peach-Yellow\", \"Yellow\"],\r\n\t\t[\"7A4434\", \"Peanut\", \"Brown\"],\r\n\t\t[\"D1E231\", \"Pear\", \"Yellow\"],\r\n\t\t[\"DED1C6\", \"Pearl Bush\", \"Orange\"],\r\n\t\t[\"EAE0C8\", \"Pearl Lusta\", \"Yellow\"],\r\n\t\t[\"766D52\", \"Peat\", \"Yellow\"],\r\n\t\t[\"2599B2\", \"Pelorous\", \"Blue\"],\r\n\t\t[\"D7E7D0\", \"Peppermint\", \"Green\"],\r\n\t\t[\"ACB9E8\", \"Perano\", \"Blue\"],\r\n\t\t[\"C2A9DB\", \"Perfume\", \"Violet\"],\r\n\t\t[\"ACB6B2\", \"Periglacial Blue\", \"Green\"],\r\n\t\t[\"C3CDE6\", \"Periwinkle\", \"Blue\"],\r\n\t\t[\"1C39BB\", \"Persian Blue\", \"Blue\"],\r\n\t\t[\"00A693\", \"Persian Green\", \"Green\"],\r\n\t\t[\"32127A\", \"Persian Indigo\", \"Violet\"],\r\n\t\t[\"F77FBE\", \"Persian Pink\", \"Red\"],\r\n\t\t[\"683332\", \"Persian Plum\", \"Red\"],\r\n\t\t[\"CC3333\", \"Persian Red\", \"Red\"],\r\n\t\t[\"FE28A2\", \"Persian Rose\", \"Red\"],\r\n\t\t[\"EC5800\", \"Persimmon\", \"Red\"],\r\n\t\t[\"CD853F\", \"Peru\", \"Brown\"],\r\n\t\t[\"733D1F\", \"Peru Tan\", \"Orange\"],\r\n\t\t[\"7A7229\", \"Pesto\", \"Yellow\"],\r\n\t\t[\"DA9790\", \"Petite Orchid\", \"Red\"],\r\n\t\t[\"91A092\", \"Pewter\", \"Green\"],\r\n\t\t[\"826663\", \"Pharlap\", \"Brown\"],\r\n\t\t[\"F8EA97\", \"Picasso\", \"Green\"],\r\n\t\t[\"5BA0D0\", \"Picton Blue\", \"Blue\"],\r\n\t\t[\"FDD7E4\", \"Pig Pink\", \"Red\"],\r\n\t\t[\"00A550\", \"Pigment Green\", \"Green\"],\r\n\t\t[\"756556\", \"Pine Cone\", \"Brown\"],\r\n\t\t[\"BDC07E\", \"Pine Glade\", \"Green\"],\r\n\t\t[\"01796F\", \"Pine Green\", \"Green\"],\r\n\t\t[\"2A2F23\", \"Pine Tree\", \"Green\"],\r\n\t\t[\"FFC0CB\", \"Pink\", \"Red\"],\r\n\t\t[\"FF66FF\", \"Pink Flamingo\", \"Red\"],\r\n\t\t[\"D8B4B6\", \"Pink Flare\", \"Red\"],\r\n\t\t[\"F6CCD7\", \"Pink Lace\", \"Red\"],\r\n\t\t[\"F3D7B6\", \"Pink Lady\", \"Orange\"],\r\n\t\t[\"BFB3B2\", \"Pink Swan\", \"Grey\"],\r\n\t\t[\"9D5432\", \"Piper\", \"Orange\"],\r\n\t\t[\"F5E6C4\", \"Pipi\", \"Yellow\"],\r\n\t\t[\"FCDBD2\", \"Pippin\", \"Red\"],\r\n\t\t[\"BA782A\", \"Pirate Gold\", \"Yellow\"],\r\n\t\t[\"BBCDA5\", \"Pixie Green\", \"Green\"],\r\n\t\t[\"E57F3D\", \"Pizazz\", \"Orange\"],\r\n\t\t[\"BF8D3C\", \"Pizza\", \"Yellow\"],\r\n\t\t[\"3E594C\", \"Plantation\", \"Green\"],\r\n\t\t[\"DDA0DD\", \"Plum\", \"Violet\"],\r\n\t\t[\"651C26\", \"Pohutukawa\", \"Red\"],\r\n\t\t[\"E5F2E7\", \"Polar\", \"Green\"],\r\n\t\t[\"8AA7CC\", \"Polo Blue\", \"Blue\"],\r\n\t\t[\"6A1F44\", \"Pompadour\", \"Violet\"],\r\n\t\t[\"DDDCDB\", \"Porcelain\", \"Grey\"],\r\n\t\t[\"DF9D5B\", \"Porsche\", \"Orange\"],\r\n\t\t[\"3B436C\", \"Port Gore\", \"Blue\"],\r\n\t\t[\"F4F09B\", \"Portafino\", \"Green\"],\r\n\t\t[\"8B98D8\", \"Portage\", \"Blue\"],\r\n\t\t[\"F0D555\", \"Portica\", \"Yellow\"],\r\n\t\t[\"EFDCD4\", \"Pot Pourri\", \"Orange\"],\r\n\t\t[\"845C40\", \"Potters Clay\", \"Brown\"],\r\n\t\t[\"B0E0E6\", \"Powder Blue\", \"Blue\"],\r\n\t\t[\"883C32\", \"Prairie Sand\", \"Red\"],\r\n\t\t[\"CAB4D4\", \"Prelude\", \"Violet\"],\r\n\t\t[\"E2CDD5\", \"Prim\", \"Violet\"],\r\n\t\t[\"E4DE8E\", \"Primrose\", \"Green\"],\r\n\t\t[\"F8F6DF\", \"Promenade\", \"Green\"],\r\n\t\t[\"F6E3DA\", \"Provincial Pink\", \"Orange\"],\r\n\t\t[\"003366\", \"Prussian Blue\", \"Blue\"],\r\n\t\t[\"DD00FF\", \"Psychedelic Purple\", \"Violet\"],\r\n\t\t[\"CC8899\", \"Puce\", \"Red\"],\r\n\t\t[\"6E3326\", \"Pueblo\", \"Orange\"],\r\n\t\t[\"59BAA3\", \"Puerto Rico\", \"Green\"],\r\n\t\t[\"BAC0B4\", \"Pumice\", \"Green\"],\r\n\t\t[\"FF7518\", \"Pumpkin\", \"Orange\"],\r\n\t\t[\"534931\", \"Punga\", \"Yellow\"],\r\n\t\t[\"800080\", \"Purple\", \"Violet\"],\r\n\t\t[\"652DC1\", \"Purple Heart\", \"Violet\"],\r\n\t\t[\"9678B6\", \"Purple Mountain's Majesty\", \"Violet\"],\r\n\t\t[\"50404D\", \"Purple Taupe\", \"Grey\"],\r\n\t\t[\"CDAE70\", \"Putty\", \"Yellow\"],\r\n\t\t[\"F2EDDD\", \"Quarter Pearl Lusta\", \"Green\"],\r\n\t\t[\"EBE2D2\", \"Quarter Spanish White\", \"Yellow\"],\r\n\t\t[\"D9D9F3\", \"Quartz\", \"White\"],\r\n\t\t[\"C3988B\", \"Quicksand\", \"Brown\"],\r\n\t\t[\"CBC9C0\", \"Quill Grey\", \"Grey\"],\r\n\t\t[\"6A5445\", \"Quincy\", \"Brown\"],\r\n\t\t[\"232F2C\", \"Racing Green\", \"Green\"],\r\n\t\t[\"FF355E\", \"Radical Red\", \"Red\"],\r\n\t\t[\"DCC6A0\", \"Raffia\", \"Yellow\"],\r\n\t\t[\"667028\", \"Rain Forest\", \"Green\"],\r\n\t\t[\"B3C1B1\", \"Rainee\", \"Green\"],\r\n\t\t[\"FCAE60\", \"Rajah\", \"Orange\"],\r\n\t\t[\"2B2E25\", \"Rangoon Green\", \"Green\"],\r\n\t\t[\"6F747B\", \"Raven\", \"Blue\"],\r\n\t\t[\"D27D46\", \"Raw Sienna\", \"Brown\"],\r\n\t\t[\"734A12\", \"Raw Umber\", \"Brown\"],\r\n\t\t[\"FF33CC\", \"Razzle Dazzle Rose\", \"Red\"],\r\n\t\t[\"E30B5C\", \"Razzmatazz\", \"Red\"],\r\n\t\t[\"453430\", \"Rebel\", \"Brown\"],\r\n\t\t[\"FF0000\", \"Red\", \"Red\"],\r\n\t\t[\"701F28\", \"Red Berry\", \"Red\"],\r\n\t\t[\"CB6F4A\", \"Red Damask\", \"Orange\"],\r\n\t\t[\"662A2C\", \"Red Devil\", \"Red\"],\r\n\t\t[\"FF3F34\", \"Red Orange\", \"Orange\"],\r\n\t\t[\"5D1F1E\", \"Red Oxide\", \"Red\"],\r\n\t\t[\"7D4138\", \"Red Robin\", \"Red\"],\r\n\t\t[\"AD522E\", \"Red Stage\", \"Orange\"],\r\n\t\t[\"BB3385\", \"Medium Red Violet\", \"Violet\"],\r\n\t\t[\"5B342E\", \"Redwood\", \"Red\"],\r\n\t\t[\"D1EF9F\", \"Reef\", \"Green\"],\r\n\t\t[\"A98D36\", \"Reef Gold\", \"Yellow\"],\r\n\t\t[\"203F58\", \"Regal Blue\", \"Blue\"],\r\n\t\t[\"798488\", \"Regent Grey\", \"Blue\"],\r\n\t\t[\"A0CDD9\", \"Regent St Blue\", \"Blue\"],\r\n\t\t[\"F6DEDA\", \"Remy\", \"Red\"],\r\n\t\t[\"B26E33\", \"Reno Sand\", \"Orange\"],\r\n\t\t[\"323F75\", \"Resolution Blue\", \"Blue\"],\r\n\t\t[\"37363F\", \"Revolver\", \"Violet\"],\r\n\t\t[\"3D4653\", \"Rhino\", \"Blue\"],\r\n\t\t[\"EFECDE\", \"Rice Cake\", \"Green\"],\r\n\t\t[\"EFF5D1\", \"Rice Flower\", \"Green\"],\r\n\t\t[\"5959AB\", \"Rich Blue\", \"Blue\"],\r\n\t\t[\"A15226\", \"Rich Gold\", \"Orange\"],\r\n\t\t[\"B7C61A\", \"Rio Grande\", \"Green\"],\r\n\t\t[\"89D9C8\", \"Riptide\", \"Green\"],\r\n\t\t[\"556061\", \"River Bed\", \"Blue\"],\r\n\t\t[\"DDAD56\", \"Rob Roy\", \"Yellow\"],\r\n\t\t[\"00CCCC\", \"Robin's Egg Blue\", \"Blue\"],\r\n\t\t[\"5A4D41\", \"Rock\", \"Brown\"],\r\n\t\t[\"93A2BA\", \"Rock Blue\", \"Blue\"],\r\n\t\t[\"9D442D\", \"Rock Spray\", \"Orange\"],\r\n\t\t[\"C7A384\", \"Rodeo Dust\", \"Brown\"],\r\n\t\t[\"6D7876\", \"Rolling Stone\", \"Green\"],\r\n\t\t[\"D8625B\", \"Roman\", \"Red\"],\r\n\t\t[\"7D6757\", \"Roman Coffee\", \"Brown\"],\r\n\t\t[\"F4F0E6\", \"Romance\", \"Grey\"],\r\n\t\t[\"FFC69E\", \"Romantic\", \"Orange\"],\r\n\t\t[\"EAB852\", \"Ronchi\", \"Yellow\"],\r\n\t\t[\"A14743\", \"Roof Terracotta\", \"Red\"],\r\n\t\t[\"8E593C\", \"Rope\", \"Orange\"],\r\n\t\t[\"D3A194\", \"Rose\", \"Red\"],\r\n\t\t[\"FEAB9A\", \"Rose Bud\", \"Red\"],\r\n\t\t[\"8A2D52\", \"Rose Bud Cherry\", \"Red\"],\r\n\t\t[\"AC512D\", \"Rose Of Sharon\", \"Orange\"],\r\n\t\t[\"905D5D\", \"Rose Taupe\", \"Violet\"],\r\n\t\t[\"FBEEE8\", \"Rose White\", \"Red\"],\r\n\t\t[\"BC8F8F\", \"Rosy Brown\", \"Brown\"],\r\n\t\t[\"B69642\", \"Roti\", \"Yellow\"],\r\n\t\t[\"A94064\", \"Rouge\", \"Red\"],\r\n\t\t[\"4169E1\", \"Royal Blue\", \"Blue\"],\r\n\t\t[\"B54B73\", \"Royal Heath\", \"Red\"],\r\n\t\t[\"6B3FA0\", \"Royal Purple\", \"Violet\"],\r\n\t\t[\"E0115F\", \"Ruby\", \"Red\"],\r\n\t\t[\"716675\", \"Rum\", \"Violet\"],\r\n\t\t[\"F1EDD4\", \"Rum Swizzle\", \"Green\"],\r\n\t\t[\"80461B\", \"Russet\", \"Brown\"],\r\n\t\t[\"7D655C\", \"Russett\", \"Brown\"],\r\n\t\t[\"B7410E\", \"Rust\", \"Red\"],\r\n\t\t[\"3A181A\", \"Rustic Red\", \"Red\"],\r\n\t\t[\"8D5F2C\", \"Rusty Nail\", \"Orange\"],\r\n\t\t[\"5D4E46\", \"Saddle\", \"Brown\"],\r\n\t\t[\"8B4513\", \"Saddle Brown\", \"Brown\"],\r\n\t\t[\"FF6600\", \"Safety Orange\", \"Orange\"],\r\n\t\t[\"F4C430\", \"Saffron\", \"Yellow\"],\r\n\t\t[\"989F7A\", \"Sage\", \"Green\"],\r\n\t\t[\"B79826\", \"Sahara\", \"Yellow\"],\r\n\t\t[\"A5CEEC\", \"Sail\", \"Blue\"],\r\n\t\t[\"177B4D\", \"Salem\", \"Green\"],\r\n\t\t[\"FA8072\", \"Salmon\", \"Red\"],\r\n\t\t[\"FFD67B\", \"Salomie\", \"Yellow\"],\r\n\t\t[\"696268\", \"Salt Box\", \"Violet\"],\r\n\t\t[\"EEF3E5\", \"Saltpan\", \"Grey\"],\r\n\t\t[\"3B2E25\", \"Sambuca\", \"Brown\"],\r\n\t\t[\"2C6E31\", \"San Felix\", \"Green\"],\r\n\t\t[\"445761\", \"San Juan\", \"Blue\"],\r\n\t\t[\"4E6C9D\", \"San Marino\", \"Blue\"],\r\n\t\t[\"867665\", \"Sand Dune\", \"Brown\"],\r\n\t\t[\"A3876A\", \"Sandal\", \"Brown\"],\r\n\t\t[\"AF937D\", \"Sandrift\", \"Brown\"],\r\n\t\t[\"786D5F\", \"Sandstone\", \"Brown\"],\r\n\t\t[\"DECB81\", \"Sandwisp\", \"Yellow\"],\r\n\t\t[\"FEDBB7\", \"Sandy Beach\", \"Orange\"],\r\n\t\t[\"F4A460\", \"Sandy Brown\", \"Brown\"],\r\n\t\t[\"92000A\", \"Sangria\", \"Red\"],\r\n\t\t[\"6C3736\", \"Sanguine Brown\", \"Red\"],\r\n\t\t[\"9998A7\", \"Santas Grey\", \"Blue\"],\r\n\t\t[\"A96A50\", \"Sante Fe\", \"Orange\"],\r\n\t\t[\"E1D5A6\", \"Sapling\", \"Yellow\"],\r\n\t\t[\"082567\", \"Sapphire\", \"Blue\"],\r\n\t\t[\"555B2C\", \"Saratoga\", \"Green\"],\r\n\t\t[\"F4EAE4\", \"Sauvignon\", \"Red\"],\r\n\t\t[\"F5DEC4\", \"Sazerac\", \"Orange\"],\r\n\t\t[\"6F63A0\", \"Scampi\", \"Violet\"],\r\n\t\t[\"ADD9D1\", \"Scandal\", \"Green\"],\r\n\t\t[\"FF2400\", \"Scarlet\", \"Red\"],\r\n\t\t[\"4A2D57\", \"Scarlet Gum\", \"Violet\"],\r\n\t\t[\"7E2530\", \"Scarlett\", \"Red\"],\r\n\t\t[\"6B6A6C\", \"Scarpa Flow\", \"Grey\"],\r\n\t\t[\"87876F\", \"Schist\", \"Green\"],\r\n\t\t[\"FFD800\", \"School Bus Yellow\", \"Yellow\"],\r\n\t\t[\"8D8478\", \"Schooner\", \"Brown\"],\r\n\t\t[\"308EA0\", \"Scooter\", \"Blue\"],\r\n\t\t[\"6A6466\", \"Scorpion\", \"Grey\"],\r\n\t\t[\"EEE7C8\", \"Scotch Mist\", \"Yellow\"],\r\n\t\t[\"66FF66\", \"Screamin' Green\", \"Green\"],\r\n\t\t[\"3D4031\", \"Scrub\", \"Green\"],\r\n\t\t[\"EF9548\", \"Sea Buckthorn\", \"Orange\"],\r\n\t\t[\"DFDDD6\", \"Sea Fog\", \"Grey\"],\r\n\t\t[\"2E8B57\", \"Sea Green\", \"Green\"],\r\n\t\t[\"C2D5C4\", \"Sea Mist\", \"Green\"],\r\n\t\t[\"8AAEA4\", \"Sea Nymph\", \"Green\"],\r\n\t\t[\"DB817E\", \"Sea Pink\", \"Red\"],\r\n\t\t[\"77B7D0\", \"Seagull\", \"Blue\"],\r\n\t\t[\"321414\", \"Seal Brown\", \"Brown\"],\r\n\t\t[\"69326E\", \"Seance\", \"Violet\"],\r\n\t\t[\"FFF5EE\", \"Seashell\", \"White\"],\r\n\t\t[\"37412A\", \"Seaweed\", \"Green\"],\r\n\t\t[\"E6DFE7\", \"Selago\", \"Violet\"],\r\n\t\t[\"FFBA00\", \"Selective Yellow\", \"Yellow\"],\r\n\t\t[\"6B4226\", \"Semi-Sweet Chocolate\", \"Brown\"],\r\n\t\t[\"9E5B40\", \"Sepia\", \"Brown\"],\r\n\t\t[\"FCE9D7\", \"Serenade\", \"Orange\"],\r\n\t\t[\"837050\", \"Shadow\", \"Green\"],\r\n\t\t[\"9AC0B6\", \"Shadow Green\", \"Green\"],\r\n\t\t[\"9F9B9D\", \"Shady Lady\", \"Grey\"],\r\n\t\t[\"609AB8\", \"Shakespeare\", \"Blue\"],\r\n\t\t[\"F8F6A8\", \"Shalimar\", \"Green\"],\r\n\t\t[\"33CC99\", \"Shamrock\", \"Green\"],\r\n\t\t[\"009E60\", \"Shamrock Green\", \"Green\"],\r\n\t\t[\"34363A\", \"Shark\", \"Grey\"],\r\n\t\t[\"00494E\", \"Sherpa Blue\", \"Green\"],\r\n\t\t[\"1B4636\", \"Sherwood Green\", \"Green\"],\r\n\t\t[\"E6B2A6\", \"Shilo\", \"Red\"],\r\n\t\t[\"745937\", \"Shingle Fawn\", \"Brown\"],\r\n\t\t[\"7988AB\", \"Ship Cove\", \"Blue\"],\r\n\t\t[\"4E4E4C\", \"Ship Grey\", \"Grey\"],\r\n\t\t[\"842833\", \"Shiraz\", \"Red\"],\r\n\t\t[\"E899BE\", \"Shocking\", \"Violet\"],\r\n\t\t[\"FC0FC0\", \"Shocking Pink\", \"Red\"],\r\n\t\t[\"61666B\", \"Shuttle Grey\", \"Grey\"],\r\n\t\t[\"686B50\", \"Siam\", \"Green\"],\r\n\t\t[\"E9D9A9\", \"Sidecar\", \"Yellow\"],\r\n\t\t[\"A0522D\", \"Sienna\", \"Brown\"],\r\n\t\t[\"BBADA1\", \"Silk\", \"Brown\"],\r\n\t\t[\"C0C0C0\", \"Silver\", \"Grey\"],\r\n\t\t[\"ACAEA9\", \"Silver Chalice\", \"Grey\"],\r\n\t\t[\"BEBDB6\", \"Silver Sand\", \"Grey\"],\r\n\t\t[\"67BE90\", \"Silver Tree\", \"Green\"],\r\n\t\t[\"A6D5D0\", \"Sinbad\", \"Green\"],\r\n\t\t[\"69293B\", \"Siren\", \"Red\"],\r\n\t\t[\"68766E\", \"Sirocco\", \"Green\"],\r\n\t\t[\"C5BAA0\", \"Sisal\", \"Yellow\"],\r\n\t\t[\"9DB4AA\", \"Skeptic\", \"Green\"],\r\n\t\t[\"87CEEB\", \"Sky Blue\", \"Blue\"],\r\n\t\t[\"6A5ACD\", \"Slate Blue\", \"Blue\"],\r\n\t\t[\"708090\", \"Slate Grey\", \"Grey\"],\r\n\t\t[\"42342B\", \"Slugger\", \"Brown\"],\r\n\t\t[\"003399\", \"Smalt\", \"Blue\"],\r\n\t\t[\"496267\", \"Smalt Blue\", \"Blue\"],\r\n\t\t[\"BB5F34\", \"Smoke Tree\", \"Orange\"],\r\n\t\t[\"605D6B\", \"Smoky\", \"Violet\"],\r\n\t\t[\"FFFAFA\", \"Snow\", \"White\"],\r\n\t\t[\"E3E3DC\", \"Snow Drift\", \"Grey\"],\r\n\t\t[\"EAF7C9\", \"Snow Flurry\", \"Green\"],\r\n\t\t[\"D6F0CD\", \"Snowy Mint\", \"Green\"],\r\n\t\t[\"E4D7E5\", \"Snuff\", \"Violet\"],\r\n\t\t[\"ECE5DA\", \"Soapstone\", \"Grey\"],\r\n\t\t[\"CFBEA5\", \"Soft Amber\", \"Yellow\"],\r\n\t\t[\"EEDFDE\", \"Soft Peach\", \"Red\"],\r\n\t\t[\"85494C\", \"Solid Pink\", \"Red\"],\r\n\t\t[\"EADAC2\", \"Solitaire\", \"Yellow\"],\r\n\t\t[\"E9ECF1\", \"Solitude\", \"Blue\"],\r\n\t\t[\"DD6B38\", \"Sorbus\", \"Orange\"],\r\n\t\t[\"9D7F61\", \"Sorrell Brown\", \"Brown\"],\r\n\t\t[\"C9B59A\", \"Sour Dough\", \"Brown\"],\r\n\t\t[\"6F634B\", \"Soya Bean\", \"Brown\"],\r\n\t\t[\"4B433B\", \"Space Shuttle\", \"Brown\"],\r\n\t\t[\"7B8976\", \"Spanish Green\", \"Green\"],\r\n\t\t[\"DED1B7\", \"Spanish White\", \"Yellow\"],\r\n\t\t[\"375D4F\", \"Spectra\", \"Green\"],\r\n\t\t[\"6C4F3F\", \"Spice\", \"Brown\"],\r\n\t\t[\"8B5F4D\", \"Spicy Mix\", \"Brown\"],\r\n\t\t[\"FF1CAE\", \"Spicy Pink\", \"Red\"],\r\n\t\t[\"B3C4D8\", \"Spindle\", \"Blue\"],\r\n\t\t[\"F1D79E\", \"Splash\", \"Yellow\"],\r\n\t\t[\"7ECDDD\", \"Spray\", \"Blue\"],\r\n\t\t[\"A7FC00\", \"Spring Bud\", \"Green\"],\r\n\t\t[\"00FF7F\", \"Spring Green\", \"Green\"],\r\n\t\t[\"A3BD9C\", \"Spring Rain\", \"Green\"],\r\n\t\t[\"F1F1C6\", \"Spring Sun\", \"Green\"],\r\n\t\t[\"E9E1D9\", \"Spring Wood\", \"Grey\"],\r\n\t\t[\"B8CA9D\", \"Sprout\", \"Green\"],\r\n\t\t[\"A2A1AC\", \"Spun Pearl\", \"Blue\"],\r\n\t\t[\"8F7D6B\", \"Squirrel\", \"Brown\"],\r\n\t\t[\"325482\", \"St Tropaz\", \"Blue\"],\r\n\t\t[\"858885\", \"Stack\", \"Grey\"],\r\n\t\t[\"A0A197\", \"Star Dust\", \"Grey\"],\r\n\t\t[\"D2C6B6\", \"Stark White\", \"Yellow\"],\r\n\t\t[\"E3DD39\", \"Starship\", \"Green\"],\r\n\t\t[\"4682B4\", \"Steel Blue\", \"Blue\"],\r\n\t\t[\"43464B\", \"Steel Grey\", \"Grey\"],\r\n\t\t[\"833D3E\", \"Stiletto\", \"Red\"],\r\n\t\t[\"807661\", \"Stonewall\", \"Yellow\"],\r\n\t\t[\"65645F\", \"Storm Dust\", \"Grey\"],\r\n\t\t[\"747880\", \"Storm Grey\", \"Blue\"],\r\n\t\t[\"DABE82\", \"Straw\", \"Yellow\"],\r\n\t\t[\"946A81\", \"Strikemaster\", \"Violet\"],\r\n\t\t[\"406356\", \"Stromboli\", \"Green\"],\r\n\t\t[\"724AA1\", \"Studio\", \"Violet\"],\r\n\t\t[\"8C9C9C\", \"Submarine\", \"Blue\"],\r\n\t\t[\"EEEFDF\", \"Sugar Cane\", \"Green\"],\r\n\t\t[\"C6EA80\", \"Sulu\", \"Green\"],\r\n\t\t[\"8FB69C\", \"Summer Green\", \"Green\"],\r\n\t\t[\"38B0DE\", \"Summer Sky\", \"Blue\"],\r\n\t\t[\"EF8E38\", \"Sun\", \"Orange\"],\r\n\t\t[\"C4AA4D\", \"Sundance\", \"Yellow\"],\r\n\t\t[\"F8AFA9\", \"Sundown\", \"Red\"],\r\n\t\t[\"DAC01A\", \"Sunflower\", \"Yellow\"],\r\n\t\t[\"C76155\", \"Sunglo\", \"Red\"],\r\n\t\t[\"FFCC33\", \"Sunglow\", \"Orange\"],\r\n\t\t[\"C0514A\", \"Sunset\", \"Red\"],\r\n\t\t[\"FE4C40\", \"Sunset Orange\", \"Orange\"],\r\n\t\t[\"FA9D49\", \"Sunshade\", \"Orange\"],\r\n\t\t[\"FFB437\", \"Supernova\", \"Yellow\"],\r\n\t\t[\"B8D4BB\", \"Surf\", \"Green\"],\r\n\t\t[\"C3D6BD\", \"Surf Crest\", \"Green\"],\r\n\t\t[\"007B77\", \"Surfie Green\", \"Green\"],\r\n\t\t[\"7C9F2F\", \"Sushi\", \"Green\"],\r\n\t\t[\"8B8685\", \"Suva Grey\", \"Grey\"],\r\n\t\t[\"252F2F\", \"Swamp\", \"Green\"],\r\n\t\t[\"DAE6DD\", \"Swans Down\", \"Grey\"],\r\n\t\t[\"F9E176\", \"Sweet Corn\", \"Yellow\"],\r\n\t\t[\"EE918D\", \"Sweet Pink\", \"Red\"],\r\n\t\t[\"D7CEC5\", \"Swirl\", \"Grey\"],\r\n\t\t[\"DBD0CA\", \"Swiss Coffee\", \"Grey\"],\r\n\t\t[\"F6AE78\", \"Tacao\", \"Orange\"],\r\n\t\t[\"D2B960\", \"Tacha\", \"Yellow\"],\r\n\t\t[\"DC722A\", \"Tahiti Gold\", \"Orange\"],\r\n\t\t[\"D8CC9B\", \"Tahuna Sands\", \"Yellow\"],\r\n\t\t[\"853534\", \"Tall Poppy\", \"Red\"],\r\n\t\t[\"A39977\", \"Tallow\", \"Yellow\"],\r\n\t\t[\"752B2F\", \"Tamarillo\", \"Red\"],\r\n\t\t[\"D2B48C\", \"Tan\", \"Brown\"],\r\n\t\t[\"B8B5A1\", \"Tana\", \"Green\"],\r\n\t\t[\"1E2F3C\", \"Tangaroa\", \"Blue\"],\r\n\t\t[\"F28500\", \"Tangerine\", \"Orange\"],\r\n\t\t[\"FFCC00\", \"Tangerine Yellow\", \"Yellow\"],\r\n\t\t[\"D46F31\", \"Tango\", \"Orange\"],\r\n\t\t[\"7C7C72\", \"Tapa\", \"Green\"],\r\n\t\t[\"B37084\", \"Tapestry\", \"Red\"],\r\n\t\t[\"DEF1DD\", \"Tara\", \"Green\"],\r\n\t\t[\"253C48\", \"Tarawera\", \"Blue\"],\r\n\t\t[\"BAC0B3\", \"Tasman\", \"Grey\"],\r\n\t\t[\"483C32\", \"Taupe\", \"Grey\"],\r\n\t\t[\"8B8589\", \"Taupe Grey\", \"Grey\"],\r\n\t\t[\"643A48\", \"Tawny Port\", \"Red\"],\r\n\t\t[\"496569\", \"Tax Break\", \"Blue\"],\r\n\t\t[\"2B4B40\", \"Te Papa Green\", \"Green\"],\r\n\t\t[\"BFB5A2\", \"Tea\", \"Yellow\"],\r\n\t\t[\"D0F0C0\", \"Tea Green\", \"Green\"],\r\n\t\t[\"F883C2\", \"Tea Rose\", \"Orange\"],\r\n\t\t[\"AB8953\", \"Teak\", \"Yellow\"],\r\n\t\t[\"008080\", \"Teal\", \"Blue\"],\r\n\t\t[\"254855\", \"Teal Blue\", \"Blue\"],\r\n\t\t[\"3C2126\", \"Temptress\", \"Brown\"],\r\n\t\t[\"CD5700\", \"Tenne (Tawny)\", \"Orange\"],\r\n\t\t[\"F4D0A4\", \"Tequila\", \"Yellow\"],\r\n\t\t[\"E2725B\", \"Terra Cotta\", \"Red\"],\r\n\t\t[\"ECE67E\", \"Texas\", \"Green\"],\r\n\t\t[\"FCB057\", \"Texas Rose\", \"Orange\"],\r\n\t\t[\"B1948F\", \"Thatch\", \"Brown\"],\r\n\t\t[\"544E31\", \"Thatch Green\", \"Yellow\"],\r\n\t\t[\"D8BFD8\", \"Thistle\", \"Violet\"],\r\n\t\t[\"4D4D4B\", \"Thunder\", \"Grey\"],\r\n\t\t[\"923830\", \"Thunderbird\", \"Red\"],\r\n\t\t[\"97422D\", \"Tia Maria\", \"Orange\"],\r\n\t\t[\"B9C3BE\", \"Tiara\", \"Grey\"],\r\n\t\t[\"184343\", \"Tiber\", \"Green\"],\r\n\t\t[\"FC80A5\", \"Tickle Me Pink\", \"Red\"],\r\n\t\t[\"F0F590\", \"Tidal\", \"Green\"],\r\n\t\t[\"BEB4AB\", \"Tide\", \"Brown\"],\r\n\t\t[\"324336\", \"Timber Green\", \"Green\"],\r\n\t\t[\"D9D6CF\", \"Timberwolf\", \"Grey\"],\r\n\t\t[\"DDD6E1\", \"Titan White\", \"Violet\"],\r\n\t\t[\"9F715F\", \"Toast\", \"Brown\"],\r\n\t\t[\"6D5843\", \"Tobacco Brown\", \"Brown\"],\r\n\t\t[\"44362D\", \"Tobago\", \"Brown\"],\r\n\t\t[\"3E2631\", \"Toledo\", \"Violet\"],\r\n\t\t[\"2D2541\", \"Tolopea\", \"Violet\"],\r\n\t\t[\"4F6348\", \"Tom Thumb\", \"Green\"],\r\n\t\t[\"FF6347\", \"Tomato\", \"Red\"],\r\n\t\t[\"E79E88\", \"Tonys Pink\", \"Orange\"],\r\n\t\t[\"817C87\", \"Topaz\", \"Violet\"],\r\n\t\t[\"FD0E35\", \"Torch Red\", \"Red\"],\r\n\t\t[\"353D75\", \"Torea Bay\", \"Blue\"],\r\n\t\t[\"374E88\", \"Tory Blue\", \"Blue\"],\r\n\t\t[\"744042\", \"Tosca\", \"Red\"],\r\n\t\t[\"9CACA5\", \"Tower Grey\", \"Green\"],\r\n\t\t[\"6DAFA7\", \"Tradewind\", \"Green\"],\r\n\t\t[\"DDEDE9\", \"Tranquil\", \"Blue\"],\r\n\t\t[\"E2DDC7\", \"Travertine\", \"Green\"],\r\n\t\t[\"E2813B\", \"Tree Poppy\", \"Orange\"],\r\n\t\t[\"7E8424\", \"Trendy Green\", \"Green\"],\r\n\t\t[\"805D80\", \"Trendy Pink\", \"Violet\"],\r\n\t\t[\"C54F33\", \"Trinidad\", \"Orange\"],\r\n\t\t[\"AEC9EB\", \"Tropical Blue\", \"Blue\"],\r\n\t\t[\"00755E\", \"Tropical Rain Forest\", \"Green\"],\r\n\t\t[\"4C5356\", \"Trout\", \"Grey\"],\r\n\t\t[\"8E72C7\", \"True V\", \"Violet\"],\r\n\t\t[\"454642\", \"Tuatara\", \"Grey\"],\r\n\t\t[\"F9D3BE\", \"Tuft Bush\", \"Orange\"],\r\n\t\t[\"E3AC3D\", \"Tulip Tree\", \"Yellow\"],\r\n\t\t[\"DEA681\", \"Tumbleweed\", \"Brown\"],\r\n\t\t[\"46494E\", \"Tuna\", \"Grey\"],\r\n\t\t[\"585452\", \"Tundora\", \"Grey\"],\r\n\t\t[\"F5CC23\", \"Turbo\", \"Yellow\"],\r\n\t\t[\"A56E75\", \"Turkish Rose\", \"Red\"],\r\n\t\t[\"AE9041\", \"Turmeric\", \"Yellow\"],\r\n\t\t[\"40E0D0\", \"Turquoise\", \"Blue\"],\r\n\t\t[\"6CDAE7\", \"Turquoise Blue\", \"Blue\"],\r\n\t\t[\"363E1D\", \"Turtle Green\", \"Green\"],\r\n\t\t[\"AD6242\", \"Tuscany\", \"Orange\"],\r\n\t\t[\"E3E5B1\", \"Tusk\", \"Green\"],\r\n\t\t[\"BF914B\", \"Tussock\", \"Yellow\"],\r\n\t\t[\"F8E4E3\", \"Tutu\", \"Red\"],\r\n\t\t[\"DAC0CD\", \"Twilight\", \"Violet\"],\r\n\t\t[\"F4F6EC\", \"Twilight Blue\", \"Grey\"],\r\n\t\t[\"C19156\", \"Twine\", \"Yellow\"],\r\n\t\t[\"66023C\", \"Tyrian Purple\", \"Violet\"],\r\n\t\t[\"FF6FFF\", \"Ultra Pink\", \"Red\"],\r\n\t\t[\"120A8F\", \"Ultramarine\", \"Blue\"],\r\n\t\t[\"D4574E\", \"Valencia\", \"Red\"],\r\n\t\t[\"382C38\", \"Valentino\", \"Violet\"],\r\n\t\t[\"2A2B41\", \"Valhalla\", \"Violet\"],\r\n\t\t[\"523936\", \"Van Cleef\", \"Brown\"],\r\n\t\t[\"CCB69B\", \"Vanilla\", \"Brown\"],\r\n\t\t[\"EBD2D1\", \"Vanilla Ice\", \"Red\"],\r\n\t\t[\"FDEFD3\", \"Varden\", \"Yellow\"],\r\n\t\t[\"C80815\", \"Venetian Red\", \"Red\"],\r\n\t\t[\"2C5778\", \"Venice Blue\", \"Blue\"],\r\n\t\t[\"8B7D82\", \"Venus\", \"Violet\"],\r\n\t\t[\"62603E\", \"Verdigris\", \"Grey\"],\r\n\t\t[\"48531A\", \"Verdun Green\", \"Green\"],\r\n\t\t[\"FF4D00\", \"Vermilion\", \"Red\"],\r\n\t\t[\"5C4033\", \"Very Dark Brown\", \"Brown\"],\r\n\t\t[\"CDCDCD\", \"Very Light Grey\", \"Grey\"],\r\n\t\t[\"A85533\", \"Vesuvius\", \"Orange\"],\r\n\t\t[\"564985\", \"Victoria\", \"Violet\"],\r\n\t\t[\"5F9228\", \"Vida Loca\", \"Green\"],\r\n\t\t[\"4DB1C8\", \"Viking\", \"Blue\"],\r\n\t\t[\"955264\", \"Vin Rouge\", \"Red\"],\r\n\t\t[\"C58F9D\", \"Viola\", \"Red\"],\r\n\t\t[\"2E2249\", \"Violent Violet\", \"Violet\"],\r\n\t\t[\"EE82EE\", \"Violet\", \"Violet\"],\r\n\t\t[\"9F5F9F\", \"Violet Blue\", \"Violet\"],\r\n\t\t[\"F7468A\", \"Violet Red\", \"Red\"],\r\n\t\t[\"40826D\", \"Viridian\", \"Blue\"],\r\n\t\t[\"4B5F56\", \"Viridian Green\", \"Green\"],\r\n\t\t[\"F9E496\", \"Vis Vis\", \"Yellow\"],\r\n\t\t[\"97D5B3\", \"Vista Blue\", \"Green\"],\r\n\t\t[\"E3DFD9\", \"Vista White\", \"Grey\"],\r\n\t\t[\"FF9980\", \"Vivid Tangerine\", \"Orange\"],\r\n\t\t[\"803790\", \"Vivid Violet\", \"Violet\"],\r\n\t\t[\"4E2728\", \"Volcano\", \"Red\"],\r\n\t\t[\"443240\", \"Voodoo\", \"Violet\"],\r\n\t\t[\"36383C\", \"Vulcan\", \"Grey\"],\r\n\t\t[\"D4BBB1\", \"Wafer\", \"Orange\"],\r\n\t\t[\"5B6E91\", \"Waikawa Grey\", \"Blue\"],\r\n\t\t[\"4C4E31\", \"Waiouru\", \"Green\"],\r\n\t\t[\"E4E2DC\", \"Wan White\", \"Grey\"],\r\n\t\t[\"849137\", \"Wasabi\", \"Green\"],\r\n\t\t[\"B6ECDE\", \"Water Leaf\", \"Green\"],\r\n\t\t[\"006E4E\", \"Watercourse\", \"Green\"],\r\n\t\t[\"D6CA3D\", \"Wattle\", \"Green\"],\r\n\t\t[\"F2CDBB\", \"Watusi\", \"Orange\"],\r\n\t\t[\"EEB39E\", \"Wax Flower\", \"Orange\"],\r\n\t\t[\"FDD7D8\", \"We Peep\", \"Red\"],\r\n\t\t[\"4C6B88\", \"Wedgewood\", \"Blue\"],\r\n\t\t[\"8E3537\", \"Well Read\", \"Red\"],\r\n\t\t[\"5C512F\", \"West Coast\", \"Yellow\"],\r\n\t\t[\"E5823A\", \"West Side\", \"Orange\"],\r\n\t\t[\"D4CFC5\", \"Westar\", \"Grey\"],\r\n\t\t[\"F1919A\", \"Wewak\", \"Red\"],\r\n\t\t[\"F5DEB3\", \"Wheat\", \"Brown\"],\r\n\t\t[\"DFD7BD\", \"Wheatfield\", \"Yellow\"],\r\n\t\t[\"D29062\", \"Whiskey\", \"Orange\"],\r\n\t\t[\"D4915D\", \"Whiskey Sour\", \"Orange\"],\r\n\t\t[\"EFE6E6\", \"Whisper\", \"Grey\"],\r\n\t\t[\"FFFFFF\", \"White\", \"White\"],\r\n\t\t[\"D7EEE4\", \"White Ice\", \"Green\"],\r\n\t\t[\"E7E5E8\", \"White Lilac\", \"Blue\"],\r\n\t\t[\"EEE7DC\", \"White Linen\", \"Grey\"],\r\n\t\t[\"F8F6D8\", \"White Nectar\", \"Green\"],\r\n\t\t[\"DAD6CC\", \"White Pointer\", \"Grey\"],\r\n\t\t[\"D4CFB4\", \"White Rock\", \"Green\"],\r\n\t\t[\"F5F5F5\", \"White Smoke\", \"White\"],\r\n\t\t[\"7A89B8\", \"Wild Blue Yonder\", \"Blue\"],\r\n\t\t[\"E3D474\", \"Wild Rice\", \"Green\"],\r\n\t\t[\"E7E4DE\", \"Wild Sand\", \"Grey\"],\r\n\t\t[\"FF3399\", \"Wild Strawberry\", \"Red\"],\r\n\t\t[\"FD5B78\", \"Wild Watermelon\", \"Red\"],\r\n\t\t[\"BECA60\", \"Wild Willow\", \"Green\"],\r\n\t\t[\"53736F\", \"William\", \"Green\"],\r\n\t\t[\"DFE6CF\", \"Willow Brook\", \"Green\"],\r\n\t\t[\"69755C\", \"Willow Grove\", \"Green\"],\r\n\t\t[\"462C77\", \"Windsor\", \"Violet\"],\r\n\t\t[\"522C35\", \"Wine Berry\", \"Red\"],\r\n\t\t[\"D0C383\", \"Winter Hazel\", \"Yellow\"],\r\n\t\t[\"F9E8E2\", \"Wisp Pink\", \"Red\"],\r\n\t\t[\"C9A0DC\", \"Wisteria\", \"Violet\"],\r\n\t\t[\"A29ECD\", \"Wistful\", \"Blue\"],\r\n\t\t[\"FBF073\", \"Witch Haze\", \"Green\"],\r\n\t\t[\"302621\", \"Wood Bark\", \"Brown\"],\r\n\t\t[\"463629\", \"Woodburn\", \"Brown\"],\r\n\t\t[\"626746\", \"Woodland\", \"Green\"],\r\n\t\t[\"45402B\", \"Woodrush\", \"Yellow\"],\r\n\t\t[\"2B3230\", \"Woodsmoke\", \"Grey\"],\r\n\t\t[\"554545\", \"Woody Brown\", \"Brown\"],\r\n\t\t[\"75876E\", \"Xanadu\", \"Green\"],\r\n\t\t[\"FFFF00\", \"Yellow\", \"Yellow\"],\r\n\t\t[\"9ACD32\", \"Yellow Green\", \"Green\"],\r\n\t\t[\"73633E\", \"Yellow Metal\", \"Yellow\"],\r\n\t\t[\"FFAE42\", \"Yellow Orange\", \"Orange\"],\r\n\t\t[\"F49F35\", \"Yellow Sea\", \"Yellow\"],\r\n\t\t[\"FFC5BB\", \"Your Pink\", \"Red\"],\r\n\t\t[\"826A21\", \"Yukon Gold\", \"Yellow\"],\r\n\t\t[\"C7B882\", \"Yuma\", \"Yellow\"],\r\n\t\t[\"6B5A5A\", \"Zambezi\", \"Brown\"],\r\n\t\t[\"B2C6B1\", \"Zanah\", \"Green\"],\r\n\t\t[\"C6723B\", \"Zest\", \"Orange\"],\r\n\t\t[\"3B3C38\", \"Zeus\", \"Grey\"],\r\n\t\t[\"81A6AA\", \"Ziggurat\", \"Blue\"],\r\n\t\t[\"EBC2AF\", \"Zinnwaldite\", \"Brown\"],\r\n\t\t[\"DEE3E3\", \"Zircon\", \"Grey\"],\r\n\t\t[\"DDC283\", \"Zombie\", \"Yellow\"],\r\n\t\t[\"A29589\", \"Zorba\", \"Brown\"],\r\n\t\t[\"17462E\", \"Zuccini\", \"Green\"],\r\n\t\t[\"CDD5D5\", \"Zumthor\", \"Grey\"],\r\n\t],\r\n}\r\n\r\nntc.init()\r\nmodule.exports = ntc\r\n","import React, { Component, HTMLAttributes, MouseEvent } from \"react\"\r\nimport { TSGLContext, Mesh, Shader } from \"tsgl\"\r\nimport { V3, V, M4, DEG, assertNever, lerp, int, Matrix, Tuple3 } from \"ts3dutils\"\r\nimport posVS from \"tsgl/src/shaders/posVS.glslx\"\r\nimport memoize from \"lodash.memoize\"\r\nimport colorFS from \"tsgl/src/shaders/colorFS.glslx\"\r\nimport { colorsExtended } from \"../src/colorsExtended\"\r\n\r\n// @ts-ignore\r\nimport posNormalColorVS from \"./interpolationVS.glslx\"\r\nimport varyingColorFS from \"tsgl/src/shaders/varyingColorFS.glslx\"\r\nimport chroma, { ColorMode } from \"..\"\r\nimport { colorSpaces, DrawableColorSpaces } from \"./colorSpaces\"\r\n// @ts-ignore\r\nimport * as ntc from \"../ntc2\"\r\n\r\nconst ANIMATION_DURATION = 2000\r\ntype Color = chroma.Color\r\ntype X = Color & { displayColor?: Color }\r\n\r\nconst names = [\r\n\t[\"35312C\", \"Acadia\", \"Brown\"],\r\n\t[\"75AA94\", \"Acapulco\", \"Green\"],\r\n\t[\"C0E8D5\", \"Aero Blue\", \"Green\"],\r\n\t[\"745085\", \"Affair\", \"Violet\"],\r\n\t[\"905E26\", \"Afghan Tan\", \"Yellow\"],\r\n\t[\"5D8AA8\", \"Air Force Blue\", \"Blue\"],\r\n\t[\"BEB29A\", \"Akaroa\", \"Yellow\"],\r\n\t[\"F2F0E6\", \"Alabaster\", \"Grey\"],\r\n\t[\"E1DACB\", \"Albescent White\", \"Yellow\"],\r\n\t[\"954E2C\", \"Alert Tan\", \"Orange\"],\r\n\t[\"F0F8FF\", \"Alice Blue\", \"Blue\"],\r\n\t[\"E32636\", \"Alizarin\", \"Red\"],\r\n\t[\"1F6A7D\", \"Allports\", \"Blue\"],\r\n\t[\"EED9C4\", \"Almond\", \"Yellow\"],\r\n\t[\"9A8678\", \"Almond Frost\", \"Brown\"],\r\n\t[\"AD8A3B\", \"Alpine\", \"Yellow\"],\r\n\t[\"CDC6C5\", \"Alto\", \"Grey\"],\r\n\t[\"848789\", \"Aluminium\", \"Grey\"],\r\n\t[\"E52B50\", \"Amaranth\", \"Red\"],\r\n\t[\"387B54\", \"Amazon\", \"Green\"],\r\n\t[\"FFBF00\", \"Amber\", \"Yellow\"],\r\n\t[\"8A7D72\", \"Americano\", \"Brown\"],\r\n\t[\"9966CC\", \"Amethyst\", \"Violet\"],\r\n\t[\"95879C\", \"Amethyst Smoke\", \"Violet\"],\r\n\t[\"F5E6EA\", \"Amour\", \"Violet\"],\r\n\t[\"7D9D72\", \"Amulet\", \"Green\"],\r\n\t[\"8CCEEA\", \"Anakiwa\", \"Blue\"],\r\n\t[\"6C461F\", \"Antique Brass\", \"Orange\"],\r\n\t[\"FAEBD7\", \"Antique White\", \"White\"],\r\n\t[\"C68E3F\", \"Anzac\", \"Yellow\"],\r\n\t[\"D3A95C\", \"Apache\", \"Yellow\"],\r\n\t[\"66B348\", \"Apple\", \"Green\"],\r\n\t[\"A95249\", \"Apple Blossom\", \"Red\"],\r\n\t[\"DEEADC\", \"Apple Green\", \"Green\"],\r\n\t[\"FBCEB1\", \"Apricot\", \"Orange\"],\r\n\t[\"F7F0DB\", \"Apricot White\", \"Yellow\"],\r\n\t[\"00FFFF\", \"Aqua\", \"Blue\"],\r\n\t[\"D9DDD5\", \"Aqua Haze\", \"Grey\"],\r\n\t[\"E8F3E8\", \"Aqua Spring\", \"Green\"],\r\n\t[\"DBE4DC\", \"Aqua Squeeze\", \"Grey\"],\r\n\t[\"7FFFD4\", \"Aquamarine\", \"Blue\"],\r\n\t[\"274A5D\", \"Arapawa\", \"Blue\"],\r\n\t[\"484A46\", \"Armadillo\", \"Grey\"],\r\n\t[\"4B5320\", \"Army green\", \"Green\"],\r\n\t[\"827A67\", \"Arrowtown\", \"Yellow\"],\r\n\t[\"3B444B\", \"Arsenic\", \"Grey\"],\r\n\t[\"BEBAA7\", \"Ash\", \"Green\"],\r\n\t[\"7BA05B\", \"Asparagus\", \"Green\"],\r\n\t[\"EDD5A6\", \"Astra\", \"Yellow\"],\r\n\t[\"376F89\", \"Astral\", \"Blue\"],\r\n\t[\"445172\", \"Astronaut\", \"Blue\"],\r\n\t[\"214559\", \"Astronaut Blue\", \"Blue\"],\r\n\t[\"DCDDDD\", \"Athens Grey\", \"Grey\"],\r\n\t[\"D5CBB2\", \"Aths Special\", \"Yellow\"],\r\n\t[\"9CD03B\", \"Atlantis\", \"Green\"],\r\n\t[\"2B797A\", \"Atoll\", \"Green\"],\r\n\t[\"3D4B52\", \"Atomic\", \"Blue\"],\r\n\t[\"FF9966\", \"Atomic Tangerine\", \"Orange\"],\r\n\t[\"9E6759\", \"Au Chico\", \"Brown\"],\r\n\t[\"372528\", \"Aubergine\", \"Brown\"],\r\n\t[\"712F2C\", \"Auburn\", \"Brown\"],\r\n\t[\"EFF8AA\", \"Australian Mint\", \"Green\"],\r\n\t[\"95986B\", \"Avocado\", \"Green\"],\r\n\t[\"63775A\", \"Axolotl\", \"Green\"],\r\n\t[\"F9C0C4\", \"Azalea\", \"Red\"],\r\n\t[\"293432\", \"Aztec\", \"Green\"],\r\n\t[\"F0FFFF\", \"Azure\", \"Blue\"],\r\n\t[\"6FFFFF\", \"Baby Blue\", \"Blue\"],\r\n\t[\"25597F\", \"Bahama Blue\", \"Blue\"],\r\n\t[\"A9C01C\", \"Bahia\", \"Green\"],\r\n\t[\"5C3317\", \"Baker's Chocolate\", \"Brown\"],\r\n\t[\"849CA9\", \"Bali Hai\", \"Blue\"],\r\n\t[\"3C3D3E\", \"Baltic Sea\", \"Grey\"],\r\n\t[\"FBE7B2\", \"Banana Mania\", \"Yellow\"],\r\n\t[\"878466\", \"Bandicoot\", \"Green\"],\r\n\t[\"D2C61F\", \"Barberry\", \"Green\"],\r\n\t[\"B6935C\", \"Barley Corn\", \"Yellow\"],\r\n\t[\"F7E5B7\", \"Barley White\", \"Yellow\"],\r\n\t[\"452E39\", \"Barossa\", \"Violet\"],\r\n\t[\"2C2C32\", \"Bastille\", \"Blue\"],\r\n\t[\"51574F\", \"Battleship Grey\", \"Grey\"],\r\n\t[\"7BB18D\", \"Bay Leaf\", \"Green\"],\r\n\t[\"353E64\", \"Bay Of Many\", \"Blue\"],\r\n\t[\"8F7777\", \"Bazaar\", \"Brown\"],\r\n\t[\"EBB9B3\", \"Beauty Bush\", \"Red\"],\r\n\t[\"926F5B\", \"Beaver\", \"Brown\"],\r\n\t[\"E9D7AB\", \"Beeswax\", \"Yellow\"],\r\n\t[\"F5F5DC\", \"Beige\", \"Brown\"],\r\n\t[\"86D2C1\", \"Bermuda\", \"Green\"],\r\n\t[\"6F8C9F\", \"Bermuda Grey\", \"Blue\"],\r\n\t[\"BCBFA8\", \"Beryl Green\", \"Green\"],\r\n\t[\"F4EFE0\", \"Bianca\", \"Yellow\"],\r\n\t[\"334046\", \"Big Stone\", \"Blue\"],\r\n\t[\"3E8027\", \"Bilbao\", \"Green\"],\r\n\t[\"AE99D2\", \"Biloba Flower\", \"Violet\"],\r\n\t[\"3F3726\", \"Birch\", \"Yellow\"],\r\n\t[\"D0C117\", \"Bird Flower\", \"Green\"],\r\n\t[\"2F3C53\", \"Biscay\", \"Blue\"],\r\n\t[\"486C7A\", \"Bismark\", \"Blue\"],\r\n\t[\"B5AC94\", \"Bison Hide\", \"Yellow\"],\r\n\t[\"FFE4C4\", \"Bisque\", \"Brown\"],\r\n\t[\"3D2B1F\", \"Bistre\", \"Brown\"],\r\n\t[\"88896C\", \"Bitter\", \"Green\"],\r\n\t[\"D2DB32\", \"Bitter Lemon\", \"Green\"],\r\n\t[\"FE6F5E\", \"Bittersweet\", \"Orange\"],\r\n\t[\"E7D2C8\", \"Bizarre\", \"Orange\"],\r\n\t[\"000000\", \"Black\", \"Black\"],\r\n\t[\"232E26\", \"Black Bean\", \"Green\"],\r\n\t[\"2C3227\", \"Black Forest\", \"Green\"],\r\n\t[\"E0DED7\", \"Black Haze\", \"Grey\"],\r\n\t[\"332C22\", \"Black Magic\", \"Brown\"],\r\n\t[\"383740\", \"Black Marlin\", \"Blue\"],\r\n\t[\"1E272C\", \"Black Pearl\", \"Blue\"],\r\n\t[\"2C2D3C\", \"Black Rock\", \"Blue\"],\r\n\t[\"532934\", \"Black Rose\", \"Red\"],\r\n\t[\"24252B\", \"Black Russian\", \"Grey\"],\r\n\t[\"E5E6DF\", \"Black Squeeze\", \"Grey\"],\r\n\t[\"E5E4DB\", \"Black White\", \"Grey\"],\r\n\t[\"43182F\", \"Blackberry\", \"Violet\"],\r\n\t[\"2E183B\", \"Blackcurrant\", \"Violet\"],\r\n\t[\"D9D0C1\", \"Blanc\", \"Yellow\"],\r\n\t[\"FFEBCD\", \"Blanched Almond\", \"Brown\"],\r\n\t[\"EBE1CE\", \"Bleach White\", \"Yellow\"],\r\n\t[\"A3E3ED\", \"Blizzard Blue\", \"Blue\"],\r\n\t[\"DFB1B6\", \"Blossom\", \"Red\"],\r\n\t[\"0000FF\", \"Blue\", \"Blue\"],\r\n\t[\"62777E\", \"Blue Bayoux\", \"Blue\"],\r\n\t[\"9999CC\", \"Blue Bell\", \"Blue\"],\r\n\t[\"E3D6E9\", \"Blue Chalk\", \"Violet\"],\r\n\t[\"262B2F\", \"Blue Charcoal\", \"Blue\"],\r\n\t[\"408F90\", \"Blue Chill\", \"Green\"],\r\n\t[\"4B2D72\", \"Blue Diamond\", \"Violet\"],\r\n\t[\"35514F\", \"Blue Dianne\", \"Green\"],\r\n\t[\"4B3C8E\", \"Blue Gem\", \"Violet\"],\r\n\t[\"BDBACE\", \"Blue Haze\", \"Violet\"],\r\n\t[\"00626F\", \"Blue Lagoon\", \"Green\"],\r\n\t[\"6A5BB1\", \"Blue Marguerite\", \"Violet\"],\r\n\t[\"D8F0D2\", \"Blue Romance\", \"Green\"],\r\n\t[\"78857A\", \"Blue Smoke\", \"Green\"],\r\n\t[\"166461\", \"Blue Stone\", \"Green\"],\r\n\t[\"8A2BE2\", \"Blue Violet\", \"Violet\"],\r\n\t[\"1E3442\", \"Blue Whale\", \"Blue\"],\r\n\t[\"3C4354\", \"Blue Zodiac\", \"Blue\"],\r\n\t[\"305C71\", \"Blumine\", \"Blue\"],\r\n\t[\"B55067\", \"Blush\", \"Red\"],\r\n\t[\"2A2725\", \"Bokara Grey\", \"Grey\"],\r\n\t[\"79443B\", \"Bole\", \"Brown\"],\r\n\t[\"AEAEAD\", \"Bombay\", \"Grey\"],\r\n\t[\"DFD7D2\", \"Bon Jour\", \"Grey\"],\r\n\t[\"0095B6\", \"Bondi Blue\", \"Blue\"],\r\n\t[\"DBC2AB\", \"Bone\", \"Orange\"],\r\n\t[\"4C1C24\", \"Bordeaux\", \"Red\"],\r\n\t[\"4C3D4E\", \"Bossanova\", \"Violet\"],\r\n\t[\"438EAC\", \"Boston Blue\", \"Blue\"],\r\n\t[\"92ACB4\", \"Botticelli\", \"Blue\"],\r\n\t[\"254636\", \"Bottle Green\", \"Green\"],\r\n\t[\"7C817C\", \"Boulder\", \"Grey\"],\r\n\t[\"A78199\", \"Bouquet\", \"Violet\"],\r\n\t[\"AF6C3E\", \"Bourbon\", \"Orange\"],\r\n\t[\"5B3D27\", \"Bracken\", \"Brown\"],\r\n\t[\"DCB68A\", \"Brandy\", \"Orange\"],\r\n\t[\"C07C40\", \"Brandy Punch\", \"Orange\"],\r\n\t[\"B6857A\", \"Brandy Rose\", \"Red\"],\r\n\t[\"B5A642\", \"Brass\", \"Yellow\"],\r\n\t[\"517B78\", \"Breaker Bay\", \"Green\"],\r\n\t[\"C62D42\", \"Brick Red\", \"Red\"],\r\n\t[\"F8EBDD\", \"Bridal Heath\", \"Orange\"],\r\n\t[\"FAE6DF\", \"Bridesmaid\", \"Orange\"],\r\n\t[\"66FF00\", \"Bright Green\", \"Green\"],\r\n\t[\"57595D\", \"Bright Grey\", \"Grey\"],\r\n\t[\"922A31\", \"Bright Red\", \"Red\"],\r\n\t[\"ECBD2C\", \"Bright Sun\", \"Yellow\"],\r\n\t[\"08E8DE\", \"Bright Turquoise\", \"Blue\"],\r\n\t[\"FF55A3\", \"Brilliant Rose\", \"Red\"],\r\n\t[\"FB607F\", \"Brink Pink\", \"Red\"],\r\n\t[\"004225\", \"British Racing Green\", \"Green\"],\r\n\t[\"A79781\", \"Bronco\", \"Brown\"],\r\n\t[\"CD7F32\", \"Bronze\", \"Brown\"],\r\n\t[\"584C25\", \"Bronze Olive\", \"Yellow\"],\r\n\t[\"434C28\", \"Bronzetone\", \"Yellow\"],\r\n\t[\"EECC24\", \"Broom\", \"Yellow\"],\r\n\t[\"A52A2A\", \"Brown\", \"Brown\"],\r\n\t[\"53331E\", \"Brown Bramble\", \"Brown\"],\r\n\t[\"594537\", \"Brown Derby\", \"Brown\"],\r\n\t[\"3C241B\", \"Brown Pod\", \"Brown\"],\r\n\t[\"E6F2EA\", \"Bubbles\", \"Green\"],\r\n\t[\"6E5150\", \"Buccaneer\", \"Red\"],\r\n\t[\"A5A88F\", \"Bud\", \"Green\"],\r\n\t[\"BC9B1B\", \"Buddha Gold\", \"Yellow\"],\r\n\t[\"F0DC82\", \"Buff\", \"Yellow\"],\r\n\t[\"482427\", \"Bulgarian Rose\", \"Red\"],\r\n\t[\"75442B\", \"Bull Shot\", \"Orange\"],\r\n\t[\"292C2F\", \"Bunker\", \"Grey\"],\r\n\t[\"2B3449\", \"Bunting\", \"Blue\"],\r\n\t[\"800020\", \"Burgundy\", \"Red\"],\r\n\t[\"DEB887\", \"Burly Wood\", \"Brown\"],\r\n\t[\"234537\", \"Burnham\", \"Green\"],\r\n\t[\"D08363\", \"Burning Sand\", \"Orange\"],\r\n\t[\"582124\", \"Burnt Crimson\", \"Red\"],\r\n\t[\"FF7034\", \"Burnt Orange\", \"Orange\"],\r\n\t[\"E97451\", \"Burnt Sienna\", \"Brown\"],\r\n\t[\"8A3324\", \"Burnt Umber\", \"Brown\"],\r\n\t[\"DA9429\", \"Buttercup\", \"Yellow\"],\r\n\t[\"9D702E\", \"Buttered Rum\", \"Yellow\"],\r\n\t[\"68578C\", \"Butterfly Bush\", \"Violet\"],\r\n\t[\"F6E0A4\", \"Buttermilk\", \"Yellow\"],\r\n\t[\"F1EBDA\", \"Buttery White\", \"Yellow\"],\r\n\t[\"4A2E32\", \"Cab Sav\", \"Red\"],\r\n\t[\"CD526C\", \"Cabaret\", \"Red\"],\r\n\t[\"4C5544\", \"Cabbage Pont\", \"Green\"],\r\n\t[\"5B6F55\", \"Cactus\", \"Green\"],\r\n\t[\"5F9EA0\", \"Cadet Blue\", \"Blue\"],\r\n\t[\"984961\", \"Cadillac\", \"Red\"],\r\n\t[\"6A4928\", \"Cafe Royale\", \"Brown\"],\r\n\t[\"D5B185\", \"Calico\", \"Brown\"],\r\n\t[\"E98C3A\", \"California\", \"Orange\"],\r\n\t[\"3D7188\", \"Calypso\", \"Blue\"],\r\n\t[\"206937\", \"Camarone\", \"Green\"],\r\n\t[\"803A4B\", \"Camelot\", \"Red\"],\r\n\t[\"CCA483\", \"Cameo\", \"Brown\"],\r\n\t[\"4F4D32\", \"Camouflage\", \"Yellow\"],\r\n\t[\"78866B\", \"Camouflage Green\", \"Green\"],\r\n\t[\"D08A9B\", \"Can Can\", \"Red\"],\r\n\t[\"FFFF99\", \"Canary\", \"Yellow\"],\r\n\t[\"8E5164\", \"Cannon Pink\", \"Red\"],\r\n\t[\"4E5552\", \"Cape Cod\", \"Grey\"],\r\n\t[\"FEE0A5\", \"Cape Honey\", \"Yellow\"],\r\n\t[\"75482F\", \"Cape Palliser\", \"Orange\"],\r\n\t[\"AFC182\", \"Caper\", \"Green\"],\r\n\t[\"592720\", \"Caput Mortuum\", \"Brown\"],\r\n\t[\"FFD59A\", \"Caramel\", \"Yellow\"],\r\n\t[\"EBE5D5\", \"Cararra\", \"Green\"],\r\n\t[\"1B3427\", \"Cardin Green\", \"Green\"],\r\n\t[\"C41E3A\", \"Cardinal\", \"Red\"],\r\n\t[\"C99AA0\", \"Careys Pink\", \"Red\"],\r\n\t[\"00CC99\", \"Caribbean Green\", \"Green\"],\r\n\t[\"E68095\", \"Carissma\", \"Red\"],\r\n\t[\"F5F9CB\", \"Carla\", \"Green\"],\r\n\t[\"960018\", \"Carmine\", \"Red\"],\r\n\t[\"5B3A24\", \"Carnaby Tan\", \"Brown\"],\r\n\t[\"FFA6C9\", \"Carnation Pink\", \"Red\"],\r\n\t[\"F8DBE0\", \"Carousel Pink\", \"Red\"],\r\n\t[\"ED9121\", \"Carrot Orange\", \"Orange\"],\r\n\t[\"F0B253\", \"Casablanca\", \"Yellow\"],\r\n\t[\"3F545A\", \"Casal\", \"Blue\"],\r\n\t[\"8CA8A0\", \"Cascade\", \"Green\"],\r\n\t[\"D1B399\", \"Cashmere\", \"Brown\"],\r\n\t[\"AAB5B8\", \"Casper\", \"Blue\"],\r\n\t[\"44232F\", \"Castro\", \"Red\"],\r\n\t[\"273C5A\", \"Catalina Blue\", \"Blue\"],\r\n\t[\"E0E4DC\", \"Catskill White\", \"Grey\"],\r\n\t[\"E0B8B1\", \"Cavern Pink\", \"Red\"],\r\n\t[\"9271A7\", \"Ce Soir\", \"Violet\"],\r\n\t[\"463430\", \"Cedar\", \"Brown\"],\r\n\t[\"ACE1AF\", \"Celadon\", \"Green\"],\r\n\t[\"B4C04C\", \"Celery\", \"Green\"],\r\n\t[\"D2D2C0\", \"Celeste\", \"Green\"],\r\n\t[\"3A4E5F\", \"Cello\", \"Blue\"],\r\n\t[\"2B3F36\", \"Celtic\", \"Green\"],\r\n\t[\"857158\", \"Cement\", \"Brown\"],\r\n\t[\"DE3163\", \"Cerise\", \"Violet\"],\r\n\t[\"007BA7\", \"Cerulean\", \"Blue\"],\r\n\t[\"2A52BE\", \"Cerulean Blue\", \"Blue\"],\r\n\t[\"FDE9E0\", \"Chablis\", \"Red\"],\r\n\t[\"5A6E41\", \"Chalet Green\", \"Green\"],\r\n\t[\"DFC281\", \"Chalky\", \"Yellow\"],\r\n\t[\"475877\", \"Chambray\", \"Blue\"],\r\n\t[\"E8CD9A\", \"Chamois\", \"Yellow\"],\r\n\t[\"EED9B6\", \"Champagne\", \"Yellow\"],\r\n\t[\"EDB8C7\", \"Chantilly\", \"Red\"],\r\n\t[\"394043\", \"Charade\", \"Blue\"],\r\n\t[\"464646\", \"Charcoal\", \"Grey\"],\r\n\t[\"F8EADF\", \"Chardon\", \"Orange\"],\r\n\t[\"FFC878\", \"Chardonnay\", \"Yellow\"],\r\n\t[\"A4DCE6\", \"Charlotte\", \"Blue\"],\r\n\t[\"D0748B\", \"Charm\", \"Red\"],\r\n\t[\"7FFF00\", \"Chartreuse\", \"Green\"],\r\n\t[\"DFFF00\", \"Chartreuse Yellow\", \"Yellow\"],\r\n\t[\"419F59\", \"Chateau Green\", \"Green\"],\r\n\t[\"B3ABB6\", \"Chatelle\", \"Violet\"],\r\n\t[\"2C5971\", \"Chathams Blue\", \"Blue\"],\r\n\t[\"88A95B\", \"Chelsea Cucumber\", \"Green\"],\r\n\t[\"95532F\", \"Chelsea Gem\", \"Orange\"],\r\n\t[\"DEC371\", \"Chenin\", \"Yellow\"],\r\n\t[\"F5CD82\", \"Cherokee\", \"Yellow\"],\r\n\t[\"372D52\", \"Cherry Pie\", \"Violet\"],\r\n\t[\"F5D7DC\", \"Cherub\", \"Red\"],\r\n\t[\"B94E48\", \"Chestnut\", \"Brown\"],\r\n\t[\"666FB4\", \"Chetwode Blue\", \"Blue\"],\r\n\t[\"5B5D56\", \"Chicago\", \"Grey\"],\r\n\t[\"F0F5BB\", \"Chiffon\", \"Green\"],\r\n\t[\"D05E34\", \"Chilean Fire\", \"Orange\"],\r\n\t[\"F9F7DE\", \"Chilean Heath\", \"Green\"],\r\n\t[\"FBF3D3\", \"China Ivory\", \"Green\"],\r\n\t[\"B8AD8A\", \"Chino\", \"Yellow\"],\r\n\t[\"9DD3A8\", \"Chinook\", \"Green\"],\r\n\t[\"D2691E\", \"Chocolate\", \"Brown\"],\r\n\t[\"382161\", \"Christalle\", \"Violet\"],\r\n\t[\"71A91D\", \"Christi\", \"Green\"],\r\n\t[\"BF652E\", \"Christine\", \"Orange\"],\r\n\t[\"CAC7B7\", \"Chrome White\", \"Green\"],\r\n\t[\"7D4E38\", \"Cigar\", \"Brown\"],\r\n\t[\"242A2E\", \"Cinder\", \"Grey\"],\r\n\t[\"FBD7CC\", \"Cinderella\", \"Red\"],\r\n\t[\"E34234\", \"Cinnabar\", \"Red\"],\r\n\t[\"5D3B2E\", \"Cioccolato\", \"Brown\"],\r\n\t[\"8E9A21\", \"Citron\", \"Green\"],\r\n\t[\"9FB70A\", \"Citrus\", \"Green\"],\r\n\t[\"D2B3A9\", \"Clam Shell\", \"Orange\"],\r\n\t[\"6E2233\", \"Claret\", \"Red\"],\r\n\t[\"F4C8DB\", \"Classic Rose\", \"Violet\"],\r\n\t[\"897E59\", \"Clay Creek\", \"Yellow\"],\r\n\t[\"DFEFEA\", \"Clear Day\", \"Green\"],\r\n\t[\"463623\", \"Clinker\", \"Brown\"],\r\n\t[\"C2BCB1\", \"Cloud\", \"Yellow\"],\r\n\t[\"353E4F\", \"Cloud Burst\", \"Blue\"],\r\n\t[\"B0A99F\", \"Cloudy\", \"Brown\"],\r\n\t[\"47562F\", \"Clover\", \"Green\"],\r\n\t[\"0047AB\", \"Cobalt\", \"Blue\"],\r\n\t[\"4F3835\", \"Cocoa Bean\", \"Red\"],\r\n\t[\"35281E\", \"Cocoa Brown\", \"Brown\"],\r\n\t[\"E1DABB\", \"Coconut Cream\", \"Green\"],\r\n\t[\"2D3032\", \"Cod Grey\", \"Grey\"],\r\n\t[\"726751\", \"Coffee\", \"Yellow\"],\r\n\t[\"362D26\", \"Coffee Bean\", \"Brown\"],\r\n\t[\"9A463D\", \"Cognac\", \"Red\"],\r\n\t[\"3C2F23\", \"Cola\", \"Brown\"],\r\n\t[\"9D8ABF\", \"Cold Purple\", \"Violet\"],\r\n\t[\"CAB5B2\", \"Cold Turkey\", \"Red\"],\r\n\t[\"9BDDFF\", \"Columbia Blue\", \"Blue\"],\r\n\t[\"636373\", \"Comet\", \"Blue\"],\r\n\t[\"4C785C\", \"Como\", \"Green\"],\r\n\t[\"A0B1AE\", \"Conch\", \"Green\"],\r\n\t[\"827F79\", \"Concord\", \"Grey\"],\r\n\t[\"D2D1CD\", \"Concrete\", \"Grey\"],\r\n\t[\"DDCB46\", \"Confetti\", \"Green\"],\r\n\t[\"654D49\", \"Congo Brown\", \"Brown\"],\r\n\t[\"B1DD52\", \"Conifer\", \"Green\"],\r\n\t[\"C16F68\", \"Contessa\", \"Red\"],\r\n\t[\"DA8A67\", \"Copper\", \"Red\"],\r\n\t[\"77422C\", \"Copper Canyon\", \"Orange\"],\r\n\t[\"996666\", \"Copper Rose\", \"Violet\"],\r\n\t[\"95524C\", \"Copper Rust\", \"Red\"],\r\n\t[\"FF7F50\", \"Coral\", \"Orange\"],\r\n\t[\"F5D0C9\", \"Coral Candy\", \"Red\"],\r\n\t[\"FF4040\", \"Coral Red\", \"Red\"],\r\n\t[\"AB6E67\", \"Coral Tree\", \"Red\"],\r\n\t[\"404D49\", \"Corduroy\", \"Green\"],\r\n\t[\"BBB58D\", \"Coriander\", \"Green\"],\r\n\t[\"5A4C42\", \"Cork\", \"Brown\"],\r\n\t[\"FBEC5D\", \"Corn\", \"Yellow\"],\r\n\t[\"F8F3C4\", \"Corn Field\", \"Green\"],\r\n\t[\"42426F\", \"Corn Flower Blue\", \"Blue\"],\r\n\t[\"8D702A\", \"Corn Harvest\", \"Yellow\"],\r\n\t[\"FFF8DC\", \"Corn Silk\", \"Yellow\"],\r\n\t[\"93CCEA\", \"Cornflower\", \"Blue\"],\r\n\t[\"6495ED\", \"Cornflower Blue\", \"Blue\"],\r\n\t[\"E9BA81\", \"Corvette\", \"Orange\"],\r\n\t[\"794D60\", \"Cosmic\", \"Violet\"],\r\n\t[\"E1F8E7\", \"Cosmic Latte\", \"White\"],\r\n\t[\"FCD5CF\", \"Cosmos\", \"Red\"],\r\n\t[\"625D2A\", \"Costa Del Sol\", \"Green\"],\r\n\t[\"FFB7D5\", \"Cotton Candy\", \"Red\"],\r\n\t[\"BFBAAF\", \"Cotton Seed\", \"Yellow\"],\r\n\t[\"1B4B35\", \"County Green\", \"Green\"],\r\n\t[\"443736\", \"Cowboy\", \"Brown\"],\r\n\t[\"87382F\", \"Crab Apple\", \"Red\"],\r\n\t[\"A65648\", \"Crail\", \"Red\"],\r\n\t[\"DB5079\", \"Cranberry\", \"Red\"],\r\n\t[\"4D3E3C\", \"Crater Brown\", \"Brown\"],\r\n\t[\"FFFDD0\", \"Cream\", \"White\"],\r\n\t[\"FFE39B\", \"Cream Brulee\", \"Yellow\"],\r\n\t[\"EEC051\", \"Cream Can\", \"Yellow\"],\r\n\t[\"393227\", \"Creole\", \"Brown\"],\r\n\t[\"77712B\", \"Crete\", \"Green\"],\r\n\t[\"DC143C\", \"Crimson\", \"Red\"],\r\n\t[\"706950\", \"Crocodile\", \"Yellow\"],\r\n\t[\"763C33\", \"Crown Of Thorns\", \"Red\"],\r\n\t[\"B4E2D5\", \"Cruise\", \"Green\"],\r\n\t[\"165B31\", \"Crusoe\", \"Green\"],\r\n\t[\"F38653\", \"Crusta\", \"Orange\"],\r\n\t[\"784430\", \"Cumin\", \"Orange\"],\r\n\t[\"F5F4C1\", \"Cumulus\", \"Green\"],\r\n\t[\"F5B2C5\", \"Cupid\", \"Red\"],\r\n\t[\"3D85B8\", \"Curious Blue\", \"Blue\"],\r\n\t[\"5C8173\", \"Cutty Sark\", \"Green\"],\r\n\t[\"0F4645\", \"Cyprus\", \"Green\"],\r\n\t[\"EDD2A4\", \"Dairy Cream\", \"Yellow\"],\r\n\t[\"5B3E90\", \"Daisy Bush\", \"Violet\"],\r\n\t[\"664A2D\", \"Dallas\", \"Brown\"],\r\n\t[\"FED85D\", \"Dandelion\", \"Yellow\"],\r\n\t[\"5B89C0\", \"Danube\", \"Blue\"],\r\n\t[\"00008B\", \"Dark Blue\", \"Blue\"],\r\n\t[\"654321\", \"Dark Brown\", \"Brown\"],\r\n\t[\"08457E\", \"Dark Cerulean\", \"Blue\"],\r\n\t[\"986960\", \"Dark Chestnut\", \"Red\"],\r\n\t[\"CD5B45\", \"Dark Coral\", \"Orange\"],\r\n\t[\"008B8B\", \"Dark Cyan\", \"Green\"],\r\n\t[\"B8860B\", \"Dark Goldenrod\", \"Yellow\"],\r\n\t[\"A9A9A9\", \"Dark Gray\", \"Grey\"],\r\n\t[\"013220\", \"Dark Green\", \"Green\"],\r\n\t[\"4A766E\", \"Dark Green Copper\", \"Green\"],\r\n\t[\"BDB76B\", \"Dark Khaki\", \"Yellow\"],\r\n\t[\"8B008B\", \"Dark Magenta\", \"Violet\"],\r\n\t[\"556B2F\", \"Dark Olive Green\", \"Green\"],\r\n\t[\"FF8C00\", \"Dark Orange\", \"Orange\"],\r\n\t[\"9932CC\", \"Dark Orchid\", \"Violet\"],\r\n\t[\"03C03C\", \"Dark Pastel Green\", \"Green\"],\r\n\t[\"E75480\", \"Dark Pink\", \"Red\"],\r\n\t[\"871F78\", \"Dark Purple\", \"Violet\"],\r\n\t[\"8B0000\", \"Dark Red\", \"Red\"],\r\n\t[\"45362B\", \"Dark Rum\", \"Brown\"],\r\n\t[\"E9967A\", \"Dark Salmon\", \"Orange\"],\r\n\t[\"8FBC8F\", \"Dark Sea Green\", \"Green\"],\r\n\t[\"465352\", \"Dark Slate\", \"Green\"],\r\n\t[\"483D8B\", \"Dark Slate Blue\", \"Blue\"],\r\n\t[\"2F4F4F\", \"Dark Slate Grey\", \"Grey\"],\r\n\t[\"177245\", \"Dark Spring Green\", \"Green\"],\r\n\t[\"97694F\", \"Dark Tan\", \"Brown\"],\r\n\t[\"FFA812\", \"Dark Tangerine\", \"Orange\"],\r\n\t[\"00CED1\", \"Dark Turquoise\", \"Blue\"],\r\n\t[\"9400D3\", \"Dark Violet\", \"Violet\"],\r\n\t[\"855E42\", \"Dark Wood\", \"Brown\"],\r\n\t[\"788878\", \"Davy's Grey\", \"Grey\"],\r\n\t[\"9F9D91\", \"Dawn\", \"Green\"],\r\n\t[\"E6D6CD\", \"Dawn Pink\", \"Orange\"],\r\n\t[\"85CA87\", \"De York\", \"Green\"],\r\n\t[\"CCCF82\", \"Deco\", \"Green\"],\r\n\t[\"E36F8A\", \"Deep Blush\", \"Red\"],\r\n\t[\"51412D\", \"Deep Bronze\", \"Brown\"],\r\n\t[\"DA3287\", \"Deep Cerise\", \"Violet\"],\r\n\t[\"193925\", \"Deep Fir\", \"Green\"],\r\n\t[\"343467\", \"Deep Koamaru\", \"Violet\"],\r\n\t[\"9955BB\", \"Deep Lilac\", \"Violet\"],\r\n\t[\"CC00CC\", \"Deep Magenta\", \"Violet\"],\r\n\t[\"FF1493\", \"Deep Pink\", \"Red\"],\r\n\t[\"167E65\", \"Deep Sea\", \"Green\"],\r\n\t[\"00BFFF\", \"Deep Sky Blue\", \"Blue\"],\r\n\t[\"19443C\", \"Deep Teal\", \"Green\"],\r\n\t[\"B5998E\", \"Del Rio\", \"Brown\"],\r\n\t[\"486531\", \"Dell\", \"Green\"],\r\n\t[\"999B95\", \"Delta\", \"Grey\"],\r\n\t[\"8272A4\", \"Deluge\", \"Violet\"],\r\n\t[\"1560BD\", \"Denim\", \"Blue\"],\r\n\t[\"F9E4C6\", \"Derby\", \"Yellow\"],\r\n\t[\"A15F3B\", \"Desert\", \"Orange\"],\r\n\t[\"EDC9AF\", \"Desert Sand\", \"Brown\"],\r\n\t[\"EDE7E0\", \"Desert Storm\", \"Grey\"],\r\n\t[\"E7F2E9\", \"Dew\", \"Green\"],\r\n\t[\"322C2B\", \"Diesel\", \"Grey\"],\r\n\t[\"696969\", \"Dim Gray\", \"Grey\"],\r\n\t[\"607C47\", \"Dingley\", \"Green\"],\r\n\t[\"892D4F\", \"Disco\", \"Red\"],\r\n\t[\"CD8431\", \"Dixie\", \"Yellow\"],\r\n\t[\"1E90FF\", \"Dodger Blue\", \"Blue\"],\r\n\t[\"F5F171\", \"Dolly\", \"Green\"],\r\n\t[\"6A6873\", \"Dolphin\", \"Violet\"],\r\n\t[\"6C5B4C\", \"Domino\", \"Brown\"],\r\n\t[\"5A4F51\", \"Don Juan\", \"Brown\"],\r\n\t[\"816E5C\", \"Donkey Brown\", \"Brown\"],\r\n\t[\"6E5F56\", \"Dorado\", \"Brown\"],\r\n\t[\"E4CF99\", \"Double Colonial White\", \"Yellow\"],\r\n\t[\"E9DCBE\", \"Double Pearl Lusta\", \"Yellow\"],\r\n\t[\"D2C3A3\", \"Double Spanish White\", \"Yellow\"],\r\n\t[\"777672\", \"Dove Grey\", \"Grey\"],\r\n\t[\"6FD2BE\", \"Downy\", \"Green\"],\r\n\t[\"FBEB9B\", \"Drover\", \"Yellow\"],\r\n\t[\"514F4A\", \"Dune\", \"Grey\"],\r\n\t[\"E5CAC0\", \"Dust Storm\", \"Orange\"],\r\n\t[\"AC9B9B\", \"Dusty Grey\", \"Grey\"],\r\n\t[\"F0DFBB\", \"Dutch White\", \"Yellow\"],\r\n\t[\"B0AC94\", \"Eagle\", \"Green\"],\r\n\t[\"B8A722\", \"Earls Green\", \"Green\"],\r\n\t[\"FBF2DB\", \"Early Dawn\", \"Yellow\"],\r\n\t[\"47526E\", \"East Bay\", \"Blue\"],\r\n\t[\"AA8CBC\", \"East Side\", \"Violet\"],\r\n\t[\"00879F\", \"Eastern Blue\", \"Blue\"],\r\n\t[\"E6D8D4\", \"Ebb\", \"Red\"],\r\n\t[\"313337\", \"Ebony\", \"Grey\"],\r\n\t[\"323438\", \"Ebony Clay\", \"Grey\"],\r\n\t[\"A4AFCD\", \"Echo Blue\", \"Blue\"],\r\n\t[\"3F3939\", \"Eclipse\", \"Grey\"],\r\n\t[\"C2B280\", \"Ecru\", \"Brown\"],\r\n\t[\"D6D1C0\", \"Ecru White\", \"Green\"],\r\n\t[\"C96138\", \"Ecstasy\", \"Orange\"],\r\n\t[\"266255\", \"Eden\", \"Green\"],\r\n\t[\"C1D8C5\", \"Edgewater\", \"Green\"],\r\n\t[\"97A49A\", \"Edward\", \"Green\"],\r\n\t[\"F9E4C5\", \"Egg Sour\", \"Yellow\"],\r\n\t[\"990066\", \"Eggplant\", \"Violet\"],\r\n\t[\"1034A6\", \"Egyptian Blue\", \"Blue\"],\r\n\t[\"39392C\", \"El Paso\", \"Green\"],\r\n\t[\"8F4E45\", \"El Salva\", \"Red\"],\r\n\t[\"7DF9FF\", \"Electric Blue\", \"Blue\"],\r\n\t[\"6600FF\", \"Electric Indigo\", \"Violet\"],\r\n\t[\"CCFF00\", \"Electric Lime\", \"Green\"],\r\n\t[\"BF00FF\", \"Electric Purple\", \"Violet\"],\r\n\t[\"243640\", \"Elephant\", \"Blue\"],\r\n\t[\"1B8A6B\", \"Elf Green\", \"Green\"],\r\n\t[\"297B76\", \"Elm\", \"Green\"],\r\n\t[\"50C878\", \"Emerald\", \"Green\"],\r\n\t[\"6E3974\", \"Eminence\", \"Violet\"],\r\n\t[\"50494A\", \"Emperor\", \"Grey\"],\r\n\t[\"7C7173\", \"Empress\", \"Grey\"],\r\n\t[\"29598B\", \"Endeavour\", \"Blue\"],\r\n\t[\"F5D752\", \"Energy Yellow\", \"Yellow\"],\r\n\t[\"274234\", \"English Holly\", \"Green\"],\r\n\t[\"8BA58F\", \"Envy\", \"Green\"],\r\n\t[\"DAB160\", \"Equator\", \"Yellow\"],\r\n\t[\"4E312D\", \"Espresso\", \"Red\"],\r\n\t[\"2D2F28\", \"Eternity\", \"Green\"],\r\n\t[\"329760\", \"Eucalyptus\", \"Green\"],\r\n\t[\"CDA59C\", \"Eunry\", \"Red\"],\r\n\t[\"26604F\", \"Evening Sea\", \"Green\"],\r\n\t[\"264334\", \"Everglade\", \"Green\"],\r\n\t[\"F3E5DC\", \"Fair Pink\", \"Orange\"],\r\n\t[\"6E5A5B\", \"Falcon\", \"Brown\"],\r\n\t[\"C19A6B\", \"Fallow\", \"Brown\"],\r\n\t[\"801818\", \"Falu Red\", \"Red\"],\r\n\t[\"F2E6DD\", \"Fantasy\", \"Orange\"],\r\n\t[\"625665\", \"Fedora\", \"Violet\"],\r\n\t[\"A5D785\", \"Feijoa\", \"Green\"],\r\n\t[\"4D5D53\", \"Feldgrau\", \"Grey\"],\r\n\t[\"D19275\", \"Feldspar\", \"Red\"],\r\n\t[\"63B76C\", \"Fern\", \"Green\"],\r\n\t[\"4F7942\", \"Fern Green\", \"Green\"],\r\n\t[\"876A68\", \"Ferra\", \"Brown\"],\r\n\t[\"EACC4A\", \"Festival\", \"Yellow\"],\r\n\t[\"DBE0D0\", \"Feta\", \"Green\"],\r\n\t[\"B1592F\", \"Fiery Orange\", \"Orange\"],\r\n\t[\"636F22\", \"Fiji Green\", \"Green\"],\r\n\t[\"75785A\", \"Finch\", \"Green\"],\r\n\t[\"61755B\", \"Finlandia\", \"Green\"],\r\n\t[\"694554\", \"Finn\", \"Violet\"],\r\n\t[\"4B5A62\", \"Fiord\", \"Blue\"],\r\n\t[\"8F3F2A\", \"Fire\", \"Orange\"],\r\n\t[\"B22222\", \"Fire Brick\", \"Red\"],\r\n\t[\"E09842\", \"Fire Bush\", \"Yellow\"],\r\n\t[\"CE1620\", \"Fire Engine Red\", \"Red\"],\r\n\t[\"314643\", \"Firefly\", \"Green\"],\r\n\t[\"BE5C48\", \"Flame Pea\", \"Orange\"],\r\n\t[\"86282E\", \"Flame Red\", \"Red\"],\r\n\t[\"EA8645\", \"Flamenco\", \"Orange\"],\r\n\t[\"E1634F\", \"Flamingo\", \"Orange\"],\r\n\t[\"EEDC82\", \"Flax\", \"Yellow\"],\r\n\t[\"716E61\", \"Flint\", \"Green\"],\r\n\t[\"7A2E4D\", \"Flirt\", \"Red\"],\r\n\t[\"FFFAF0\", \"Floral White\", \"White\"],\r\n\t[\"D0EAE8\", \"Foam\", \"Green\"],\r\n\t[\"D5C7E8\", \"Fog\", \"Violet\"],\r\n\t[\"A7A69D\", \"Foggy Grey\", \"Grey\"],\r\n\t[\"228B22\", \"Forest Green\", \"Green\"],\r\n\t[\"FDEFDB\", \"Forget Me Not\", \"Yellow\"],\r\n\t[\"65ADB2\", \"Fountain Blue\", \"Blue\"],\r\n\t[\"FFD7A0\", \"Frangipani\", \"Yellow\"],\r\n\t[\"029D74\", \"Free Speech Aquamarine\", \"Green\"],\r\n\t[\"4156C5\", \"Free Speech Blue\", \"Blue\"],\r\n\t[\"09F911\", \"Free Speech Green\", \"Green\"],\r\n\t[\"E35BD8\", \"Free Speech Magenta\", \"Red\"],\r\n\t[\"C00000\", \"Free Speech Red\", \"Red\"],\r\n\t[\"BFBDC1\", \"French Grey\", \"Grey\"],\r\n\t[\"DEB7D9\", \"French Lilac\", \"Violet\"],\r\n\t[\"A4D2E0\", \"French Pass\", \"Blue\"],\r\n\t[\"F64A8A\", \"French Rose\", \"Red\"],\r\n\t[\"86837A\", \"Friar Grey\", \"Grey\"],\r\n\t[\"B4E1BB\", \"Fringy Flower\", \"Green\"],\r\n\t[\"E56D75\", \"Froly\", \"Red\"],\r\n\t[\"E1E4C5\", \"Frost\", \"Green\"],\r\n\t[\"E2F2E4\", \"Frosted Mint\", \"Green\"],\r\n\t[\"DBE5D2\", \"Frostee\", \"Green\"],\r\n\t[\"4BA351\", \"Fruit Salad\", \"Green\"],\r\n\t[\"C154C1\", \"Fuchsia\", \"Violet\"],\r\n\t[\"FF77FF\", \"Fuchsia Pink\", \"Red\"],\r\n\t[\"C2D62E\", \"Fuego\", \"Green\"],\r\n\t[\"D19033\", \"Fuel Yellow\", \"Yellow\"],\r\n\t[\"335083\", \"Fun Blue\", \"Blue\"],\r\n\t[\"15633D\", \"Fun Green\", \"Green\"],\r\n\t[\"3C3B3C\", \"Fuscous Grey\", \"Grey\"],\r\n\t[\"C45655\", \"Fuzzy Wuzzy Brown\", \"Brown\"],\r\n\t[\"2C4641\", \"Gable Green\", \"Green\"],\r\n\t[\"DCDCDC\", \"Gainsboro\", \"White\"],\r\n\t[\"DCD7D1\", \"Gallery\", \"Grey\"],\r\n\t[\"D8A723\", \"Galliano\", \"Yellow\"],\r\n\t[\"E49B0F\", \"Gamboge\", \"Yellow\"],\r\n\t[\"C5832E\", \"Geebung\", \"Yellow\"],\r\n\t[\"31796D\", \"Genoa\", \"Green\"],\r\n\t[\"E77B75\", \"Geraldine\", \"Red\"],\r\n\t[\"CBD0CF\", \"Geyser\", \"Grey\"],\r\n\t[\"C0BFC7\", \"Ghost\", \"Blue\"],\r\n\t[\"F8F8FF\", \"Ghost White\", \"White\"],\r\n\t[\"564786\", \"Gigas\", \"Violet\"],\r\n\t[\"B9AD61\", \"Gimblet\", \"Green\"],\r\n\t[\"D9DFCD\", \"Gin\", \"Green\"],\r\n\t[\"F8EACA\", \"Gin Fizz\", \"Yellow\"],\r\n\t[\"EBD4AE\", \"Givry\", \"Yellow\"],\r\n\t[\"78B1BF\", \"Glacier\", \"Blue\"],\r\n\t[\"5F8151\", \"Glade Green\", \"Green\"],\r\n\t[\"786E4C\", \"Go Ben\", \"Yellow\"],\r\n\t[\"34533D\", \"Goblin\", \"Green\"],\r\n\t[\"FFD700\", \"Gold\", \"Yellow\"],\r\n\t[\"D56C30\", \"Gold Drop\", \"Orange\"],\r\n\t[\"E2B227\", \"Gold Tips\", \"Yellow\"],\r\n\t[\"CA8136\", \"Golden Bell\", \"Orange\"],\r\n\t[\"996515\", \"Golden Brown\", \"Brown\"],\r\n\t[\"F1CC2B\", \"Golden Dream\", \"Yellow\"],\r\n\t[\"EBDE31\", \"Golden Fizz\", \"Green\"],\r\n\t[\"F9D77E\", \"Golden Glow\", \"Yellow\"],\r\n\t[\"FCC200\", \"Golden Poppy\", \"Yellow\"],\r\n\t[\"EACE6A\", \"Golden Sand\", \"Yellow\"],\r\n\t[\"FFC152\", \"Golden Tainoi\", \"Yellow\"],\r\n\t[\"FFDF00\", \"Golden Yellow\", \"Yellow\"],\r\n\t[\"DBDB70\", \"Goldenrod\", \"Yellow\"],\r\n\t[\"373332\", \"Gondola\", \"Grey\"],\r\n\t[\"29332B\", \"Gordons Green\", \"Green\"],\r\n\t[\"FDE336\", \"Gorse\", \"Green\"],\r\n\t[\"399F86\", \"Gossamer\", \"Green\"],\r\n\t[\"9FD385\", \"Gossip\", \"Green\"],\r\n\t[\"698890\", \"Gothic\", \"Blue\"],\r\n\t[\"51559B\", \"Governor Bay\", \"Blue\"],\r\n\t[\"CAB8A2\", \"Grain Brown\", \"Yellow\"],\r\n\t[\"FFCD73\", \"Grandis\", \"Yellow\"],\r\n\t[\"8B8265\", \"Granite Green\", \"Yellow\"],\r\n\t[\"C5E7CD\", \"Granny Apple\", \"Green\"],\r\n\t[\"7B948C\", \"Granny Smith\", \"Green\"],\r\n\t[\"9DE093\", \"Granny Smith Apple\", \"Green\"],\r\n\t[\"413D4B\", \"Grape\", \"Violet\"],\r\n\t[\"383428\", \"Graphite\", \"Yellow\"],\r\n\t[\"4A4B46\", \"Gravel\", \"Grey\"],\r\n\t[\"008000\", \"Green\", \"Green\"],\r\n\t[\"3E6334\", \"Green House\", \"Green\"],\r\n\t[\"393D2A\", \"Green Kelp\", \"Green\"],\r\n\t[\"526B2D\", \"Green Leaf\", \"Green\"],\r\n\t[\"BFC298\", \"Green Mist\", \"Green\"],\r\n\t[\"266242\", \"Green Pea\", \"Green\"],\r\n\t[\"9CA664\", \"Green Smoke\", \"Green\"],\r\n\t[\"A9AF99\", \"Green Spring\", \"Green\"],\r\n\t[\"23414E\", \"Green Vogue\", \"Blue\"],\r\n\t[\"2C2D24\", \"Green Waterloo\", \"Green\"],\r\n\t[\"DEDDCB\", \"Green White\", \"Green\"],\r\n\t[\"ADFF2F\", \"Green Yellow\", \"Green\"],\r\n\t[\"C14D36\", \"Grenadier\", \"Orange\"],\r\n\t[\"808080\", \"Grey\", \"Grey\"],\r\n\t[\"9FA3A7\", \"Grey Chateau\", \"Grey\"],\r\n\t[\"BDBAAE\", \"Grey Nickel\", \"Green\"],\r\n\t[\"D1D3CC\", \"Grey Nurse\", \"Grey\"],\r\n\t[\"A19A7F\", \"Grey Olive\", \"Yellow\"],\r\n\t[\"9391A0\", \"Grey Suit\", \"Blue\"],\r\n\t[\"465945\", \"Grey-Asparagus\", \"Green\"],\r\n\t[\"952E31\", \"Guardsman Red\", \"Red\"],\r\n\t[\"343F5C\", \"Gulf Blue\", \"Blue\"],\r\n\t[\"74B2A8\", \"Gulf Stream\", \"Green\"],\r\n\t[\"A4ADB0\", \"Gull Grey\", \"Grey\"],\r\n\t[\"ACC9B2\", \"Gum Leaf\", \"Green\"],\r\n\t[\"718F8A\", \"Gumbo\", \"Green\"],\r\n\t[\"484753\", \"Gun Powder\", \"Violet\"],\r\n\t[\"2C3539\", \"Gunmetal\", \"Blue\"],\r\n\t[\"7A7C76\", \"Gunsmoke\", \"Grey\"],\r\n\t[\"989171\", \"Gurkha\", \"Green\"],\r\n\t[\"9E8022\", \"Hacienda\", \"Yellow\"],\r\n\t[\"633528\", \"Hairy Heath\", \"Brown\"],\r\n\t[\"2C2A35\", \"Haiti\", \"Violet\"],\r\n\t[\"EDE7C8\", \"Half And Half\", \"Green\"],\r\n\t[\"558F93\", \"Half Baked\", \"Blue\"],\r\n\t[\"F2E5BF\", \"Half Colonial White\", \"Yellow\"],\r\n\t[\"FBF0D6\", \"Half Dutch White\", \"Yellow\"],\r\n\t[\"F1EAD7\", \"Half Pearl Lusta\", \"Yellow\"],\r\n\t[\"E6DBC7\", \"Half Spanish White\", \"Yellow\"],\r\n\t[\"E8D4A2\", \"Hampton\", \"Yellow\"],\r\n\t[\"5218FA\", \"Han Purple\", \"Violet\"],\r\n\t[\"3FFF00\", \"Harlequin\", \"Green\"],\r\n\t[\"C93413\", \"Harley Davidson Orange\", \"Orange\"],\r\n\t[\"CBCEC0\", \"Harp\", \"Green\"],\r\n\t[\"EAB76A\", \"Harvest Gold\", \"Yellow\"],\r\n\t[\"3B2B2C\", \"Havana\", \"Brown\"],\r\n\t[\"5784C1\", \"Havelock Blue\", \"Blue\"],\r\n\t[\"99522B\", \"Hawaiian Tan\", \"Orange\"],\r\n\t[\"D2DAED\", \"Hawkes Blue\", \"Blue\"],\r\n\t[\"4F2A2C\", \"Heath\", \"Red\"],\r\n\t[\"AEBBC1\", \"Heather\", \"Blue\"],\r\n\t[\"948C7E\", \"Heathered Grey\", \"Brown\"],\r\n\t[\"46473E\", \"Heavy Metal\", \"Grey\"],\r\n\t[\"DF73FF\", \"Heliotrope\", \"Violet\"],\r\n\t[\"69684B\", \"Hemlock\", \"Yellow\"],\r\n\t[\"987D73\", \"Hemp\", \"Brown\"],\r\n\t[\"928C3C\", \"Highball\", \"Green\"],\r\n\t[\"7A9461\", \"Highland\", \"Green\"],\r\n\t[\"A7A07E\", \"Hillary\", \"Green\"],\r\n\t[\"736330\", \"Himalaya\", \"Yellow\"],\r\n\t[\"DFF1D6\", \"Hint Of Green\", \"Green\"],\r\n\t[\"F5EFEB\", \"Hint Of Red\", \"Grey\"],\r\n\t[\"F6F5D7\", \"Hint Of Yellow\", \"Green\"],\r\n\t[\"49889A\", \"Hippie Blue\", \"Blue\"],\r\n\t[\"608A5A\", \"Hippie Green\", \"Green\"],\r\n\t[\"AB495C\", \"Hippie Pink\", \"Red\"],\r\n\t[\"A1A9A8\", \"Hit Grey\", \"Grey\"],\r\n\t[\"FDA470\", \"Hit Pink\", \"Orange\"],\r\n\t[\"BB8E34\", \"Hokey Pokey\", \"Yellow\"],\r\n\t[\"647D86\", \"Hoki\", \"Blue\"],\r\n\t[\"25342B\", \"Holly\", \"Green\"],\r\n\t[\"F400A1\", \"Hollywood Cerise\", \"Red\"],\r\n\t[\"5C3C6D\", \"Honey Flower\", \"Violet\"],\r\n\t[\"F0FFF0\", \"Honeydew\", \"White\"],\r\n\t[\"E8ED69\", \"Honeysuckle\", \"Green\"],\r\n\t[\"CD6D93\", \"Hopbush\", \"Violet\"],\r\n\t[\"648894\", \"Horizon\", \"Blue\"],\r\n\t[\"6D562C\", \"Horses Neck\", \"Yellow\"],\r\n\t[\"815B28\", \"Hot Curry\", \"Yellow\"],\r\n\t[\"FF00CC\", \"Hot Magenta\", \"Red\"],\r\n\t[\"FF69B4\", \"Hot Pink\", \"Red\"],\r\n\t[\"4E2E53\", \"Hot Purple\", \"Violet\"],\r\n\t[\"A7752C\", \"Hot Toddy\", \"Yellow\"],\r\n\t[\"CEEFE4\", \"Humming Bird\", \"Green\"],\r\n\t[\"355E3B\", \"Hunter Green\", \"Green\"],\r\n\t[\"8B7E77\", \"Hurricane\", \"Brown\"],\r\n\t[\"B2994B\", \"Husk\", \"Yellow\"],\r\n\t[\"AFE3D6\", \"Ice Cold\", \"Green\"],\r\n\t[\"CAE1D9\", \"Iceberg\", \"Green\"],\r\n\t[\"EF95AE\", \"Illusion\", \"Red\"],\r\n\t[\"B0E313\", \"Inch Worm\", \"Green\"],\r\n\t[\"CD5C5C\", \"Indian Red\", \"Red\"],\r\n\t[\"4F301F\", \"Indian Tan\", \"Brown\"],\r\n\t[\"4B0082\", \"Indigo\", \"Violet\"],\r\n\t[\"9C5B34\", \"Indochine\", \"Orange\"],\r\n\t[\"002FA7\", \"International Klein Blue\", \"Blue\"],\r\n\t[\"FF4F00\", \"International Orange\", \"Orange\"],\r\n\t[\"03B4C8\", \"Iris Blue\", \"Blue\"],\r\n\t[\"62422B\", \"Irish Coffee\", \"Brown\"],\r\n\t[\"CBCDCD\", \"Iron\", \"Grey\"],\r\n\t[\"706E66\", \"Ironside Grey\", \"Grey\"],\r\n\t[\"865040\", \"Ironstone\", \"Brown\"],\r\n\t[\"009900\", \"Islamic Green\", \"Green\"],\r\n\t[\"F8EDDB\", \"Island Spice\", \"Yellow\"],\r\n\t[\"FFFFF0\", \"Ivory\", \"White\"],\r\n\t[\"3D325D\", \"Jacarta\", \"Violet\"],\r\n\t[\"413628\", \"Jacko Bean\", \"Brown\"],\r\n\t[\"3D3F7D\", \"Jacksons Purple\", \"Violet\"],\r\n\t[\"00A86B\", \"Jade\", \"Green\"],\r\n\t[\"E27945\", \"Jaffa\", \"Orange\"],\r\n\t[\"CAE7E2\", \"Jagged Ice\", \"Green\"],\r\n\t[\"3F2E4C\", \"Jagger\", \"Violet\"],\r\n\t[\"29292F\", \"Jaguar\", \"Blue\"],\r\n\t[\"674834\", \"Jambalaya\", \"Brown\"],\r\n\t[\"2F7532\", \"Japanese Laurel\", \"Green\"],\r\n\t[\"CE7259\", \"Japonica\", \"Orange\"],\r\n\t[\"259797\", \"Java\", \"Green\"],\r\n\t[\"5F2C2F\", \"Jazz\", \"Red\"],\r\n\t[\"A50B5E\", \"Jazzberry Jam\", \"Red\"],\r\n\t[\"44798E\", \"Jelly Bean\", \"Blue\"],\r\n\t[\"BBD0C9\", \"Jet Stream\", \"Green\"],\r\n\t[\"136843\", \"Jewel\", \"Green\"],\r\n\t[\"463D3E\", \"Jon\", \"Grey\"],\r\n\t[\"EEF293\", \"Jonquil\", \"Green\"],\r\n\t[\"7AAAE0\", \"Jordy Blue\", \"Blue\"],\r\n\t[\"5D5346\", \"Judge Grey\", \"Brown\"],\r\n\t[\"878785\", \"Jumbo\", \"Grey\"],\r\n\t[\"29AB87\", \"Jungle Green\", \"Green\"],\r\n\t[\"B0C4C4\", \"Jungle Mist\", \"Green\"],\r\n\t[\"74918E\", \"Juniper\", \"Green\"],\r\n\t[\"DCBFAC\", \"Just Right\", \"Orange\"],\r\n\t[\"6C5E53\", \"Kabul\", \"Brown\"],\r\n\t[\"245336\", \"Kaitoke Green\", \"Green\"],\r\n\t[\"C5C3B0\", \"Kangaroo\", \"Green\"],\r\n\t[\"2D2D24\", \"Karaka\", \"Green\"],\r\n\t[\"FEDCC1\", \"Karry\", \"Orange\"],\r\n\t[\"576D8E\", \"Kashmir Blue\", \"Blue\"],\r\n\t[\"4CBB17\", \"Kelly Green\", \"Green\"],\r\n\t[\"4D503C\", \"Kelp\", \"Green\"],\r\n\t[\"6C322E\", \"Kenyan Copper\", \"Red\"],\r\n\t[\"5FB69C\", \"Keppel\", \"Green\"],\r\n\t[\"F0E68C\", \"Khaki\", \"Yellow\"],\r\n\t[\"BFC0AB\", \"Kidnapper\", \"Green\"],\r\n\t[\"3A3532\", \"Kilamanjaro\", \"Grey\"],\r\n\t[\"49764F\", \"Killarney\", \"Green\"],\r\n\t[\"695D87\", \"Kimberly\", \"Violet\"],\r\n\t[\"583580\", \"Kingfisher Daisy\", \"Violet\"],\r\n\t[\"E093AB\", \"Kobi\", \"Red\"],\r\n\t[\"7B785A\", \"Kokoda\", \"Green\"],\r\n\t[\"804E2C\", \"Korma\", \"Orange\"],\r\n\t[\"FEB552\", \"Koromiko\", \"Yellow\"],\r\n\t[\"F9D054\", \"Kournikova\", \"Yellow\"],\r\n\t[\"428929\", \"La Palma\", \"Green\"],\r\n\t[\"BAC00E\", \"La Rioja\", \"Green\"],\r\n\t[\"C6DA36\", \"Las Palmas\", \"Green\"],\r\n\t[\"C6A95E\", \"Laser\", \"Yellow\"],\r\n\t[\"FFFF66\", \"Laser Lemon\", \"Yellow\"],\r\n\t[\"6E8D71\", \"Laurel\", \"Green\"],\r\n\t[\"E6E6FA\", \"Lavender\", \"Violet\"],\r\n\t[\"CCCCFF\", \"Lavender Blue\", \"Blue\"],\r\n\t[\"FFF0F5\", \"Lavender Blush\", \"Violet\"],\r\n\t[\"BDBBD7\", \"Lavender Grey\", \"Grey\"],\r\n\t[\"FBAED2\", \"Lavender Pink\", \"Red\"],\r\n\t[\"FBA0E3\", \"Lavender Rose\", \"Red\"],\r\n\t[\"7CFC00\", \"Lawn Green\", \"Green\"],\r\n\t[\"906A54\", \"Leather\", \"Brown\"],\r\n\t[\"FDE910\", \"Lemon\", \"Yellow\"],\r\n\t[\"FFFACD\", \"Lemon Chiffon\", \"Yellow\"],\r\n\t[\"968428\", \"Lemon Ginger\", \"Yellow\"],\r\n\t[\"999A86\", \"Lemon Grass\", \"Green\"],\r\n\t[\"2E3749\", \"Licorice\", \"Blue\"],\r\n\t[\"ADD8E6\", \"Light Blue\", \"Blue\"],\r\n\t[\"F08080\", \"Light Coral\", \"Orange\"],\r\n\t[\"E0FFFF\", \"Light Cyan\", \"Blue\"],\r\n\t[\"EEDD82\", \"Light Goldenrod\", \"Yellow\"],\r\n\t[\"FAFAD2\", \"Light Goldenrod Yellow\", \"Yellow\"],\r\n\t[\"90EE90\", \"Light Green\", \"Green\"],\r\n\t[\"D3D3D3\", \"Light Grey\", \"Grey\"],\r\n\t[\"FFB6C1\", \"Light Pink\", \"Red\"],\r\n\t[\"FFA07A\", \"Light Salmon\", \"Orange\"],\r\n\t[\"20B2AA\", \"Light Sea Green\", \"Green\"],\r\n\t[\"87CEFA\", \"Light Sky Blue\", \"Blue\"],\r\n\t[\"8470FF\", \"Light Slate Blue\", \"Blue\"],\r\n\t[\"778899\", \"Light Slate Grey\", \"Grey\"],\r\n\t[\"B0C4DE\", \"Light Steel Blue\", \"Blue\"],\r\n\t[\"856363\", \"Light Wood\", \"Brown\"],\r\n\t[\"FFFFE0\", \"Light Yellow\", \"Yellow\"],\r\n\t[\"F7A233\", \"Lightning Yellow\", \"Yellow\"],\r\n\t[\"C8A2C8\", \"Lilac\", \"Violet\"],\r\n\t[\"9470C4\", \"Lilac Bush\", \"Violet\"],\r\n\t[\"C19FB3\", \"Lily\", \"Violet\"],\r\n\t[\"E9EEEB\", \"Lily White\", \"Grey\"],\r\n\t[\"7AAC21\", \"Lima\", \"Green\"],\r\n\t[\"00FF00\", \"Lime\", \"Green\"],\r\n\t[\"32CD32\", \"Lime Green\", \"Green\"],\r\n\t[\"5F9727\", \"Limeade\", \"Green\"],\r\n\t[\"89AC27\", \"Limerick\", \"Green\"],\r\n\t[\"FAF0E6\", \"Linen\", \"White\"],\r\n\t[\"C7CDD8\", \"Link Water\", \"Blue\"],\r\n\t[\"962C54\", \"Lipstick\", \"Red\"],\r\n\t[\"534B4F\", \"Liver\", \"Brown\"],\r\n\t[\"312A29\", \"Livid Brown\", \"Brown\"],\r\n\t[\"DBD9C2\", \"Loafer\", \"Green\"],\r\n\t[\"B3BBB7\", \"Loblolly\", \"Green\"],\r\n\t[\"489084\", \"Lochinvar\", \"Green\"],\r\n\t[\"316EA0\", \"Lochmara\", \"Blue\"],\r\n\t[\"A2A580\", \"Locust\", \"Green\"],\r\n\t[\"393E2E\", \"Log Cabin\", \"Green\"],\r\n\t[\"9D9CB4\", \"Logan\", \"Blue\"],\r\n\t[\"B9ACBB\", \"Lola\", \"Violet\"],\r\n\t[\"AE94AB\", \"London Hue\", \"Violet\"],\r\n\t[\"522426\", \"Lonestar\", \"Red\"],\r\n\t[\"8B504B\", \"Lotus\", \"Brown\"],\r\n\t[\"4C3347\", \"Loulou\", \"Violet\"],\r\n\t[\"AB9A1C\", \"Lucky\", \"Green\"],\r\n\t[\"292D4F\", \"Lucky Point\", \"Blue\"],\r\n\t[\"4E5541\", \"Lunar Green\", \"Green\"],\r\n\t[\"782E2C\", \"Lusty\", \"Red\"],\r\n\t[\"AB8D3F\", \"Luxor Gold\", \"Yellow\"],\r\n\t[\"697D89\", \"Lynch\", \"Blue\"],\r\n\t[\"CBE8E8\", \"Mabel\", \"Blue\"],\r\n\t[\"FFB97B\", \"Macaroni And Cheese\", \"Orange\"],\r\n\t[\"B7E3A8\", \"Madang\", \"Green\"],\r\n\t[\"2D3C54\", \"Madison\", \"Blue\"],\r\n\t[\"473E23\", \"Madras\", \"Brown\"],\r\n\t[\"FF00FF\", \"Magenta\", \"Violet\"],\r\n\t[\"AAF0D1\", \"Magic Mint\", \"Green\"],\r\n\t[\"F8F4FF\", \"Magnolia\", \"White\"],\r\n\t[\"CA3435\", \"Mahogany\", \"Brown\"],\r\n\t[\"A56531\", \"Mai Tai\", \"Orange\"],\r\n\t[\"2A2922\", \"Maire\", \"Yellow\"],\r\n\t[\"E3B982\", \"Maize\", \"Yellow\"],\r\n\t[\"695F50\", \"Makara\", \"Brown\"],\r\n\t[\"505555\", \"Mako\", \"Grey\"],\r\n\t[\"0BDA51\", \"Malachite\", \"Green\"],\r\n\t[\"97976F\", \"Malachite Green\", \"Green\"],\r\n\t[\"66B7E1\", \"Malibu\", \"Blue\"],\r\n\t[\"3A4531\", \"Mallard\", \"Green\"],\r\n\t[\"A59784\", \"Malta\", \"Brown\"],\r\n\t[\"766D7C\", \"Mamba\", \"Violet\"],\r\n\t[\"8D90A1\", \"Manatee\", \"Blue\"],\r\n\t[\"B57B2E\", \"Mandalay\", \"Yellow\"],\r\n\t[\"8E2323\", \"Mandarian Orange\", \"Orange\"],\r\n\t[\"CD525B\", \"Mandy\", \"Red\"],\r\n\t[\"F5B799\", \"Mandys Pink\", \"Orange\"],\r\n\t[\"E77200\", \"Mango Tango\", \"Orange\"],\r\n\t[\"E2AF80\", \"Manhattan\", \"Orange\"],\r\n\t[\"7FC15C\", \"Mantis\", \"Green\"],\r\n\t[\"96A793\", \"Mantle\", \"Green\"],\r\n\t[\"E4DB55\", \"Manz\", \"Green\"],\r\n\t[\"352235\", \"Mardi Gras\", \"Violet\"],\r\n\t[\"B88A3D\", \"Marigold\", \"Yellow\"],\r\n\t[\"42639F\", \"Mariner\", \"Blue\"],\r\n\t[\"800000\", \"Maroon\", \"Brown\"],\r\n\t[\"2B2E26\", \"Marshland\", \"Green\"],\r\n\t[\"B7A8A3\", \"Martini\", \"Brown\"],\r\n\t[\"3C3748\", \"Martinique\", \"Violet\"],\r\n\t[\"EBC881\", \"Marzipan\", \"Yellow\"],\r\n\t[\"57534B\", \"Masala\", \"Brown\"],\r\n\t[\"365C7D\", \"Matisse\", \"Blue\"],\r\n\t[\"8E4D45\", \"Matrix\", \"Red\"],\r\n\t[\"524B4B\", \"Matterhorn\", \"Grey\"],\r\n\t[\"E0B0FF\", \"Mauve\", \"Violet\"],\r\n\t[\"915F6D\", \"Mauve Taupe\", \"Red\"],\r\n\t[\"F091A9\", \"Mauvelous\", \"Red\"],\r\n\t[\"C8B1C0\", \"Maverick\", \"Violet\"],\r\n\t[\"73C2FB\", \"Maya Blue\", \"Blue\"],\r\n\t[\"8C6338\", \"McKenzie\", \"Orange\"],\r\n\t[\"66CDAA\", \"Medium Aquamarine\", \"Blue\"],\r\n\t[\"0000CD\", \"Medium Blue\", \"Blue\"],\r\n\t[\"AF4035\", \"Medium Carmine\", \"Red\"],\r\n\t[\"EAEAAE\", \"Medium Goldenrod\", \"Yellow\"],\r\n\t[\"BA55D3\", \"Medium Orchid\", \"Violet\"],\r\n\t[\"9370DB\", \"Medium Purple\", \"Violet\"],\r\n\t[\"3CB371\", \"Medium Sea Green\", \"Green\"],\r\n\t[\"7B68EE\", \"Medium Slate Blue\", \"Blue\"],\r\n\t[\"00FA9A\", \"Medium Spring Green\", \"Green\"],\r\n\t[\"48D1CC\", \"Medium Turquoise\", \"Blue\"],\r\n\t[\"C71585\", \"Medium Violet Red\", \"Red\"],\r\n\t[\"A68064\", \"Medium Wood\", \"Brown\"],\r\n\t[\"E0B7C2\", \"Melanie\", \"Red\"],\r\n\t[\"342931\", \"Melanzane\", \"Violet\"],\r\n\t[\"FEBAAD\", \"Melon\", \"Red\"],\r\n\t[\"C3B9DD\", \"Melrose\", \"Violet\"],\r\n\t[\"D5D2D1\", \"Mercury\", \"Grey\"],\r\n\t[\"E1DBD0\", \"Merino\", \"Yellow\"],\r\n\t[\"4F4E48\", \"Merlin\", \"Grey\"],\r\n\t[\"73343A\", \"Merlot\", \"Red\"],\r\n\t[\"554A3C\", \"Metallic Bronze\", \"Red\"],\r\n\t[\"6E3D34\", \"Metallic Copper\", \"Red\"],\r\n\t[\"D4AF37\", \"Metallic Gold\", \"Yellow\"],\r\n\t[\"BB7431\", \"Meteor\", \"Orange\"],\r\n\t[\"4A3B6A\", \"Meteorite\", \"Violet\"],\r\n\t[\"9B3D3D\", \"Mexican Red\", \"Red\"],\r\n\t[\"666A6D\", \"Mid Grey\", \"Grey\"],\r\n\t[\"21303E\", \"Midnight\", \"Blue\"],\r\n\t[\"191970\", \"Midnight Blue\", \"Blue\"],\r\n\t[\"21263A\", \"Midnight Express\", \"Blue\"],\r\n\t[\"242E28\", \"Midnight Moss\", \"Green\"],\r\n\t[\"3F3623\", \"Mikado\", \"Brown\"],\r\n\t[\"F6F493\", \"Milan\", \"Green\"],\r\n\t[\"9E3332\", \"Milano Red\", \"Red\"],\r\n\t[\"F3E5C0\", \"Milk Punch\", \"Yellow\"],\r\n\t[\"DCD9CD\", \"Milk White\", \"Grey\"],\r\n\t[\"595648\", \"Millbrook\", \"Brown\"],\r\n\t[\"F5F5CC\", \"Mimosa\", \"Green\"],\r\n\t[\"DAEA6F\", \"Mindaro\", \"Green\"],\r\n\t[\"373E41\", \"Mine Shaft\", \"Blue\"],\r\n\t[\"506355\", \"Mineral Green\", \"Green\"],\r\n\t[\"407577\", \"Ming\", \"Green\"],\r\n\t[\"3E3267\", \"Minsk\", \"Violet\"],\r\n\t[\"F5FFFA\", \"Mint Cream\", \"White\"],\r\n\t[\"98FF98\", \"Mint Green\", \"Green\"],\r\n\t[\"E0D8A7\", \"Mint Julep\", \"Green\"],\r\n\t[\"C6EADD\", \"Mint Tulip\", \"Green\"],\r\n\t[\"373F43\", \"Mirage\", \"Blue\"],\r\n\t[\"A5A9B2\", \"Mischka\", \"Blue\"],\r\n\t[\"BAB9A9\", \"Mist Grey\", \"Grey\"],\r\n\t[\"FFE4E1\", \"Misty Rose\", \"Violet\"],\r\n\t[\"605A67\", \"Mobster\", \"Violet\"],\r\n\t[\"582F2B\", \"Moccaccino\", \"Red\"],\r\n\t[\"FFE4B5\", \"Moccasin\", \"Yellow\"],\r\n\t[\"6F372D\", \"Mocha\", \"Red\"],\r\n\t[\"97463C\", \"Mojo\", \"Red\"],\r\n\t[\"FF9889\", \"Mona Lisa\", \"Red\"],\r\n\t[\"6B252C\", \"Monarch\", \"Red\"],\r\n\t[\"554D42\", \"Mondo\", \"Brown\"],\r\n\t[\"A58B6F\", \"Mongoose\", \"Brown\"],\r\n\t[\"7A7679\", \"Monsoon\", \"Grey\"],\r\n\t[\"393B3C\", \"Montana\", \"Grey\"],\r\n\t[\"7AC5B4\", \"Monte Carlo\", \"Green\"],\r\n\t[\"8378C7\", \"Moody Blue\", \"Violet\"],\r\n\t[\"F5F3CE\", \"Moon Glow\", \"Green\"],\r\n\t[\"CECDB8\", \"Moon Mist\", \"Green\"],\r\n\t[\"C0B2D7\", \"Moon Raker\", \"Violet\"],\r\n\t[\"F0C420\", \"Moon Yellow\", \"Yellow\"],\r\n\t[\"9ED1D3\", \"Morning Glory\", \"Blue\"],\r\n\t[\"442D21\", \"Morocco Brown\", \"Brown\"],\r\n\t[\"565051\", \"Mortar\", \"Grey\"],\r\n\t[\"005F5B\", \"Mosque\", \"Green\"],\r\n\t[\"ADDFAD\", \"Moss Green\", \"Green\"],\r\n\t[\"1AB385\", \"Mountain Meadow\", \"Green\"],\r\n\t[\"A09F9C\", \"Mountain Mist\", \"Grey\"],\r\n\t[\"997A8D\", \"Mountbatten Pink\", \"Violet\"],\r\n\t[\"A9844F\", \"Muddy Waters\", \"Yellow\"],\r\n\t[\"9E7E53\", \"Muesli\", \"Brown\"],\r\n\t[\"C54B8C\", \"Mulberry\", \"Violet\"],\r\n\t[\"884F40\", \"Mule Fawn\", \"Brown\"],\r\n\t[\"524D5B\", \"Mulled Wine\", \"Violet\"],\r\n\t[\"FFDB58\", \"Mustard\", \"Yellow\"],\r\n\t[\"D68B80\", \"My Pink\", \"Red\"],\r\n\t[\"FDAE45\", \"My Sin\", \"Yellow\"],\r\n\t[\"21421E\", \"Myrtle\", \"Green\"],\r\n\t[\"D8DDDA\", \"Mystic\", \"Grey\"],\r\n\t[\"4E5D4E\", \"Nandor\", \"Green\"],\r\n\t[\"A39A87\", \"Napa\", \"Yellow\"],\r\n\t[\"E9E6DC\", \"Narvik\", \"Green\"],\r\n\t[\"FFDEAD\", \"Navajo White\", \"Brown\"],\r\n\t[\"000080\", \"Navy\", \"Blue\"],\r\n\t[\"0066CC\", \"Navy Blue\", \"Blue\"],\r\n\t[\"B8C6BE\", \"Nebula\", \"Green\"],\r\n\t[\"EEC7A2\", \"Negroni\", \"Orange\"],\r\n\t[\"4D4DFF\", \"Neon Blue\", \"Blue\"],\r\n\t[\"FF9933\", \"Neon Carrot\", \"Orange\"],\r\n\t[\"FF6EC7\", \"Neon Pink\", \"Violet\"],\r\n\t[\"93AAB9\", \"Nepal\", \"Blue\"],\r\n\t[\"77A8AB\", \"Neptune\", \"Green\"],\r\n\t[\"252525\", \"Nero\", \"Grey\"],\r\n\t[\"AAA583\", \"Neutral Green\", \"Green\"],\r\n\t[\"666F6F\", \"Nevada\", \"Grey\"],\r\n\t[\"6D3B24\", \"New Amber\", \"Orange\"],\r\n\t[\"00009C\", \"New Midnight Blue\", \"Blue\"],\r\n\t[\"E4C385\", \"New Orleans\", \"Yellow\"],\r\n\t[\"EBC79E\", \"New Tan\", \"Brown\"],\r\n\t[\"DD8374\", \"New York Pink\", \"Red\"],\r\n\t[\"29A98B\", \"Niagara\", \"Green\"],\r\n\t[\"332E2E\", \"Night Rider\", \"Grey\"],\r\n\t[\"A23D54\", \"Night Shadz\", \"Red\"],\r\n\t[\"253F4E\", \"Nile Blue\", \"Blue\"],\r\n\t[\"A99D9D\", \"Nobel\", \"Grey\"],\r\n\t[\"A19986\", \"Nomad\", \"Yellow\"],\r\n\t[\"1D393C\", \"Nordic\", \"Blue\"],\r\n\t[\"A4B88F\", \"Norway\", \"Green\"],\r\n\t[\"BC9229\", \"Nugget\", \"Yellow\"],\r\n\t[\"7E4A3B\", \"Nutmeg\", \"Brown\"],\r\n\t[\"FCEDC5\", \"Oasis\", \"Yellow\"],\r\n\t[\"008F70\", \"Observatory\", \"Green\"],\r\n\t[\"4CA973\", \"Ocean Green\", \"Green\"],\r\n\t[\"CC7722\", \"Ochre\", \"Brown\"],\r\n\t[\"DFF0E2\", \"Off Green\", \"Green\"],\r\n\t[\"FAF3DC\", \"Off Yellow\", \"Yellow\"],\r\n\t[\"313330\", \"Oil\", \"Grey\"],\r\n\t[\"8A3335\", \"Old Brick\", \"Red\"],\r\n\t[\"73503B\", \"Old Copper\", \"Red\"],\r\n\t[\"CFB53B\", \"Old Gold\", \"Yellow\"],\r\n\t[\"FDF5E6\", \"Old Lace\", \"White\"],\r\n\t[\"796878\", \"Old Lavender\", \"Violet\"],\r\n\t[\"C02E4C\", \"Old Rose\", \"Red\"],\r\n\t[\"808000\", \"Olive\", \"Green\"],\r\n\t[\"6B8E23\", \"Olive Drab\", \"Green\"],\r\n\t[\"B5B35C\", \"Olive Green\", \"Green\"],\r\n\t[\"888064\", \"Olive Haze\", \"Yellow\"],\r\n\t[\"747028\", \"Olivetone\", \"Green\"],\r\n\t[\"9AB973\", \"Olivine\", \"Orange\"],\r\n\t[\"C2E6EC\", \"Onahau\", \"Blue\"],\r\n\t[\"48412B\", \"Onion\", \"Yellow\"],\r\n\t[\"A8C3BC\", \"Opal\", \"Green\"],\r\n\t[\"987E7E\", \"Opium\", \"Brown\"],\r\n\t[\"395555\", \"Oracle\", \"Green\"],\r\n\t[\"FFA500\", \"Orange\", \"Orange\"],\r\n\t[\"FFA000\", \"Orange Peel\", \"Orange\"],\r\n\t[\"FF4500\", \"Orange Red\", \"Orange\"],\r\n\t[\"A85335\", \"Orange Roughy\", \"Orange\"],\r\n\t[\"EAE3CD\", \"Orange White\", \"Yellow\"],\r\n\t[\"DA70D6\", \"Orchid\", \"Violet\"],\r\n\t[\"F1EBD9\", \"Orchid White\", \"Yellow\"],\r\n\t[\"255B77\", \"Orient\", \"Blue\"],\r\n\t[\"C28E88\", \"Oriental Pink\", \"Red\"],\r\n\t[\"D2D3B3\", \"Orinoco\", \"Green\"],\r\n\t[\"818988\", \"Oslo Grey\", \"Grey\"],\r\n\t[\"D3DBCB\", \"Ottoman\", \"Green\"],\r\n\t[\"2D383A\", \"Outer Space\", \"Grey\"],\r\n\t[\"FF6037\", \"Outrageous Orange\", \"Orange\"],\r\n\t[\"28353A\", \"Oxford Blue\", \"Blue\"],\r\n\t[\"6D9A78\", \"Oxley\", \"Green\"],\r\n\t[\"D1EAEA\", \"Oyster Bay\", \"Blue\"],\r\n\t[\"D4B5B0\", \"Oyster Pink\", \"Red\"],\r\n\t[\"864B36\", \"Paarl\", \"Orange\"],\r\n\t[\"7A715C\", \"Pablo\", \"Yellow\"],\r\n\t[\"009DC4\", \"Pacific Blue\", \"Blue\"],\r\n\t[\"4F4037\", \"Paco\", \"Brown\"],\r\n\t[\"7EB394\", \"Padua\", \"Green\"],\r\n\t[\"682860\", \"Palatinate Purple\", \"Violet\"],\r\n\t[\"987654\", \"Pale Brown\", \"Brown\"],\r\n\t[\"DDADAF\", \"Pale Chestnut\", \"Red\"],\r\n\t[\"ABCDEF\", \"Pale Cornflower Blue\", \"Blue\"],\r\n\t[\"EEE8AA\", \"Pale Goldenrod\", \"Yellow\"],\r\n\t[\"98FB98\", \"Pale Green\", \"Green\"],\r\n\t[\"BDCAA8\", \"Pale Leaf\", \"Green\"],\r\n\t[\"F984E5\", \"Pale Magenta\", \"Violet\"],\r\n\t[\"9C8D72\", \"Pale Oyster\", \"Brown\"],\r\n\t[\"FADADD\", \"Pale Pink\", \"Red\"],\r\n\t[\"F9F59F\", \"Pale Prim\", \"Green\"],\r\n\t[\"EFD6DA\", \"Pale Rose\", \"Red\"],\r\n\t[\"636D70\", \"Pale Sky\", \"Blue\"],\r\n\t[\"C3BEBB\", \"Pale Slate\", \"Grey\"],\r\n\t[\"BC987E\", \"Pale Taupe\", \"Grey\"],\r\n\t[\"AFEEEE\", \"Pale Turquoise\", \"Blue\"],\r\n\t[\"DB7093\", \"Pale Violet Red\", \"Red\"],\r\n\t[\"20392C\", \"Palm Green\", \"Green\"],\r\n\t[\"36482F\", \"Palm Leaf\", \"Green\"],\r\n\t[\"EAE4DC\", \"Pampas\", \"Grey\"],\r\n\t[\"EBF7E4\", \"Panache\", \"Green\"],\r\n\t[\"DFB992\", \"Pancho\", \"Orange\"],\r\n\t[\"544F3A\", \"Panda\", \"Yellow\"],\r\n\t[\"FFEFD5\", \"Papaya Whip\", \"Yellow\"],\r\n\t[\"7C2D37\", \"Paprika\", \"Red\"],\r\n\t[\"488084\", \"Paradiso\", \"Green\"],\r\n\t[\"D0C8B0\", \"Parchment\", \"Yellow\"],\r\n\t[\"FBEB50\", \"Paris Daisy\", \"Green\"],\r\n\t[\"312760\", \"Paris M\", \"Violet\"],\r\n\t[\"BFCDC0\", \"Paris White\", \"Green\"],\r\n\t[\"305D35\", \"Parsley\", \"Green\"],\r\n\t[\"77DD77\", \"Pastel Green\", \"Green\"],\r\n\t[\"639283\", \"Patina\", \"Green\"],\r\n\t[\"D3E5EF\", \"Pattens Blue\", \"Blue\"],\r\n\t[\"2A2551\", \"Paua\", \"Violet\"],\r\n\t[\"BAAB87\", \"Pavlova\", \"Yellow\"],\r\n\t[\"404048\", \"Payne's Grey\", \"Grey\"],\r\n\t[\"FFCBA4\", \"Peach\", \"Orange\"],\r\n\t[\"FFDAB9\", \"Peach Puff\", \"Yellow\"],\r\n\t[\"FFCC99\", \"Peach-Orange\", \"Orange\"],\r\n\t[\"FADFAD\", \"Peach-Yellow\", \"Yellow\"],\r\n\t[\"7A4434\", \"Peanut\", \"Brown\"],\r\n\t[\"D1E231\", \"Pear\", \"Yellow\"],\r\n\t[\"DED1C6\", \"Pearl Bush\", \"Orange\"],\r\n\t[\"EAE0C8\", \"Pearl Lusta\", \"Yellow\"],\r\n\t[\"766D52\", \"Peat\", \"Yellow\"],\r\n\t[\"2599B2\", \"Pelorous\", \"Blue\"],\r\n\t[\"D7E7D0\", \"Peppermint\", \"Green\"],\r\n\t[\"ACB9E8\", \"Perano\", \"Blue\"],\r\n\t[\"C2A9DB\", \"Perfume\", \"Violet\"],\r\n\t[\"ACB6B2\", \"Periglacial Blue\", \"Green\"],\r\n\t[\"C3CDE6\", \"Periwinkle\", \"Blue\"],\r\n\t[\"1C39BB\", \"Persian Blue\", \"Blue\"],\r\n\t[\"00A693\", \"Persian Green\", \"Green\"],\r\n\t[\"32127A\", \"Persian Indigo\", \"Violet\"],\r\n\t[\"F77FBE\", \"Persian Pink\", \"Red\"],\r\n\t[\"683332\", \"Persian Plum\", \"Red\"],\r\n\t[\"CC3333\", \"Persian Red\", \"Red\"],\r\n\t[\"FE28A2\", \"Persian Rose\", \"Red\"],\r\n\t[\"EC5800\", \"Persimmon\", \"Red\"],\r\n\t[\"CD853F\", \"Peru\", \"Brown\"],\r\n\t[\"733D1F\", \"Peru Tan\", \"Orange\"],\r\n\t[\"7A7229\", \"Pesto\", \"Yellow\"],\r\n\t[\"DA9790\", \"Petite Orchid\", \"Red\"],\r\n\t[\"91A092\", \"Pewter\", \"Green\"],\r\n\t[\"826663\", \"Pharlap\", \"Brown\"],\r\n\t[\"F8EA97\", \"Picasso\", \"Green\"],\r\n\t[\"5BA0D0\", \"Picton Blue\", \"Blue\"],\r\n\t[\"FDD7E4\", \"Pig Pink\", \"Red\"],\r\n\t[\"00A550\", \"Pigment Green\", \"Green\"],\r\n\t[\"756556\", \"Pine Cone\", \"Brown\"],\r\n\t[\"BDC07E\", \"Pine Glade\", \"Green\"],\r\n\t[\"01796F\", \"Pine Green\", \"Green\"],\r\n\t[\"2A2F23\", \"Pine Tree\", \"Green\"],\r\n\t[\"FFC0CB\", \"Pink\", \"Red\"],\r\n\t[\"FF66FF\", \"Pink Flamingo\", \"Red\"],\r\n\t[\"D8B4B6\", \"Pink Flare\", \"Red\"],\r\n\t[\"F6CCD7\", \"Pink Lace\", \"Red\"],\r\n\t[\"F3D7B6\", \"Pink Lady\", \"Orange\"],\r\n\t[\"BFB3B2\", \"Pink Swan\", \"Grey\"],\r\n\t[\"9D5432\", \"Piper\", \"Orange\"],\r\n\t[\"F5E6C4\", \"Pipi\", \"Yellow\"],\r\n\t[\"FCDBD2\", \"Pippin\", \"Red\"],\r\n\t[\"BA782A\", \"Pirate Gold\", \"Yellow\"],\r\n\t[\"BBCDA5\", \"Pixie Green\", \"Green\"],\r\n\t[\"E57F3D\", \"Pizazz\", \"Orange\"],\r\n\t[\"BF8D3C\", \"Pizza\", \"Yellow\"],\r\n\t[\"3E594C\", \"Plantation\", \"Green\"],\r\n\t[\"DDA0DD\", \"Plum\", \"Violet\"],\r\n\t[\"651C26\", \"Pohutukawa\", \"Red\"],\r\n\t[\"E5F2E7\", \"Polar\", \"Green\"],\r\n\t[\"8AA7CC\", \"Polo Blue\", \"Blue\"],\r\n\t[\"6A1F44\", \"Pompadour\", \"Violet\"],\r\n\t[\"DDDCDB\", \"Porcelain\", \"Grey\"],\r\n\t[\"DF9D5B\", \"Porsche\", \"Orange\"],\r\n\t[\"3B436C\", \"Port Gore\", \"Blue\"],\r\n\t[\"F4F09B\", \"Portafino\", \"Green\"],\r\n\t[\"8B98D8\", \"Portage\", \"Blue\"],\r\n\t[\"F0D555\", \"Portica\", \"Yellow\"],\r\n\t[\"EFDCD4\", \"Pot Pourri\", \"Orange\"],\r\n\t[\"845C40\", \"Potters Clay\", \"Brown\"],\r\n\t[\"B0E0E6\", \"Powder Blue\", \"Blue\"],\r\n\t[\"883C32\", \"Prairie Sand\", \"Red\"],\r\n\t[\"CAB4D4\", \"Prelude\", \"Violet\"],\r\n\t[\"E2CDD5\", \"Prim\", \"Violet\"],\r\n\t[\"E4DE8E\", \"Primrose\", \"Green\"],\r\n\t[\"F8F6DF\", \"Promenade\", \"Green\"],\r\n\t[\"F6E3DA\", \"Provincial Pink\", \"Orange\"],\r\n\t[\"003366\", \"Prussian Blue\", \"Blue\"],\r\n\t[\"DD00FF\", \"Psychedelic Purple\", \"Violet\"],\r\n\t[\"CC8899\", \"Puce\", \"Red\"],\r\n\t[\"6E3326\", \"Pueblo\", \"Orange\"],\r\n\t[\"59BAA3\", \"Puerto Rico\", \"Green\"],\r\n\t[\"BAC0B4\", \"Pumice\", \"Green\"],\r\n\t[\"FF7518\", \"Pumpkin\", \"Orange\"],\r\n\t[\"534931\", \"Punga\", \"Yellow\"],\r\n\t[\"800080\", \"Purple\", \"Violet\"],\r\n\t[\"652DC1\", \"Purple Heart\", \"Violet\"],\r\n\t[\"9678B6\", \"Purple Mountain's Majesty\", \"Violet\"],\r\n\t[\"50404D\", \"Purple Taupe\", \"Grey\"],\r\n\t[\"CDAE70\", \"Putty\", \"Yellow\"],\r\n\t[\"F2EDDD\", \"Quarter Pearl Lusta\", \"Green\"],\r\n\t[\"EBE2D2\", \"Quarter Spanish White\", \"Yellow\"],\r\n\t[\"D9D9F3\", \"Quartz\", \"White\"],\r\n\t[\"C3988B\", \"Quicksand\", \"Brown\"],\r\n\t[\"CBC9C0\", \"Quill Grey\", \"Grey\"],\r\n\t[\"6A5445\", \"Quincy\", \"Brown\"],\r\n\t[\"232F2C\", \"Racing Green\", \"Green\"],\r\n\t[\"FF355E\", \"Radical Red\", \"Red\"],\r\n\t[\"DCC6A0\", \"Raffia\", \"Yellow\"],\r\n\t[\"667028\", \"Rain Forest\", \"Green\"],\r\n\t[\"B3C1B1\", \"Rainee\", \"Green\"],\r\n\t[\"FCAE60\", \"Rajah\", \"Orange\"],\r\n\t[\"2B2E25\", \"Rangoon Green\", \"Green\"],\r\n\t[\"6F747B\", \"Raven\", \"Blue\"],\r\n\t[\"D27D46\", \"Raw Sienna\", \"Brown\"],\r\n\t[\"734A12\", \"Raw Umber\", \"Brown\"],\r\n\t[\"FF33CC\", \"Razzle Dazzle Rose\", \"Red\"],\r\n\t[\"E30B5C\", \"Razzmatazz\", \"Red\"],\r\n\t[\"453430\", \"Rebel\", \"Brown\"],\r\n\t[\"FF0000\", \"Red\", \"Red\"],\r\n\t[\"701F28\", \"Red Berry\", \"Red\"],\r\n\t[\"CB6F4A\", \"Red Damask\", \"Orange\"],\r\n\t[\"662A2C\", \"Red Devil\", \"Red\"],\r\n\t[\"FF3F34\", \"Red Orange\", \"Orange\"],\r\n\t[\"5D1F1E\", \"Red Oxide\", \"Red\"],\r\n\t[\"7D4138\", \"Red Robin\", \"Red\"],\r\n\t[\"AD522E\", \"Red Stage\", \"Orange\"],\r\n\t[\"BB3385\", \"Medium Red Violet\", \"Violet\"],\r\n\t[\"5B342E\", \"Redwood\", \"Red\"],\r\n\t[\"D1EF9F\", \"Reef\", \"Green\"],\r\n\t[\"A98D36\", \"Reef Gold\", \"Yellow\"],\r\n\t[\"203F58\", \"Regal Blue\", \"Blue\"],\r\n\t[\"798488\", \"Regent Grey\", \"Blue\"],\r\n\t[\"A0CDD9\", \"Regent St Blue\", \"Blue\"],\r\n\t[\"F6DEDA\", \"Remy\", \"Red\"],\r\n\t[\"B26E33\", \"Reno Sand\", \"Orange\"],\r\n\t[\"323F75\", \"Resolution Blue\", \"Blue\"],\r\n\t[\"37363F\", \"Revolver\", \"Violet\"],\r\n\t[\"3D4653\", \"Rhino\", \"Blue\"],\r\n\t[\"EFECDE\", \"Rice Cake\", \"Green\"],\r\n\t[\"EFF5D1\", \"Rice Flower\", \"Green\"],\r\n\t[\"5959AB\", \"Rich Blue\", \"Blue\"],\r\n\t[\"A15226\", \"Rich Gold\", \"Orange\"],\r\n\t[\"B7C61A\", \"Rio Grande\", \"Green\"],\r\n\t[\"89D9C8\", \"Riptide\", \"Green\"],\r\n\t[\"556061\", \"River Bed\", \"Blue\"],\r\n\t[\"DDAD56\", \"Rob Roy\", \"Yellow\"],\r\n\t[\"00CCCC\", \"Robin's Egg Blue\", \"Blue\"],\r\n\t[\"5A4D41\", \"Rock\", \"Brown\"],\r\n\t[\"93A2BA\", \"Rock Blue\", \"Blue\"],\r\n\t[\"9D442D\", \"Rock Spray\", \"Orange\"],\r\n\t[\"C7A384\", \"Rodeo Dust\", \"Brown\"],\r\n\t[\"6D7876\", \"Rolling Stone\", \"Green\"],\r\n\t[\"D8625B\", \"Roman\", \"Red\"],\r\n\t[\"7D6757\", \"Roman Coffee\", \"Brown\"],\r\n\t[\"F4F0E6\", \"Romance\", \"Grey\"],\r\n\t[\"FFC69E\", \"Romantic\", \"Orange\"],\r\n\t[\"EAB852\", \"Ronchi\", \"Yellow\"],\r\n\t[\"A14743\", \"Roof Terracotta\", \"Red\"],\r\n\t[\"8E593C\", \"Rope\", \"Orange\"],\r\n\t[\"D3A194\", \"Rose\", \"Red\"],\r\n\t[\"FEAB9A\", \"Rose Bud\", \"Red\"],\r\n\t[\"8A2D52\", \"Rose Bud Cherry\", \"Red\"],\r\n\t[\"AC512D\", \"Rose Of Sharon\", \"Orange\"],\r\n\t[\"905D5D\", \"Rose Taupe\", \"Violet\"],\r\n\t[\"FBEEE8\", \"Rose White\", \"Red\"],\r\n\t[\"BC8F8F\", \"Rosy Brown\", \"Brown\"],\r\n\t[\"B69642\", \"Roti\", \"Yellow\"],\r\n\t[\"A94064\", \"Rouge\", \"Red\"],\r\n\t[\"4169E1\", \"Royal Blue\", \"Blue\"],\r\n\t[\"B54B73\", \"Royal Heath\", \"Red\"],\r\n\t[\"6B3FA0\", \"Royal Purple\", \"Violet\"],\r\n\t[\"E0115F\", \"Ruby\", \"Red\"],\r\n\t[\"716675\", \"Rum\", \"Violet\"],\r\n\t[\"F1EDD4\", \"Rum Swizzle\", \"Green\"],\r\n\t[\"80461B\", \"Russet\", \"Brown\"],\r\n\t[\"7D655C\", \"Russett\", \"Brown\"],\r\n\t[\"B7410E\", \"Rust\", \"Red\"],\r\n\t[\"3A181A\", \"Rustic Red\", \"Red\"],\r\n\t[\"8D5F2C\", \"Rusty Nail\", \"Orange\"],\r\n\t[\"5D4E46\", \"Saddle\", \"Brown\"],\r\n\t[\"8B4513\", \"Saddle Brown\", \"Brown\"],\r\n\t[\"FF6600\", \"Safety Orange\", \"Orange\"],\r\n\t[\"F4C430\", \"Saffron\", \"Yellow\"],\r\n\t[\"989F7A\", \"Sage\", \"Green\"],\r\n\t[\"B79826\", \"Sahara\", \"Yellow\"],\r\n\t[\"A5CEEC\", \"Sail\", \"Blue\"],\r\n\t[\"177B4D\", \"Salem\", \"Green\"],\r\n\t[\"FA8072\", \"Salmon\", \"Red\"],\r\n\t[\"FFD67B\", \"Salomie\", \"Yellow\"],\r\n\t[\"696268\", \"Salt Box\", \"Violet\"],\r\n\t[\"EEF3E5\", \"Saltpan\", \"Grey\"],\r\n\t[\"3B2E25\", \"Sambuca\", \"Brown\"],\r\n\t[\"2C6E31\", \"San Felix\", \"Green\"],\r\n\t[\"445761\", \"San Juan\", \"Blue\"],\r\n\t[\"4E6C9D\", \"San Marino\", \"Blue\"],\r\n\t[\"867665\", \"Sand Dune\", \"Brown\"],\r\n\t[\"A3876A\", \"Sandal\", \"Brown\"],\r\n\t[\"AF937D\", \"Sandrift\", \"Brown\"],\r\n\t[\"786D5F\", \"Sandstone\", \"Brown\"],\r\n\t[\"DECB81\", \"Sandwisp\", \"Yellow\"],\r\n\t[\"FEDBB7\", \"Sandy Beach\", \"Orange\"],\r\n\t[\"F4A460\", \"Sandy Brown\", \"Brown\"],\r\n\t[\"92000A\", \"Sangria\", \"Red\"],\r\n\t[\"6C3736\", \"Sanguine Brown\", \"Red\"],\r\n\t[\"9998A7\", \"Santas Grey\", \"Blue\"],\r\n\t[\"A96A50\", \"Sante Fe\", \"Orange\"],\r\n\t[\"E1D5A6\", \"Sapling\", \"Yellow\"],\r\n\t[\"082567\", \"Sapphire\", \"Blue\"],\r\n\t[\"555B2C\", \"Saratoga\", \"Green\"],\r\n\t[\"F4EAE4\", \"Sauvignon\", \"Red\"],\r\n\t[\"F5DEC4\", \"Sazerac\", \"Orange\"],\r\n\t[\"6F63A0\", \"Scampi\", \"Violet\"],\r\n\t[\"ADD9D1\", \"Scandal\", \"Green\"],\r\n\t[\"FF2400\", \"Scarlet\", \"Red\"],\r\n\t[\"4A2D57\", \"Scarlet Gum\", \"Violet\"],\r\n\t[\"7E2530\", \"Scarlett\", \"Red\"],\r\n\t[\"6B6A6C\", \"Scarpa Flow\", \"Grey\"],\r\n\t[\"87876F\", \"Schist\", \"Green\"],\r\n\t[\"FFD800\", \"School Bus Yellow\", \"Yellow\"],\r\n\t[\"8D8478\", \"Schooner\", \"Brown\"],\r\n\t[\"308EA0\", \"Scooter\", \"Blue\"],\r\n\t[\"6A6466\", \"Scorpion\", \"Grey\"],\r\n\t[\"EEE7C8\", \"Scotch Mist\", \"Yellow\"],\r\n\t[\"66FF66\", \"Screamin' Green\", \"Green\"],\r\n\t[\"3D4031\", \"Scrub\", \"Green\"],\r\n\t[\"EF9548\", \"Sea Buckthorn\", \"Orange\"],\r\n\t[\"DFDDD6\", \"Sea Fog\", \"Grey\"],\r\n\t[\"2E8B57\", \"Sea Green\", \"Green\"],\r\n\t[\"C2D5C4\", \"Sea Mist\", \"Green\"],\r\n\t[\"8AAEA4\", \"Sea Nymph\", \"Green\"],\r\n\t[\"DB817E\", \"Sea Pink\", \"Red\"],\r\n\t[\"77B7D0\", \"Seagull\", \"Blue\"],\r\n\t[\"321414\", \"Seal Brown\", \"Brown\"],\r\n\t[\"69326E\", \"Seance\", \"Violet\"],\r\n\t[\"FFF5EE\", \"Seashell\", \"White\"],\r\n\t[\"37412A\", \"Seaweed\", \"Green\"],\r\n\t[\"E6DFE7\", \"Selago\", \"Violet\"],\r\n\t[\"FFBA00\", \"Selective Yellow\", \"Yellow\"],\r\n\t[\"6B4226\", \"Semi-Sweet Chocolate\", \"Brown\"],\r\n\t[\"9E5B40\", \"Sepia\", \"Brown\"],\r\n\t[\"FCE9D7\", \"Serenade\", \"Orange\"],\r\n\t[\"837050\", \"Shadow\", \"Green\"],\r\n\t[\"9AC0B6\", \"Shadow Green\", \"Green\"],\r\n\t[\"9F9B9D\", \"Shady Lady\", \"Grey\"],\r\n\t[\"609AB8\", \"Shakespeare\", \"Blue\"],\r\n\t[\"F8F6A8\", \"Shalimar\", \"Green\"],\r\n\t[\"33CC99\", \"Shamrock\", \"Green\"],\r\n\t[\"009E60\", \"Shamrock Green\", \"Green\"],\r\n\t[\"34363A\", \"Shark\", \"Grey\"],\r\n\t[\"00494E\", \"Sherpa Blue\", \"Green\"],\r\n\t[\"1B4636\", \"Sherwood Green\", \"Green\"],\r\n\t[\"E6B2A6\", \"Shilo\", \"Red\"],\r\n\t[\"745937\", \"Shingle Fawn\", \"Brown\"],\r\n\t[\"7988AB\", \"Ship Cove\", \"Blue\"],\r\n\t[\"4E4E4C\", \"Ship Grey\", \"Grey\"],\r\n\t[\"842833\", \"Shiraz\", \"Red\"],\r\n\t[\"E899BE\", \"Shocking\", \"Violet\"],\r\n\t[\"FC0FC0\", \"Shocking Pink\", \"Red\"],\r\n\t[\"61666B\", \"Shuttle Grey\", \"Grey\"],\r\n\t[\"686B50\", \"Siam\", \"Green\"],\r\n\t[\"E9D9A9\", \"Sidecar\", \"Yellow\"],\r\n\t[\"A0522D\", \"Sienna\", \"Brown\"],\r\n\t[\"BBADA1\", \"Silk\", \"Brown\"],\r\n\t[\"C0C0C0\", \"Silver\", \"Grey\"],\r\n\t[\"ACAEA9\", \"Silver Chalice\", \"Grey\"],\r\n\t[\"BEBDB6\", \"Silver Sand\", \"Grey\"],\r\n\t[\"67BE90\", \"Silver Tree\", \"Green\"],\r\n\t[\"A6D5D0\", \"Sinbad\", \"Green\"],\r\n\t[\"69293B\", \"Siren\", \"Red\"],\r\n\t[\"68766E\", \"Sirocco\", \"Green\"],\r\n\t[\"C5BAA0\", \"Sisal\", \"Yellow\"],\r\n\t[\"9DB4AA\", \"Skeptic\", \"Green\"],\r\n\t[\"87CEEB\", \"Sky Blue\", \"Blue\"],\r\n\t[\"6A5ACD\", \"Slate Blue\", \"Blue\"],\r\n\t[\"708090\", \"Slate Grey\", \"Grey\"],\r\n\t[\"42342B\", \"Slugger\", \"Brown\"],\r\n\t[\"003399\", \"Smalt\", \"Blue\"],\r\n\t[\"496267\", \"Smalt Blue\", \"Blue\"],\r\n\t[\"BB5F34\", \"Smoke Tree\", \"Orange\"],\r\n\t[\"605D6B\", \"Smoky\", \"Violet\"],\r\n\t[\"FFFAFA\", \"Snow\", \"White\"],\r\n\t[\"E3E3DC\", \"Snow Drift\", \"Grey\"],\r\n\t[\"EAF7C9\", \"Snow Flurry\", \"Green\"],\r\n\t[\"D6F0CD\", \"Snowy Mint\", \"Green\"],\r\n\t[\"E4D7E5\", \"Snuff\", \"Violet\"],\r\n\t[\"ECE5DA\", \"Soapstone\", \"Grey\"],\r\n\t[\"CFBEA5\", \"Soft Amber\", \"Yellow\"],\r\n\t[\"EEDFDE\", \"Soft Peach\", \"Red\"],\r\n\t[\"85494C\", \"Solid Pink\", \"Red\"],\r\n\t[\"EADAC2\", \"Solitaire\", \"Yellow\"],\r\n\t[\"E9ECF1\", \"Solitude\", \"Blue\"],\r\n\t[\"DD6B38\", \"Sorbus\", \"Orange\"],\r\n\t[\"9D7F61\", \"Sorrell Brown\", \"Brown\"],\r\n\t[\"C9B59A\", \"Sour Dough\", \"Brown\"],\r\n\t[\"6F634B\", \"Soya Bean\", \"Brown\"],\r\n\t[\"4B433B\", \"Space Shuttle\", \"Brown\"],\r\n\t[\"7B8976\", \"Spanish Green\", \"Green\"],\r\n\t[\"DED1B7\", \"Spanish White\", \"Yellow\"],\r\n\t[\"375D4F\", \"Spectra\", \"Green\"],\r\n\t[\"6C4F3F\", \"Spice\", \"Brown\"],\r\n\t[\"8B5F4D\", \"Spicy Mix\", \"Brown\"],\r\n\t[\"FF1CAE\", \"Spicy Pink\", \"Red\"],\r\n\t[\"B3C4D8\", \"Spindle\", \"Blue\"],\r\n\t[\"F1D79E\", \"Splash\", \"Yellow\"],\r\n\t[\"7ECDDD\", \"Spray\", \"Blue\"],\r\n\t[\"A7FC00\", \"Spring Bud\", \"Green\"],\r\n\t[\"00FF7F\", \"Spring Green\", \"Green\"],\r\n\t[\"A3BD9C\", \"Spring Rain\", \"Green\"],\r\n\t[\"F1F1C6\", \"Spring Sun\", \"Green\"],\r\n\t[\"E9E1D9\", \"Spring Wood\", \"Grey\"],\r\n\t[\"B8CA9D\", \"Sprout\", \"Green\"],\r\n\t[\"A2A1AC\", \"Spun Pearl\", \"Blue\"],\r\n\t[\"8F7D6B\", \"Squirrel\", \"Brown\"],\r\n\t[\"325482\", \"St Tropaz\", \"Blue\"],\r\n\t[\"858885\", \"Stack\", \"Grey\"],\r\n\t[\"A0A197\", \"Star Dust\", \"Grey\"],\r\n\t[\"D2C6B6\", \"Stark White\", \"Yellow\"],\r\n\t[\"E3DD39\", \"Starship\", \"Green\"],\r\n\t[\"4682B4\", \"Steel Blue\", \"Blue\"],\r\n\t[\"43464B\", \"Steel Grey\", \"Grey\"],\r\n\t[\"833D3E\", \"Stiletto\", \"Red\"],\r\n\t[\"807661\", \"Stonewall\", \"Yellow\"],\r\n\t[\"65645F\", \"Storm Dust\", \"Grey\"],\r\n\t[\"747880\", \"Storm Grey\", \"Blue\"],\r\n\t[\"DABE82\", \"Straw\", \"Yellow\"],\r\n\t[\"946A81\", \"Strikemaster\", \"Violet\"],\r\n\t[\"406356\", \"Stromboli\", \"Green\"],\r\n\t[\"724AA1\", \"Studio\", \"Violet\"],\r\n\t[\"8C9C9C\", \"Submarine\", \"Blue\"],\r\n\t[\"EEEFDF\", \"Sugar Cane\", \"Green\"],\r\n\t[\"C6EA80\", \"Sulu\", \"Green\"],\r\n\t[\"8FB69C\", \"Summer Green\", \"Green\"],\r\n\t[\"38B0DE\", \"Summer Sky\", \"Blue\"],\r\n\t[\"EF8E38\", \"Sun\", \"Orange\"],\r\n\t[\"C4AA4D\", \"Sundance\", \"Yellow\"],\r\n\t[\"F8AFA9\", \"Sundown\", \"Red\"],\r\n\t[\"DAC01A\", \"Sunflower\", \"Yellow\"],\r\n\t[\"C76155\", \"Sunglo\", \"Red\"],\r\n\t[\"FFCC33\", \"Sunglow\", \"Orange\"],\r\n\t[\"C0514A\", \"Sunset\", \"Red\"],\r\n\t[\"FE4C40\", \"Sunset Orange\", \"Orange\"],\r\n\t[\"FA9D49\", \"Sunshade\", \"Orange\"],\r\n\t[\"FFB437\", \"Supernova\", \"Yellow\"],\r\n\t[\"B8D4BB\", \"Surf\", \"Green\"],\r\n\t[\"C3D6BD\", \"Surf Crest\", \"Green\"],\r\n\t[\"007B77\", \"Surfie Green\", \"Green\"],\r\n\t[\"7C9F2F\", \"Sushi\", \"Green\"],\r\n\t[\"8B8685\", \"Suva Grey\", \"Grey\"],\r\n\t[\"252F2F\", \"Swamp\", \"Green\"],\r\n\t[\"DAE6DD\", \"Swans Down\", \"Grey\"],\r\n\t[\"F9E176\", \"Sweet Corn\", \"Yellow\"],\r\n\t[\"EE918D\", \"Sweet Pink\", \"Red\"],\r\n\t[\"D7CEC5\", \"Swirl\", \"Grey\"],\r\n\t[\"DBD0CA\", \"Swiss Coffee\", \"Grey\"],\r\n\t[\"F6AE78\", \"Tacao\", \"Orange\"],\r\n\t[\"D2B960\", \"Tacha\", \"Yellow\"],\r\n\t[\"DC722A\", \"Tahiti Gold\", \"Orange\"],\r\n\t[\"D8CC9B\", \"Tahuna Sands\", \"Yellow\"],\r\n\t[\"853534\", \"Tall Poppy\", \"Red\"],\r\n\t[\"A39977\", \"Tallow\", \"Yellow\"],\r\n\t[\"752B2F\", \"Tamarillo\", \"Red\"],\r\n\t[\"D2B48C\", \"Tan\", \"Brown\"],\r\n\t[\"B8B5A1\", \"Tana\", \"Green\"],\r\n\t[\"1E2F3C\", \"Tangaroa\", \"Blue\"],\r\n\t[\"F28500\", \"Tangerine\", \"Orange\"],\r\n\t[\"FFCC00\", \"Tangerine Yellow\", \"Yellow\"],\r\n\t[\"D46F31\", \"Tango\", \"Orange\"],\r\n\t[\"7C7C72\", \"Tapa\", \"Green\"],\r\n\t[\"B37084\", \"Tapestry\", \"Red\"],\r\n\t[\"DEF1DD\", \"Tara\", \"Green\"],\r\n\t[\"253C48\", \"Tarawera\", \"Blue\"],\r\n\t[\"BAC0B3\", \"Tasman\", \"Grey\"],\r\n\t[\"483C32\", \"Taupe\", \"Grey\"],\r\n\t[\"8B8589\", \"Taupe Grey\", \"Grey\"],\r\n\t[\"643A48\", \"Tawny Port\", \"Red\"],\r\n\t[\"496569\", \"Tax Break\", \"Blue\"],\r\n\t[\"2B4B40\", \"Te Papa Green\", \"Green\"],\r\n\t[\"BFB5A2\", \"Tea\", \"Yellow\"],\r\n\t[\"D0F0C0\", \"Tea Green\", \"Green\"],\r\n\t[\"F883C2\", \"Tea Rose\", \"Orange\"],\r\n\t[\"AB8953\", \"Teak\", \"Yellow\"],\r\n\t[\"008080\", \"Teal\", \"Blue\"],\r\n\t[\"254855\", \"Teal Blue\", \"Blue\"],\r\n\t[\"3C2126\", \"Temptress\", \"Brown\"],\r\n\t[\"CD5700\", \"Tenne (Tawny)\", \"Orange\"],\r\n\t[\"F4D0A4\", \"Tequila\", \"Yellow\"],\r\n\t[\"E2725B\", \"Terra Cotta\", \"Red\"],\r\n\t[\"ECE67E\", \"Texas\", \"Green\"],\r\n\t[\"FCB057\", \"Texas Rose\", \"Orange\"],\r\n\t[\"B1948F\", \"Thatch\", \"Brown\"],\r\n\t[\"544E31\", \"Thatch Green\", \"Yellow\"],\r\n\t[\"D8BFD8\", \"Thistle\", \"Violet\"],\r\n\t[\"4D4D4B\", \"Thunder\", \"Grey\"],\r\n\t[\"923830\", \"Thunderbird\", \"Red\"],\r\n\t[\"97422D\", \"Tia Maria\", \"Orange\"],\r\n\t[\"B9C3BE\", \"Tiara\", \"Grey\"],\r\n\t[\"184343\", \"Tiber\", \"Green\"],\r\n\t[\"FC80A5\", \"Tickle Me Pink\", \"Red\"],\r\n\t[\"F0F590\", \"Tidal\", \"Green\"],\r\n\t[\"BEB4AB\", \"Tide\", \"Brown\"],\r\n\t[\"324336\", \"Timber Green\", \"Green\"],\r\n\t[\"D9D6CF\", \"Timberwolf\", \"Grey\"],\r\n\t[\"DDD6E1\", \"Titan White\", \"Violet\"],\r\n\t[\"9F715F\", \"Toast\", \"Brown\"],\r\n\t[\"6D5843\", \"Tobacco Brown\", \"Brown\"],\r\n\t[\"44362D\", \"Tobago\", \"Brown\"],\r\n\t[\"3E2631\", \"Toledo\", \"Violet\"],\r\n\t[\"2D2541\", \"Tolopea\", \"Violet\"],\r\n\t[\"4F6348\", \"Tom Thumb\", \"Green\"],\r\n\t[\"FF6347\", \"Tomato\", \"Red\"],\r\n\t[\"E79E88\", \"Tonys Pink\", \"Orange\"],\r\n\t[\"817C87\", \"Topaz\", \"Violet\"],\r\n\t[\"FD0E35\", \"Torch Red\", \"Red\"],\r\n\t[\"353D75\", \"Torea Bay\", \"Blue\"],\r\n\t[\"374E88\", \"Tory Blue\", \"Blue\"],\r\n\t[\"744042\", \"Tosca\", \"Red\"],\r\n\t[\"9CACA5\", \"Tower Grey\", \"Green\"],\r\n\t[\"6DAFA7\", \"Tradewind\", \"Green\"],\r\n\t[\"DDEDE9\", \"Tranquil\", \"Blue\"],\r\n\t[\"E2DDC7\", \"Travertine\", \"Green\"],\r\n\t[\"E2813B\", \"Tree Poppy\", \"Orange\"],\r\n\t[\"7E8424\", \"Trendy Green\", \"Green\"],\r\n\t[\"805D80\", \"Trendy Pink\", \"Violet\"],\r\n\t[\"C54F33\", \"Trinidad\", \"Orange\"],\r\n\t[\"AEC9EB\", \"Tropical Blue\", \"Blue\"],\r\n\t[\"00755E\", \"Tropical Rain Forest\", \"Green\"],\r\n\t[\"4C5356\", \"Trout\", \"Grey\"],\r\n\t[\"8E72C7\", \"True V\", \"Violet\"],\r\n\t[\"454642\", \"Tuatara\", \"Grey\"],\r\n\t[\"F9D3BE\", \"Tuft Bush\", \"Orange\"],\r\n\t[\"E3AC3D\", \"Tulip Tree\", \"Yellow\"],\r\n\t[\"DEA681\", \"Tumbleweed\", \"Brown\"],\r\n\t[\"46494E\", \"Tuna\", \"Grey\"],\r\n\t[\"585452\", \"Tundora\", \"Grey\"],\r\n\t[\"F5CC23\", \"Turbo\", \"Yellow\"],\r\n\t[\"A56E75\", \"Turkish Rose\", \"Red\"],\r\n\t[\"AE9041\", \"Turmeric\", \"Yellow\"],\r\n\t[\"40E0D0\", \"Turquoise\", \"Blue\"],\r\n\t[\"6CDAE7\", \"Turquoise Blue\", \"Blue\"],\r\n\t[\"363E1D\", \"Turtle Green\", \"Green\"],\r\n\t[\"AD6242\", \"Tuscany\", \"Orange\"],\r\n\t[\"E3E5B1\", \"Tusk\", \"Green\"],\r\n\t[\"BF914B\", \"Tussock\", \"Yellow\"],\r\n\t[\"F8E4E3\", \"Tutu\", \"Red\"],\r\n\t[\"DAC0CD\", \"Twilight\", \"Violet\"],\r\n\t[\"F4F6EC\", \"Twilight Blue\", \"Grey\"],\r\n\t[\"C19156\", \"Twine\", \"Yellow\"],\r\n\t[\"66023C\", \"Tyrian Purple\", \"Violet\"],\r\n\t[\"FF6FFF\", \"Ultra Pink\", \"Red\"],\r\n\t[\"120A8F\", \"Ultramarine\", \"Blue\"],\r\n\t[\"D4574E\", \"Valencia\", \"Red\"],\r\n\t[\"382C38\", \"Valentino\", \"Violet\"],\r\n\t[\"2A2B41\", \"Valhalla\", \"Violet\"],\r\n\t[\"523936\", \"Van Cleef\", \"Brown\"],\r\n\t[\"CCB69B\", \"Vanilla\", \"Brown\"],\r\n\t[\"EBD2D1\", \"Vanilla Ice\", \"Red\"],\r\n\t[\"FDEFD3\", \"Varden\", \"Yellow\"],\r\n\t[\"C80815\", \"Venetian Red\", \"Red\"],\r\n\t[\"2C5778\", \"Venice Blue\", \"Blue\"],\r\n\t[\"8B7D82\", \"Venus\", \"Violet\"],\r\n\t[\"62603E\", \"Verdigris\", \"Grey\"],\r\n\t[\"48531A\", \"Verdun Green\", \"Green\"],\r\n\t[\"FF4D00\", \"Vermilion\", \"Red\"],\r\n\t[\"5C4033\", \"Very Dark Brown\", \"Brown\"],\r\n\t[\"CDCDCD\", \"Very Light Grey\", \"Grey\"],\r\n\t[\"A85533\", \"Vesuvius\", \"Orange\"],\r\n\t[\"564985\", \"Victoria\", \"Violet\"],\r\n\t[\"5F9228\", \"Vida Loca\", \"Green\"],\r\n\t[\"4DB1C8\", \"Viking\", \"Blue\"],\r\n\t[\"955264\", \"Vin Rouge\", \"Red\"],\r\n\t[\"C58F9D\", \"Viola\", \"Red\"],\r\n\t[\"2E2249\", \"Violent Violet\", \"Violet\"],\r\n\t[\"EE82EE\", \"Violet\", \"Violet\"],\r\n\t[\"9F5F9F\", \"Violet Blue\", \"Violet\"],\r\n\t[\"F7468A\", \"Violet Red\", \"Red\"],\r\n\t[\"40826D\", \"Viridian\", \"Blue\"],\r\n\t[\"4B5F56\", \"Viridian Green\", \"Green\"],\r\n\t[\"F9E496\", \"Vis Vis\", \"Yellow\"],\r\n\t[\"97D5B3\", \"Vista Blue\", \"Green\"],\r\n\t[\"E3DFD9\", \"Vista White\", \"Grey\"],\r\n\t[\"FF9980\", \"Vivid Tangerine\", \"Orange\"],\r\n\t[\"803790\", \"Vivid Violet\", \"Violet\"],\r\n\t[\"4E2728\", \"Volcano\", \"Red\"],\r\n\t[\"443240\", \"Voodoo\", \"Violet\"],\r\n\t[\"36383C\", \"Vulcan\", \"Grey\"],\r\n\t[\"D4BBB1\", \"Wafer\", \"Orange\"],\r\n\t[\"5B6E91\", \"Waikawa Grey\", \"Blue\"],\r\n\t[\"4C4E31\", \"Waiouru\", \"Green\"],\r\n\t[\"E4E2DC\", \"Wan White\", \"Grey\"],\r\n\t[\"849137\", \"Wasabi\", \"Green\"],\r\n\t[\"B6ECDE\", \"Water Leaf\", \"Green\"],\r\n\t[\"006E4E\", \"Watercourse\", \"Green\"],\r\n\t[\"D6CA3D\", \"Wattle\", \"Green\"],\r\n\t[\"F2CDBB\", \"Watusi\", \"Orange\"],\r\n\t[\"EEB39E\", \"Wax Flower\", \"Orange\"],\r\n\t[\"FDD7D8\", \"We Peep\", \"Red\"],\r\n\t[\"4C6B88\", \"Wedgewood\", \"Blue\"],\r\n\t[\"8E3537\", \"Well Read\", \"Red\"],\r\n\t[\"5C512F\", \"West Coast\", \"Yellow\"],\r\n\t[\"E5823A\", \"West Side\", \"Orange\"],\r\n\t[\"D4CFC5\", \"Westar\", \"Grey\"],\r\n\t[\"F1919A\", \"Wewak\", \"Red\"],\r\n\t[\"F5DEB3\", \"Wheat\", \"Brown\"],\r\n\t[\"DFD7BD\", \"Wheatfield\", \"Yellow\"],\r\n\t[\"D29062\", \"Whiskey\", \"Orange\"],\r\n\t[\"D4915D\", \"Whiskey Sour\", \"Orange\"],\r\n\t[\"EFE6E6\", \"Whisper\", \"Grey\"],\r\n\t[\"FFFFFF\", \"White\", \"White\"],\r\n\t[\"D7EEE4\", \"White Ice\", \"Green\"],\r\n\t[\"E7E5E8\", \"White Lilac\", \"Blue\"],\r\n\t[\"EEE7DC\", \"White Linen\", \"Grey\"],\r\n\t[\"F8F6D8\", \"White Nectar\", \"Green\"],\r\n\t[\"DAD6CC\", \"White Pointer\", \"Grey\"],\r\n\t[\"D4CFB4\", \"White Rock\", \"Green\"],\r\n\t[\"F5F5F5\", \"White Smoke\", \"White\"],\r\n\t[\"7A89B8\", \"Wild Blue Yonder\", \"Blue\"],\r\n\t[\"E3D474\", \"Wild Rice\", \"Green\"],\r\n\t[\"E7E4DE\", \"Wild Sand\", \"Grey\"],\r\n\t[\"FF3399\", \"Wild Strawberry\", \"Red\"],\r\n\t[\"FD5B78\", \"Wild Watermelon\", \"Red\"],\r\n\t[\"BECA60\", \"Wild Willow\", \"Green\"],\r\n\t[\"53736F\", \"William\", \"Green\"],\r\n\t[\"DFE6CF\", \"Willow Brook\", \"Green\"],\r\n\t[\"69755C\", \"Willow Grove\", \"Green\"],\r\n\t[\"462C77\", \"Windsor\", \"Violet\"],\r\n\t[\"522C35\", \"Wine Berry\", \"Red\"],\r\n\t[\"D0C383\", \"Winter Hazel\", \"Yellow\"],\r\n\t[\"F9E8E2\", \"Wisp Pink\", \"Red\"],\r\n\t[\"C9A0DC\", \"Wisteria\", \"Violet\"],\r\n\t[\"A29ECD\", \"Wistful\", \"Blue\"],\r\n\t[\"FBF073\", \"Witch Haze\", \"Green\"],\r\n\t[\"302621\", \"Wood Bark\", \"Brown\"],\r\n\t[\"463629\", \"Woodburn\", \"Brown\"],\r\n\t[\"626746\", \"Woodland\", \"Green\"],\r\n\t[\"45402B\", \"Woodrush\", \"Yellow\"],\r\n\t[\"2B3230\", \"Woodsmoke\", \"Grey\"],\r\n\t[\"554545\", \"Woody Brown\", \"Brown\"],\r\n\t[\"75876E\", \"Xanadu\", \"Green\"],\r\n\t[\"FFFF00\", \"Yellow\", \"Yellow\"],\r\n\t[\"9ACD32\", \"Yellow Green\", \"Green\"],\r\n\t[\"73633E\", \"Yellow Metal\", \"Yellow\"],\r\n\t[\"FFAE42\", \"Yellow Orange\", \"Orange\"],\r\n\t[\"F49F35\", \"Yellow Sea\", \"Yellow\"],\r\n\t[\"FFC5BB\", \"Your Pink\", \"Red\"],\r\n\t[\"826A21\", \"Yukon Gold\", \"Yellow\"],\r\n\t[\"C7B882\", \"Yuma\", \"Yellow\"],\r\n\t[\"6B5A5A\", \"Zambezi\", \"Brown\"],\r\n\t[\"B2C6B1\", \"Zanah\", \"Green\"],\r\n\t[\"C6723B\", \"Zest\", \"Orange\"],\r\n\t[\"3B3C38\", \"Zeus\", \"Grey\"],\r\n\t[\"81A6AA\", \"Ziggurat\", \"Blue\"],\r\n\t[\"EBC2AF\", \"Zinnwaldite\", \"Brown\"],\r\n\t[\"DEE3E3\", \"Zircon\", \"Grey\"],\r\n\t[\"DDC283\", \"Zombie\", \"Yellow\"],\r\n\t[\"A29589\", \"Zorba\", \"Brown\"],\r\n\t[\"17462E\", \"Zuccini\", \"Green\"],\r\n\t[\"CDD5D5\", \"Zumthor\", \"Grey\"],\r\n]\r\n\r\nclass SpacesCanvasState {\r\n\tpublic animationEnd: int = 0\r\n}\r\nfunction distanceLinePoint(anchor: V3, dir: V3, x: V3) {\r\n\t// See http://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\r\n\tconst dir1 = dir.unit()\r\n\tconst t = x.minus(anchor).dot(dir1)\r\n\treturn dir1\r\n\t\t.times(t)\r\n\t\t.plus(anchor)\r\n\t\t.distanceTo(x)\r\n\r\n\t//return x.minus(this.anchor).cross(x.minus(this.anchor.plus(this.dir1))).length()\r\n}\r\nexport class Camera {\r\n\tpublic readonly eye: V3 = V(1, -2.5, 1)\r\n\tpublic readonly center: V3 = V(0, 0, 0.5)\r\n\tpublic readonly up: V3 = V3.Z\r\n}\r\nexport type What = keyof typeof whats\r\ninterface SpacesCanvasProps extends HTMLAttributes<HTMLCanvasElement> {\r\n\tcolorSpace: DrawableColorSpaces\r\n\twhat: What\r\n\trotation: boolean\r\n\tonHoverChange: (value: Color | undefined) => void\r\n\tcolorHighlight: Color | undefined\r\n\r\n\tcamera: Camera\r\n}\r\nexport class SpacesCanvas extends Component<SpacesCanvasProps, SpacesCanvasState> {\r\n\tpublic canvas!: HTMLCanvasElement\r\n\tpublic gl!: TSGLContext\r\n\tpublic colorPointsMesh!: Mesh\r\n\r\n\tpublic interpolationAnimation: int = 0\r\n\r\n\tpublic getColorsForWhat = memoize(function(what: What) {\r\n\t\treturn whats[what]()\r\n\t})\r\n\tpublic colorPoss: V3[] = []\r\n\tpublic colorPossPrev: V3[] = this.colorPoss\r\n\tpublic highlightIndex: int = -1\r\n\r\n\tpublic state = new SpacesCanvasState()\r\n\tpublic colorPointMesh!: Mesh & { normals: any[]; TRIANGLES: number[]; LINES: number[] }\r\n\tprotected createMeshForWhat = memoize(\r\n\t\tfunction(this: SpacesCanvas, what: What, colorSpace: DrawableColorSpaces) {\r\n\t\t\treturn this.createMeshFromColors(this.getColorsForWhat(what), colorSpace)\r\n\t\t},\r\n\t\t(what, colorSpace) => what + \" \" + colorSpace,\r\n\t)\r\n\tprivate rotationTime: int = 0\r\n\tprivate hoverColor: Color | undefined\r\n\r\n\tpublic render() {\r\n\t\tconst { colorSpace, onHoverChange, what, colorHighlight, rotation, ...htmlAttributes } = this.props\r\n\t\treturn <canvas {...htmlAttributes} ref={r => (this.canvas = r!)} onMouseMove={this.onMouseMove} />\r\n\t}\r\n\r\n\tpublic windowOnResize = () => {\r\n\t\tthis.gl.fixCanvasRes()\r\n\t\tthis.forceUpdate()\r\n\t}\r\n\r\n\tpublic onMouseMove = (e: MouseEvent<HTMLCanvasElement>) => {\r\n\t\tconst { anchor, dir } = this.gl.getMouseLine(e.nativeEvent)\r\n\t\tconst t = this.colorPoss\r\n\t\t\t.map((p, i) => [p, i] as [V3, int])\r\n\t\t\t.filter(([p, _i]) => distanceLinePoint(anchor, dir, p) < 0.01)\r\n\t\t\t.withMax(([p, _i]) => -p.minus(anchor).dot(dir.unit()))\r\n\t\tconst newHoverIndex = t ? t[1] : -1\r\n\t\tconst newHoverColor = this.getColorsForWhat(this.props.what)[newHoverIndex]\r\n\t\tif (newHoverColor != this.hoverColor) {\r\n\t\t\tthis.hoverColor = newHoverColor\r\n\t\t\tthis.props.onHoverChange(newHoverColor)\r\n\t\t}\r\n\r\n\t\tif (this.props.onMouseMove) {\r\n\t\t\tthis.props.onMouseMove(e)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async componentDidMount() {\r\n\t\tconst gl = (this.gl = TSGLContext.create({ canvas: this.canvas }))\r\n\t\tgl.fixCanvasRes()\r\n\t\tgl.meshes = {\r\n\t\t\tcube: Mesh.cube().compile(),\r\n\t\t}\r\n\t\tgl.shaders = {}\r\n\t\t// this.colorPointMesh = Mesh.cube()\r\n\t\t// \t.scale(2)\r\n\t\t// \t.translate(-1, -1, -1)\r\n\t\t// \t.compile()\r\n\t\tthis.colorPointMesh = Mesh.sphere(1)\r\n\t\tgl.shaders.singleColor = Shader.create(posVS, colorFS)\r\n\t\tgl.shaders.varyingColor = Shader.create(posNormalColorVS, varyingColorFS)\r\n\r\n\t\tgl.clearColor(0.8, 0.8, 0.8, 1)\r\n\t\tgl.enable(gl.DEPTH_TEST)\r\n\t\tgl.enable(gl.CULL_FACE)\r\n\r\n\t\tgl.getExtension(\"OES_element_index_uint\")\r\n\r\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\r\n\t\tgl.enable(gl.BLEND)\r\n\r\n\t\tawait gl.setupTextRendering(\"OpenSans-Regular.png\", \"OpenSans-Regular.json\")\r\n\r\n\t\tthis.componentDidUpdate({} as any)\r\n\t\t// gl.animate((t, dt) => this.renderCanvas(t, dt))\r\n\r\n\t\twindow.addEventListener(\"resize\", this.windowOnResize)\r\n\t}\r\n\r\n\tpublic componentDidUpdate(prevProps: Readonly<SpacesCanvasProps>) {\r\n\t\t// console.time()\r\n\t\tif (prevProps.colorSpace != this.props.colorSpace || prevProps.what != this.props.what) {\r\n\t\t\tconst newMesh = this.createMeshForWhat(this.props.what, this.props.colorSpace)\r\n\t\t\tif (this.colorPointsMesh && prevProps.what == this.props.what) {\r\n\t\t\t\tnewMesh.vertexBuffers.ts_Vertex2 = this.colorPointsMesh.vertexBuffers.ts_Vertex\r\n\t\t\t\tthis.setState({ animationEnd: performance.now() + ANIMATION_DURATION })\r\n\t\t\t} else {\r\n\t\t\t\tnewMesh.vertexBuffers.ts_Vertex2 = newMesh.vertexBuffers.ts_Vertex\r\n\t\t\t}\r\n\t\t\tthis.colorPointsMesh = newMesh\r\n\r\n\t\t\tthis.colorPossPrev = this.colorPoss\r\n\t\t\tthis.colorPoss = this.getColorsForWhat(this.props.what).map(colorSpaces[this.props.colorSpace].convert)\r\n\t\t}\r\n\t\tif (prevProps.what != this.props.what || prevProps.colorHighlight != this.props.colorHighlight) {\r\n\t\t\tthis.highlightIndex =\r\n\t\t\t\tundefined == this.props.colorHighlight\r\n\t\t\t\t\t? -1\r\n\t\t\t\t\t: this.getColorsForWhat(this.props.what).findIndex(color =>\r\n\t\t\t\t\t\t\tcolor.equals(this.props.colorHighlight!),\r\n\t\t\t\t\t  )\r\n\t\t}\r\n\t\t// console.timeEnd()\r\n\t\trequestAnimationFrame(this.renderCanvas)\r\n\t}\r\n\r\n\tpublic componentWillUnmount() {\r\n\t\twindow.removeEventListener(\"resize\", this.windowOnResize)\r\n\t}\r\n\r\n\tprotected renderCanvas = (_t: number) => {\r\n\t\tconst { gl } = this\r\n\t\tconst { eye, center, up } = this.props.camera\r\n\t\t// if (this.props.rotation) {\r\n\t\t// \tthis.rotationTime += dt\r\n\t\t// }\r\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n\r\n\t\tgl.cullFace(gl.BACK)\r\n\r\n\t\tgl.matrixMode(gl.PROJECTION)\r\n\t\tgl.loadIdentity()\r\n\t\t// gl.perspective(15, gl.canvas.width / gl.canvas.height, 0.1, 1000)\r\n\t\tconst ratio = gl.canvas.width / gl.canvas.height\r\n\t\tconst lr = Math.max(ratio, 1) * 0.7\r\n\t\tconst bt = lr / ratio\r\n\t\tgl.ortho(-lr, lr, -bt, bt, -1e4, 1e4)\r\n\t\tgl.lookAt(eye, center, up)\r\n\r\n\t\tgl.matrixMode(gl.MODELVIEW)\r\n\t\tgl.loadIdentity()\r\n\r\n\t\t// // cube\r\n\t\t// gl.pushMatrix()\r\n\t\t// gl.translate(-0.5, -0.5, 0)\r\n\t\t// gl.shaders.singleColor.uniforms({ color: chroma(\"black\").gl() }).draw(gl.meshes.cube, gl.LINES)\r\n\t\t// gl.popMatrix()\r\n\r\n\t\t// gl.rotate((this.rotationTime / 1000) * 10, 0, 0, 1)\r\n\t\tgl.pushMatrix()\r\n\t\tgl.disable(gl.CULL_FACE)\r\n\t\tcolorSpaces[this.props.colorSpace].render(gl)\r\n\t\tgl.enable(gl.CULL_FACE)\r\n\t\tgl.popMatrix()\r\n\t\tlet f = 0\r\n\t\tif (_t < this.state.animationEnd) {\r\n\t\t\tf = (this.state.animationEnd - _t) / ANIMATION_DURATION\r\n\t\t\trequestAnimationFrame(this.renderCanvas)\r\n\t\t}\r\n\t\tgl.shaders.varyingColor.uniforms({ f }).draw(this.colorPointsMesh)\r\n\t\tif (-1 !== this.highlightIndex) {\r\n\t\t\tgl.cullFace(gl.FRONT)\r\n\t\t\tconst pos =\r\n\t\t\t\t0 == f\r\n\t\t\t\t\t? this.colorPoss[this.highlightIndex]\r\n\t\t\t\t\t: this.colorPoss[this.highlightIndex].lerp(this.colorPossPrev[this.highlightIndex], f)\r\n\t\t\tgl.translate(pos)\r\n\t\t\tgl.scale(0.01 * 1.8)\r\n\t\t\tgl.shaders.singleColor\r\n\t\t\t\t.uniforms({\r\n\t\t\t\t\tcolor: this.props.colorHighlight!.textColor().gl(),\r\n\t\t\t\t})\r\n\t\t\t\t.draw(this.colorPointMesh)\r\n\t\t}\r\n\t}\r\n\tprotected createMeshFromColors(colors: X[], colorSpace: DrawableColorSpaces) {\r\n\t\tconst { colorPointMesh } = this\r\n\t\tconst tempMatrix1 = new M4(),\r\n\t\t\ttempMatrix2 = new M4(),\r\n\t\t\ttempMatrix3 = new M4()\r\n\t\tconst pointMeshes = colors.map(color => {\r\n\t\t\tconst pos = colorSpaces[colorSpace].convert(color)\r\n\t\t\tconst pointSize = 0.01\r\n\t\t\tconst glColor = (color.displayColor || color).gl()\r\n\t\t\tconst result = colorPointMesh\r\n\t\t\t\t.transform(M4.multiply(M4.translate(pos, tempMatrix2), M4.scale(pointSize, tempMatrix1), tempMatrix3))\r\n\t\t\t\t.addVertexBuffer(\"colors\", \"ts_Color\")\r\n\t\t\tresult.colors = fillArray(colorPointMesh.vertices.length, glColor)\r\n\t\t\treturn result\r\n\t\t})\r\n\t\treturn new Mesh()\r\n\t\t\t.addIndexBuffer(\"TRIANGLES\", this.gl.UNSIGNED_INT)\r\n\t\t\t.addVertexBuffer(\"normals\", \"ts_Normal\")\r\n\t\t\t.addVertexBuffer(\"colors\", \"ts_Color\")\r\n\t\t\t.concat(...pointMeshes)\r\n\t\t\t.compile()\r\n\t}\r\n}\r\nexport const whats = {\r\n\thues() {\r\n\t\treturn Array.from({ length: 180 }, (_, i) => chroma.hsl(i * 2, 1, 0.5))\r\n\t},\r\n\trgbCube16() {\r\n\t\treturn rgbCube(16)\r\n\t},\r\n\tw3cx11() {\r\n\t\treturn Object.keys(chroma.w3cx11).map(x => chroma(x))\r\n\t},\r\n\t_50shadesOfGrey() {\r\n\t\treturn Array.from({ length: 52 }, (_, i) => chroma.hsl(0, 0, i / 51))\r\n\t},\r\n\tks() {\r\n\t\tconst result = []\r\n\t\tfor (let i = 1000; i <= 40000; i += 100) {\r\n\t\t\tresult.push(chroma.kelvin(i))\r\n\t\t}\r\n\t\treturn result\r\n\t},\r\n\tcubehelix() {\r\n\t\treturn chroma.scale(chroma.cubehelix()).colors(100, false) as Color[]\r\n\t},\r\n\tscalePaired() {\r\n\t\treturn chroma.scale(\"Paired\").colors(100, false) as Color[]\r\n\t},\r\n\thslCylinder() {\r\n\t\tconst X = 5\r\n\t\tconst Y = 10\r\n\t\tconst R = 90\r\n\t\tconst result = []\r\n\t\tfor (let r = 0; r < R; r++) {\r\n\t\t\tfor (let x = 0; x < X; x++) {\r\n\t\t\t\tfor (let y = 0; y < Y; y++) {\r\n\t\t\t\t\tresult.push(chroma.hsl((r / R) * 360, x / (X - 1), lerp(0.01, 0.99, y / (Y - 1))))\r\n\t\t\t\t}\r\n\t\t\t\t// result.push(chroma.hsl((r / R) * 360, x / X, 0))\r\n\t\t\t\t// result.push(chroma.hsl((r / R) * 360, x / X, 1))\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t},\r\n\tcolors2() {\r\n\t\tconsole.log(ntc.names)\r\n\t\treturn []\r\n\t\treturn names.map(([hex, _name, _shade]) => {\r\n\t\t\tconst c: X = chroma(hex) as X\r\n\t\t\t// c.displayColor = chroma(shade.toLowerCase())\r\n\t\t\t// c.displayColor = chroma(c.shade())\r\n\t\t\treturn c\r\n\t\t})\r\n\t},\r\n\tl05() {\r\n\t\tconst outerRingCount = 1200\r\n\t\tconst X = Math.round(outerRingCount / (2 * Math.PI))\r\n\t\tconst result = []\r\n\t\tfor (let x = 0; x < X; x++) {\r\n\t\t\tconst s = x / (X - 1)\r\n\t\t\tconst count = Math.round(s * outerRingCount)\r\n\t\t\tfor (let r = 0; r < count; r++) {\r\n\t\t\t\tresult.push(chroma.hsl((r / count) * 360, s, 0.5))\r\n\t\t\t}\r\n\t\t}\r\n\t\t// const X = 50\r\n\t\t// const R = 90\r\n\t\t// const result = []\r\n\t\t// for (let r = 0; r < R; r++) {\r\n\t\t// \tfor (let x = 0; x < X; x++) {\r\n\t\t// \t\tconst a = (x + r / 2) / 100\r\n\t\t// \t\tconst b = (r * Math.sqrt(3)) / 2\r\n\t\t// \t\tconst p = V(a, b)\r\n\t\t// \t\tresult.push(chroma.hsl((r / R) * 360, x / (X - 1), 0.5))\r\n\t\t// \t}\r\n\t\t// }\r\n\t\treturn result\r\n\t},\r\n}\r\nfunction rgbCube(r = 16) {\r\n\treturn Mesh.box(r, r, r).vertices.map(({ x, y, z }) => chroma.gl(x, y, z, 1))\r\n}\r\n\r\nfunction fillArray(length: int, value: {}) {\r\n\tconst result = new Array(length)\r\n\tlet i = length\r\n\twhile (i--) {\r\n\t\tresult[i] = value\r\n\t}\r\n\treturn result\r\n}\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { Component, HTMLAttributes, ReactNode } from \"react\"\r\nimport classNames from \"classnames\"\r\n\r\nexport interface PickerItem<T extends string> {\r\n\tvalue: T\r\n\tchildren?: ReactNode\r\n\ttitle: string\r\n}\r\ninterface PickerProps<T extends string> extends HTMLAttributes<HTMLDivElement> {\r\n\tvalue: T\r\n\tonchange: (value: T) => void\r\n\titems: PickerItem<T>[]\r\n\tid: string\r\n\ttitle: string\r\n}\r\nexport class Picker<T extends string> extends Component<PickerProps<T>> {\r\n\tconstructor(props: PickerProps<T>) {\r\n\t\tsuper(props)\r\n\t}\r\n\tpublic render(): any {\r\n\t\tconst { value, title, items, id, onchange, ...htmlAttributes } = this.props\r\n\t\treturn (\r\n\t\t\t<div {...htmlAttributes} id={id}>\r\n\t\t\t\t<div className=\"title\">{title}</div>\r\n\t\t\t\t{items.map(({ value: ovalue, title, children }) => (\r\n\t\t\t\t\t<label className={classNames(\"picker-option\", ovalue === value && \"selected\")} key={ovalue}>\r\n\t\t\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tvalue={ovalue}\r\n\t\t\t\t\t\t\t\tname={id}\r\n\t\t\t\t\t\t\t\tchecked={ovalue == value}\r\n\t\t\t\t\t\t\t\tonChange={e => e.target.checked && onchange(e.target.value as any)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// export function PickerOption({\r\n// \tonClick,\r\n// \ttitle,\r\n// \tchildren,\r\n// \tselected,\r\n// \tname,\r\n// \tvalue,\r\n// }: {\r\n// \tname: string\r\n// \tvalue: string\r\n// \tonClick: () => void\r\n// \ttitle: string\r\n// \tchildren?: ReactNode\r\n// \tselected: boolean\r\n// }) {\r\n// \treturn (\r\n// \t\t<label className={classNames(\"picker-option\", selected && \"selected\")} onClick={onClick} key={value}>\r\n// \t\t\t<div className=\"title\">{title}</div>\r\n// \t\t\t{children}\r\n// \t\t\t<input type=\"radio\" value={value} name={name} id={name + value} />\r\n// \t\t</label>\r\n// \t)\r\n// }\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.colorsExtended = {\r\n    Acadia: 0x35312c,\r\n    Acapulco: 0x75aa94,\r\n    \"Aero Blue\": 0xc0e8d5,\r\n    Affair: 0x745085,\r\n    \"Afghan Tan\": 0x905e26,\r\n    \"Air Force Blue\": 0x5d8aa8,\r\n    Akaroa: 0xbeb29a,\r\n    Alabaster: 0xf2f0e6,\r\n    \"Albescent White\": 0xe1dacb,\r\n    \"Alert Tan\": 0x954e2c,\r\n    \"Alice Blue\": 0xf0f8ff,\r\n    Alizarin: 0xe32636,\r\n    Allports: 0x1f6a7d,\r\n    Almond: 0xeed9c4,\r\n    \"Almond Frost\": 0x9a8678,\r\n    Alpine: 0xad8a3b,\r\n    Alto: 0xcdc6c5,\r\n    Aluminium: 0x848789,\r\n    Amaranth: 0xe52b50,\r\n    Amazon: 0x387b54,\r\n    Amber: 0xffbf00,\r\n    Americano: 0x8a7d72,\r\n    Amethyst: 0x9966cc,\r\n    \"Amethyst Smoke\": 0x95879c,\r\n    Amour: 0xf5e6ea,\r\n    Amulet: 0x7d9d72,\r\n    Anakiwa: 0x8cceea,\r\n    \"Antique Brass\": 0x6c461f,\r\n    \"Antique White\": 0xfaebd7,\r\n    Anzac: 0xc68e3f,\r\n    Apache: 0xd3a95c,\r\n    Apple: 0x66b348,\r\n    \"Apple Blossom\": 0xa95249,\r\n    \"Apple Green\": 0xdeeadc,\r\n    Apricot: 0xfbceb1,\r\n    \"Apricot White\": 0xf7f0db,\r\n    \"Aqua Haze\": 0xd9ddd5,\r\n    \"Aqua Spring\": 0xe8f3e8,\r\n    \"Aqua Squeeze\": 0xdbe4dc,\r\n    Arapawa: 0x274a5d,\r\n    Armadillo: 0x484a46,\r\n    \"Army green\": 0x4b5320,\r\n    Arrowtown: 0x827a67,\r\n    Arsenic: 0x3b444b,\r\n    Ash: 0xbebaa7,\r\n    Asparagus: 0x7ba05b,\r\n    Astra: 0xedd5a6,\r\n    Astral: 0x376f89,\r\n    Astronaut: 0x445172,\r\n    \"Astronaut Blue\": 0x214559,\r\n    \"Athens Grey\": 0xdcdddd,\r\n    \"Aths Special\": 0xd5cbb2,\r\n    Atlantis: 0x9cd03b,\r\n    Atoll: 0x2b797a,\r\n    Atomic: 0x3d4b52,\r\n    \"Atomic Tangerine\": 0xff9966,\r\n    \"Au Chico\": 0x9e6759,\r\n    Aubergine: 0x372528,\r\n    Auburn: 0x712f2c,\r\n    \"Australian Mint\": 0xeff8aa,\r\n    Avocado: 0x95986b,\r\n    Axolotl: 0x63775a,\r\n    Azalea: 0xf9c0c4,\r\n    Aztec: 0x293432,\r\n    \"Baby Blue\": 0x6fffff,\r\n    \"Bahama Blue\": 0x25597f,\r\n    Bahia: 0xa9c01c,\r\n    \"Baker's Chocolate\": 0x5c3317,\r\n    \"Bali Hai\": 0x849ca9,\r\n    \"Baltic Sea\": 0x3c3d3e,\r\n    \"Banana Mania\": 0xfbe7b2,\r\n    Bandicoot: 0x878466,\r\n    Barberry: 0xd2c61f,\r\n    \"Barley Corn\": 0xb6935c,\r\n    \"Barley White\": 0xf7e5b7,\r\n    Barossa: 0x452e39,\r\n    Bastille: 0x2c2c32,\r\n    \"Battleship Grey\": 0x51574f,\r\n    \"Bay Leaf\": 0x7bb18d,\r\n    \"Bay Of Many\": 0x353e64,\r\n    Bazaar: 0x8f7777,\r\n    \"Beauty Bush\": 0xebb9b3,\r\n    Beaver: 0x926f5b,\r\n    Beeswax: 0xe9d7ab,\r\n    Bermuda: 0x86d2c1,\r\n    \"Bermuda Grey\": 0x6f8c9f,\r\n    \"Beryl Green\": 0xbcbfa8,\r\n    Bianca: 0xf4efe0,\r\n    \"Big Stone\": 0x334046,\r\n    Bilbao: 0x3e8027,\r\n    \"Biloba Flower\": 0xae99d2,\r\n    Birch: 0x3f3726,\r\n    \"Bird Flower\": 0xd0c117,\r\n    Biscay: 0x2f3c53,\r\n    Bismark: 0x486c7a,\r\n    \"Bison Hide\": 0xb5ac94,\r\n    Bistre: 0x3d2b1f,\r\n    Bitter: 0x88896c,\r\n    \"Bitter Lemon\": 0xd2db32,\r\n    Bittersweet: 0xfe6f5e,\r\n    Bizarre: 0xe7d2c8,\r\n    \"Black Bean\": 0x232e26,\r\n    \"Black Forest\": 0x2c3227,\r\n    \"Black Haze\": 0xe0ded7,\r\n    \"Black Magic\": 0x332c22,\r\n    \"Black Marlin\": 0x383740,\r\n    \"Black Pearl\": 0x1e272c,\r\n    \"Black Rock\": 0x2c2d3c,\r\n    \"Black Rose\": 0x532934,\r\n    \"Black Russian\": 0x24252b,\r\n    \"Black Squeeze\": 0xe5e6df,\r\n    \"Black White\": 0xe5e4db,\r\n    Blackberry: 0x43182f,\r\n    Blackcurrant: 0x2e183b,\r\n    Blanc: 0xd9d0c1,\r\n    \"Blanched Almond\": 0xffebcd,\r\n    \"Bleach White\": 0xebe1ce,\r\n    \"Blizzard Blue\": 0xa3e3ed,\r\n    Blossom: 0xdfb1b6,\r\n    \"Blue Bayoux\": 0x62777e,\r\n    \"Blue Bell\": 0x9999cc,\r\n    \"Blue Chalk\": 0xe3d6e9,\r\n    \"Blue Charcoal\": 0x262b2f,\r\n    \"Blue Chill\": 0x408f90,\r\n    \"Blue Diamond\": 0x4b2d72,\r\n    \"Blue Dianne\": 0x35514f,\r\n    \"Blue Gem\": 0x4b3c8e,\r\n    \"Blue Haze\": 0xbdbace,\r\n    \"Blue Lagoon\": 0x00626f,\r\n    \"Blue Marguerite\": 0x6a5bb1,\r\n    \"Blue Romance\": 0xd8f0d2,\r\n    \"Blue Smoke\": 0x78857a,\r\n    \"Blue Stone\": 0x166461,\r\n    \"Blue Violet\": 0x8a2be2,\r\n    \"Blue Whale\": 0x1e3442,\r\n    \"Blue Zodiac\": 0x3c4354,\r\n    Blumine: 0x305c71,\r\n    Blush: 0xb55067,\r\n    \"Bokara Grey\": 0x2a2725,\r\n    Bole: 0x79443b,\r\n    Bombay: 0xaeaead,\r\n    \"Bon Jour\": 0xdfd7d2,\r\n    \"Bondi Blue\": 0x0095b6,\r\n    Bone: 0xdbc2ab,\r\n    Bordeaux: 0x4c1c24,\r\n    Bossanova: 0x4c3d4e,\r\n    \"Boston Blue\": 0x438eac,\r\n    Botticelli: 0x92acb4,\r\n    \"Bottle Green\": 0x254636,\r\n    Boulder: 0x7c817c,\r\n    Bouquet: 0xa78199,\r\n    Bourbon: 0xaf6c3e,\r\n    Bracken: 0x5b3d27,\r\n    Brandy: 0xdcb68a,\r\n    \"Brandy Punch\": 0xc07c40,\r\n    \"Brandy Rose\": 0xb6857a,\r\n    Brass: 0xb5a642,\r\n    \"Breaker Bay\": 0x517b78,\r\n    \"Brick Red\": 0xc62d42,\r\n    \"Bridal Heath\": 0xf8ebdd,\r\n    Bridesmaid: 0xfae6df,\r\n    \"Bright Green\": 0x66ff00,\r\n    \"Bright Grey\": 0x57595d,\r\n    \"Bright Red\": 0x922a31,\r\n    \"Bright Sun\": 0xecbd2c,\r\n    \"Bright Turquoise\": 0x08e8de,\r\n    \"Brilliant Rose\": 0xff55a3,\r\n    \"Brink Pink\": 0xfb607f,\r\n    \"British Racing Green\": 0x004225,\r\n    Bronco: 0xa79781,\r\n    Bronze: 0xcd7f32,\r\n    \"Bronze Olive\": 0x584c25,\r\n    Bronzetone: 0x434c28,\r\n    Broom: 0xeecc24,\r\n    \"Brown Bramble\": 0x53331e,\r\n    \"Brown Derby\": 0x594537,\r\n    \"Brown Pod\": 0x3c241b,\r\n    Bubbles: 0xe6f2ea,\r\n    Buccaneer: 0x6e5150,\r\n    Bud: 0xa5a88f,\r\n    \"Buddha Gold\": 0xbc9b1b,\r\n    Buff: 0xf0dc82,\r\n    \"Bulgarian Rose\": 0x482427,\r\n    \"Bull Shot\": 0x75442b,\r\n    Bunker: 0x292c2f,\r\n    Bunting: 0x2b3449,\r\n    Burgundy: 0x800020,\r\n    \"Burly Wood\": 0xdeb887,\r\n    Burnham: 0x234537,\r\n    \"Burning Sand\": 0xd08363,\r\n    \"Burnt Crimson\": 0x582124,\r\n    \"Burnt Orange\": 0xff7034,\r\n    \"Burnt Sienna\": 0xe97451,\r\n    \"Burnt Umber\": 0x8a3324,\r\n    Buttercup: 0xda9429,\r\n    \"Buttered Rum\": 0x9d702e,\r\n    \"Butterfly Bush\": 0x68578c,\r\n    Buttermilk: 0xf6e0a4,\r\n    \"Buttery White\": 0xf1ebda,\r\n    \"Cab Sav\": 0x4a2e32,\r\n    Cabaret: 0xcd526c,\r\n    \"Cabbage Pont\": 0x4c5544,\r\n    Cactus: 0x5b6f55,\r\n    \"Cadet Blue\": 0x5f9ea0,\r\n    Cadillac: 0x984961,\r\n    \"Cafe Royale\": 0x6a4928,\r\n    Calico: 0xd5b185,\r\n    California: 0xe98c3a,\r\n    Calypso: 0x3d7188,\r\n    Camarone: 0x206937,\r\n    Camelot: 0x803a4b,\r\n    Cameo: 0xcca483,\r\n    Camouflage: 0x4f4d32,\r\n    \"Camouflage Green\": 0x78866b,\r\n    \"Can Can\": 0xd08a9b,\r\n    Canary: 0xffff99,\r\n    \"Cannon Pink\": 0x8e5164,\r\n    \"Cape Cod\": 0x4e5552,\r\n    \"Cape Honey\": 0xfee0a5,\r\n    \"Cape Palliser\": 0x75482f,\r\n    Caper: 0xafc182,\r\n    \"Caput Mortuum\": 0x592720,\r\n    Caramel: 0xffd59a,\r\n    Cararra: 0xebe5d5,\r\n    \"Cardin Green\": 0x1b3427,\r\n    Cardinal: 0xc41e3a,\r\n    \"Careys Pink\": 0xc99aa0,\r\n    \"Caribbean Green\": 0x00cc99,\r\n    Carissma: 0xe68095,\r\n    Carla: 0xf5f9cb,\r\n    Carmine: 0x960018,\r\n    \"Carnaby Tan\": 0x5b3a24,\r\n    \"Carnation Pink\": 0xffa6c9,\r\n    \"Carousel Pink\": 0xf8dbe0,\r\n    \"Carrot Orange\": 0xed9121,\r\n    Casablanca: 0xf0b253,\r\n    Casal: 0x3f545a,\r\n    Cascade: 0x8ca8a0,\r\n    Cashmere: 0xd1b399,\r\n    Casper: 0xaab5b8,\r\n    Castro: 0x44232f,\r\n    \"Catalina Blue\": 0x273c5a,\r\n    \"Catskill White\": 0xe0e4dc,\r\n    \"Cavern Pink\": 0xe0b8b1,\r\n    \"Ce Soir\": 0x9271a7,\r\n    Cedar: 0x463430,\r\n    Celadon: 0xace1af,\r\n    Celery: 0xb4c04c,\r\n    Celeste: 0xd2d2c0,\r\n    Cello: 0x3a4e5f,\r\n    Celtic: 0x2b3f36,\r\n    Cement: 0x857158,\r\n    Cerise: 0xde3163,\r\n    Cerulean: 0x007ba7,\r\n    \"Cerulean Blue\": 0x2a52be,\r\n    Chablis: 0xfde9e0,\r\n    \"Chalet Green\": 0x5a6e41,\r\n    Chalky: 0xdfc281,\r\n    Chambray: 0x475877,\r\n    Chamois: 0xe8cd9a,\r\n    Champagne: 0xeed9b6,\r\n    Chantilly: 0xedb8c7,\r\n    Charade: 0x394043,\r\n    Charcoal: 0x464646,\r\n    Chardon: 0xf8eadf,\r\n    Chardonnay: 0xffc878,\r\n    Charlotte: 0xa4dce6,\r\n    Charm: 0xd0748b,\r\n    \"Chartreuse Yellow\": 0xdfff00,\r\n    \"Chateau Green\": 0x419f59,\r\n    Chatelle: 0xb3abb6,\r\n    \"Chathams Blue\": 0x2c5971,\r\n    \"Chelsea Cucumber\": 0x88a95b,\r\n    \"Chelsea Gem\": 0x95532f,\r\n    Chenin: 0xdec371,\r\n    Cherokee: 0xf5cd82,\r\n    \"Cherry Pie\": 0x372d52,\r\n    Cherub: 0xf5d7dc,\r\n    Chestnut: 0xb94e48,\r\n    \"Chetwode Blue\": 0x666fb4,\r\n    Chicago: 0x5b5d56,\r\n    Chiffon: 0xf0f5bb,\r\n    \"Chilean Fire\": 0xd05e34,\r\n    \"Chilean Heath\": 0xf9f7de,\r\n    \"China Ivory\": 0xfbf3d3,\r\n    Chino: 0xb8ad8a,\r\n    Chinook: 0x9dd3a8,\r\n    Christalle: 0x382161,\r\n    Christi: 0x71a91d,\r\n    Christine: 0xbf652e,\r\n    \"Chrome White\": 0xcac7b7,\r\n    Cigar: 0x7d4e38,\r\n    Cinder: 0x242a2e,\r\n    Cinderella: 0xfbd7cc,\r\n    Cinnabar: 0xe34234,\r\n    Cioccolato: 0x5d3b2e,\r\n    Citron: 0x8e9a21,\r\n    Citrus: 0x9fb70a,\r\n    \"Clam Shell\": 0xd2b3a9,\r\n    Claret: 0x6e2233,\r\n    \"Classic Rose\": 0xf4c8db,\r\n    \"Clay Creek\": 0x897e59,\r\n    \"Clear Day\": 0xdfefea,\r\n    Clinker: 0x463623,\r\n    Cloud: 0xc2bcb1,\r\n    \"Cloud Burst\": 0x353e4f,\r\n    Cloudy: 0xb0a99f,\r\n    Clover: 0x47562f,\r\n    Cobalt: 0x0047ab,\r\n    \"Cocoa Bean\": 0x4f3835,\r\n    \"Cocoa Brown\": 0x35281e,\r\n    \"Coconut Cream\": 0xe1dabb,\r\n    \"Cod Grey\": 0x2d3032,\r\n    Coffee: 0x726751,\r\n    \"Coffee Bean\": 0x362d26,\r\n    Cognac: 0x9a463d,\r\n    Cola: 0x3c2f23,\r\n    \"Cold Purple\": 0x9d8abf,\r\n    \"Cold Turkey\": 0xcab5b2,\r\n    \"Columbia Blue\": 0x9bddff,\r\n    Comet: 0x636373,\r\n    Como: 0x4c785c,\r\n    Conch: 0xa0b1ae,\r\n    Concord: 0x827f79,\r\n    Concrete: 0xd2d1cd,\r\n    Confetti: 0xddcb46,\r\n    \"Congo Brown\": 0x654d49,\r\n    Conifer: 0xb1dd52,\r\n    Contessa: 0xc16f68,\r\n    Copper: 0xda8a67,\r\n    \"Copper Canyon\": 0x77422c,\r\n    \"Copper Rose\": 0x996666,\r\n    \"Copper Rust\": 0x95524c,\r\n    \"Coral Candy\": 0xf5d0c9,\r\n    \"Coral Red\": 0xff4040,\r\n    \"Coral Tree\": 0xab6e67,\r\n    Corduroy: 0x404d49,\r\n    Coriander: 0xbbb58d,\r\n    Cork: 0x5a4c42,\r\n    Corn: 0xfbec5d,\r\n    \"Corn Field\": 0xf8f3c4,\r\n    \"Corn Flower Blue\": 0x42426f,\r\n    \"Corn Harvest\": 0x8d702a,\r\n    \"Corn Silk\": 0xfff8dc,\r\n    \"Cornflower Blue\": 0x6495ed,\r\n    Corvette: 0xe9ba81,\r\n    Cosmic: 0x794d60,\r\n    \"Cosmic Latte\": 0xe1f8e7,\r\n    Cosmos: 0xfcd5cf,\r\n    \"Costa Del Sol\": 0x625d2a,\r\n    \"Cotton Candy\": 0xffb7d5,\r\n    \"Cotton Seed\": 0xbfbaaf,\r\n    \"County Green\": 0x1b4b35,\r\n    Cowboy: 0x443736,\r\n    \"Crab Apple\": 0x87382f,\r\n    Crail: 0xa65648,\r\n    Cranberry: 0xdb5079,\r\n    \"Crater Brown\": 0x4d3e3c,\r\n    Cream: 0xfffdd0,\r\n    \"Cream Brulee\": 0xffe39b,\r\n    \"Cream Can\": 0xeec051,\r\n    Creole: 0x393227,\r\n    Crete: 0x77712b,\r\n    Crocodile: 0x706950,\r\n    \"Crown Of Thorns\": 0x763c33,\r\n    Cruise: 0xb4e2d5,\r\n    Crusoe: 0x165b31,\r\n    Crusta: 0xf38653,\r\n    Cumin: 0x784430,\r\n    Cumulus: 0xf5f4c1,\r\n    Cupid: 0xf5b2c5,\r\n    \"Curious Blue\": 0x3d85b8,\r\n    \"Cutty Sark\": 0x5c8173,\r\n    Cyprus: 0x0f4645,\r\n    \"Dairy Cream\": 0xedd2a4,\r\n    \"Daisy Bush\": 0x5b3e90,\r\n    Dallas: 0x664a2d,\r\n    Dandelion: 0xfed85d,\r\n    Danube: 0x5b89c0,\r\n    \"Dark Blue\": 0x00008b,\r\n    \"Dark Brown\": 0x654321,\r\n    \"Dark Cerulean\": 0x08457e,\r\n    \"Dark Chestnut\": 0x986960,\r\n    \"Dark Coral\": 0xcd5b45,\r\n    \"Dark Cyan\": 0x008b8b,\r\n    \"Dark Goldenrod\": 0xb8860b,\r\n    \"Dark Gray\": 0xa9a9a9,\r\n    \"Dark Green\": 0x013220,\r\n    \"Dark Green Copper\": 0x4a766e,\r\n    \"Dark Khaki\": 0xbdb76b,\r\n    \"Dark Magenta\": 0x8b008b,\r\n    \"Dark Olive Green\": 0x556b2f,\r\n    \"Dark Orange\": 0xff8c00,\r\n    \"Dark Orchid\": 0x9932cc,\r\n    \"Dark Pastel Green\": 0x03c03c,\r\n    \"Dark Pink\": 0xe75480,\r\n    \"Dark Purple\": 0x871f78,\r\n    \"Dark Red\": 0x8b0000,\r\n    \"Dark Rum\": 0x45362b,\r\n    \"Dark Salmon\": 0xe9967a,\r\n    \"Dark Sea Green\": 0x8fbc8f,\r\n    \"Dark Slate\": 0x465352,\r\n    \"Dark Slate Blue\": 0x483d8b,\r\n    \"Dark Slate Grey\": 0x2f4f4f,\r\n    \"Dark Spring Green\": 0x177245,\r\n    \"Dark Tan\": 0x97694f,\r\n    \"Dark Tangerine\": 0xffa812,\r\n    \"Dark Turquoise\": 0x00ced1,\r\n    \"Dark Violet\": 0x9400d3,\r\n    \"Dark Wood\": 0x855e42,\r\n    \"Davy's Grey\": 0x788878,\r\n    Dawn: 0x9f9d91,\r\n    \"Dawn Pink\": 0xe6d6cd,\r\n    \"De York\": 0x85ca87,\r\n    Deco: 0xcccf82,\r\n    \"Deep Blush\": 0xe36f8a,\r\n    \"Deep Bronze\": 0x51412d,\r\n    \"Deep Cerise\": 0xda3287,\r\n    \"Deep Fir\": 0x193925,\r\n    \"Deep Koamaru\": 0x343467,\r\n    \"Deep Lilac\": 0x9955bb,\r\n    \"Deep Magenta\": 0xcc00cc,\r\n    \"Deep Pink\": 0xff1493,\r\n    \"Deep Sea\": 0x167e65,\r\n    \"Deep Sky Blue\": 0x00bfff,\r\n    \"Deep Teal\": 0x19443c,\r\n    \"Del Rio\": 0xb5998e,\r\n    Dell: 0x486531,\r\n    Delta: 0x999b95,\r\n    Deluge: 0x8272a4,\r\n    Denim: 0x1560bd,\r\n    Derby: 0xf9e4c6,\r\n    Desert: 0xa15f3b,\r\n    \"Desert Sand\": 0xedc9af,\r\n    \"Desert Storm\": 0xede7e0,\r\n    Dew: 0xe7f2e9,\r\n    Diesel: 0x322c2b,\r\n    \"Dim Gray\": 0x696969,\r\n    Dingley: 0x607c47,\r\n    Disco: 0x892d4f,\r\n    Dixie: 0xcd8431,\r\n    \"Dodger Blue\": 0x1e90ff,\r\n    Dolly: 0xf5f171,\r\n    Dolphin: 0x6a6873,\r\n    Domino: 0x6c5b4c,\r\n    \"Don Juan\": 0x5a4f51,\r\n    \"Donkey Brown\": 0x816e5c,\r\n    Dorado: 0x6e5f56,\r\n    \"Double Colonial White\": 0xe4cf99,\r\n    \"Double Pearl Lusta\": 0xe9dcbe,\r\n    \"Double Spanish White\": 0xd2c3a3,\r\n    \"Dove Grey\": 0x777672,\r\n    Downy: 0x6fd2be,\r\n    Drover: 0xfbeb9b,\r\n    Dune: 0x514f4a,\r\n    \"Dust Storm\": 0xe5cac0,\r\n    \"Dusty Grey\": 0xac9b9b,\r\n    \"Dutch White\": 0xf0dfbb,\r\n    Eagle: 0xb0ac94,\r\n    \"Earls Green\": 0xb8a722,\r\n    \"Early Dawn\": 0xfbf2db,\r\n    \"East Bay\": 0x47526e,\r\n    \"East Side\": 0xaa8cbc,\r\n    \"Eastern Blue\": 0x00879f,\r\n    Ebb: 0xe6d8d4,\r\n    Ebony: 0x313337,\r\n    \"Ebony Clay\": 0x323438,\r\n    \"Echo Blue\": 0xa4afcd,\r\n    Eclipse: 0x3f3939,\r\n    Ecru: 0xc2b280,\r\n    \"Ecru White\": 0xd6d1c0,\r\n    Ecstasy: 0xc96138,\r\n    Eden: 0x266255,\r\n    Edgewater: 0xc1d8c5,\r\n    Edward: 0x97a49a,\r\n    \"Egg Sour\": 0xf9e4c5,\r\n    Eggplant: 0x990066,\r\n    \"Egyptian Blue\": 0x1034a6,\r\n    \"El Paso\": 0x39392c,\r\n    \"El Salva\": 0x8f4e45,\r\n    \"Electric Blue\": 0x7df9ff,\r\n    \"Electric Indigo\": 0x6600ff,\r\n    \"Electric Lime\": 0xccff00,\r\n    \"Electric Purple\": 0xbf00ff,\r\n    Elephant: 0x243640,\r\n    \"Elf Green\": 0x1b8a6b,\r\n    Elm: 0x297b76,\r\n    Emerald: 0x50c878,\r\n    Eminence: 0x6e3974,\r\n    Emperor: 0x50494a,\r\n    Empress: 0x7c7173,\r\n    Endeavour: 0x29598b,\r\n    \"Energy Yellow\": 0xf5d752,\r\n    \"English Holly\": 0x274234,\r\n    Envy: 0x8ba58f,\r\n    Equator: 0xdab160,\r\n    Espresso: 0x4e312d,\r\n    Eternity: 0x2d2f28,\r\n    Eucalyptus: 0x329760,\r\n    Eunry: 0xcda59c,\r\n    \"Evening Sea\": 0x26604f,\r\n    Everglade: 0x264334,\r\n    \"Fair Pink\": 0xf3e5dc,\r\n    Falcon: 0x6e5a5b,\r\n    Fallow: 0xc19a6b,\r\n    \"Falu Red\": 0x801818,\r\n    Fantasy: 0xf2e6dd,\r\n    Fedora: 0x625665,\r\n    Feijoa: 0xa5d785,\r\n    Feldgrau: 0x4d5d53,\r\n    Feldspar: 0xd19275,\r\n    Fern: 0x63b76c,\r\n    \"Fern Green\": 0x4f7942,\r\n    Ferra: 0x876a68,\r\n    Festival: 0xeacc4a,\r\n    Feta: 0xdbe0d0,\r\n    \"Fiery Orange\": 0xb1592f,\r\n    \"Fiji Green\": 0x636f22,\r\n    Finch: 0x75785a,\r\n    Finlandia: 0x61755b,\r\n    Finn: 0x694554,\r\n    Fiord: 0x4b5a62,\r\n    Fire: 0x8f3f2a,\r\n    \"Fire Brick\": 0xb22222,\r\n    \"Fire Bush\": 0xe09842,\r\n    \"Fire Engine Red\": 0xce1620,\r\n    Firefly: 0x314643,\r\n    \"Flame Pea\": 0xbe5c48,\r\n    \"Flame Red\": 0x86282e,\r\n    Flamenco: 0xea8645,\r\n    Flamingo: 0xe1634f,\r\n    Flax: 0xeedc82,\r\n    Flint: 0x716e61,\r\n    Flirt: 0x7a2e4d,\r\n    \"Floral White\": 0xfffaf0,\r\n    Foam: 0xd0eae8,\r\n    Fog: 0xd5c7e8,\r\n    \"Foggy Grey\": 0xa7a69d,\r\n    \"Forest Green\": 0x228b22,\r\n    \"Forget Me Not\": 0xfdefdb,\r\n    \"Fountain Blue\": 0x65adb2,\r\n    Frangipani: 0xffd7a0,\r\n    \"Free Speech Aquamarine\": 0x029d74,\r\n    \"Free Speech Blue\": 0x4156c5,\r\n    \"Free Speech Green\": 0x09f911,\r\n    \"Free Speech Magenta\": 0xe35bd8,\r\n    \"Free Speech Red\": 0xc00000,\r\n    \"French Grey\": 0xbfbdc1,\r\n    \"French Lilac\": 0xdeb7d9,\r\n    \"French Pass\": 0xa4d2e0,\r\n    \"French Rose\": 0xf64a8a,\r\n    \"Friar Grey\": 0x86837a,\r\n    \"Fringy Flower\": 0xb4e1bb,\r\n    Froly: 0xe56d75,\r\n    Frost: 0xe1e4c5,\r\n    \"Frosted Mint\": 0xe2f2e4,\r\n    Frostee: 0xdbe5d2,\r\n    \"Fruit Salad\": 0x4ba351,\r\n    \"Fuchsia Pink\": 0xff77ff,\r\n    Fuego: 0xc2d62e,\r\n    \"Fuel Yellow\": 0xd19033,\r\n    \"Fun Blue\": 0x335083,\r\n    \"Fun Green\": 0x15633d,\r\n    \"Fuscous Grey\": 0x3c3b3c,\r\n    \"Fuzzy Wuzzy Brown\": 0xc45655,\r\n    \"Gable Green\": 0x2c4641,\r\n    Gallery: 0xdcd7d1,\r\n    Galliano: 0xd8a723,\r\n    Gamboge: 0xe49b0f,\r\n    Geebung: 0xc5832e,\r\n    Genoa: 0x31796d,\r\n    Geraldine: 0xe77b75,\r\n    Geyser: 0xcbd0cf,\r\n    Ghost: 0xc0bfc7,\r\n    \"Ghost White\": 0xf8f8ff,\r\n    Gigas: 0x564786,\r\n    Gimblet: 0xb9ad61,\r\n    Gin: 0xd9dfcd,\r\n    \"Gin Fizz\": 0xf8eaca,\r\n    Givry: 0xebd4ae,\r\n    Glacier: 0x78b1bf,\r\n    \"Glade Green\": 0x5f8151,\r\n    \"Go Ben\": 0x786e4c,\r\n    Goblin: 0x34533d,\r\n    \"Gold Drop\": 0xd56c30,\r\n    \"Gold Tips\": 0xe2b227,\r\n    \"Golden Bell\": 0xca8136,\r\n    \"Golden Brown\": 0x996515,\r\n    \"Golden Dream\": 0xf1cc2b,\r\n    \"Golden Fizz\": 0xebde31,\r\n    \"Golden Glow\": 0xf9d77e,\r\n    \"Golden Poppy\": 0xfcc200,\r\n    \"Golden Sand\": 0xeace6a,\r\n    \"Golden Tainoi\": 0xffc152,\r\n    \"Golden Yellow\": 0xffdf00,\r\n    Gondola: 0x373332,\r\n    \"Gordons Green\": 0x29332b,\r\n    Gorse: 0xfde336,\r\n    Gossamer: 0x399f86,\r\n    Gossip: 0x9fd385,\r\n    Gothic: 0x698890,\r\n    \"Governor Bay\": 0x51559b,\r\n    \"Grain Brown\": 0xcab8a2,\r\n    Grandis: 0xffcd73,\r\n    \"Granite Green\": 0x8b8265,\r\n    \"Granny Apple\": 0xc5e7cd,\r\n    \"Granny Smith\": 0x7b948c,\r\n    \"Granny Smith Apple\": 0x9de093,\r\n    Grape: 0x413d4b,\r\n    Graphite: 0x383428,\r\n    Gravel: 0x4a4b46,\r\n    \"Green House\": 0x3e6334,\r\n    \"Green Kelp\": 0x393d2a,\r\n    \"Green Leaf\": 0x526b2d,\r\n    \"Green Mist\": 0xbfc298,\r\n    \"Green Pea\": 0x266242,\r\n    \"Green Smoke\": 0x9ca664,\r\n    \"Green Spring\": 0xa9af99,\r\n    \"Green Vogue\": 0x23414e,\r\n    \"Green Waterloo\": 0x2c2d24,\r\n    \"Green White\": 0xdeddcb,\r\n    \"Green Yellow\": 0xadff2f,\r\n    Grenadier: 0xc14d36,\r\n    \"Grey Chateau\": 0x9fa3a7,\r\n    \"Grey Nickel\": 0xbdbaae,\r\n    \"Grey Nurse\": 0xd1d3cc,\r\n    \"Grey Olive\": 0xa19a7f,\r\n    \"Grey Suit\": 0x9391a0,\r\n    \"Grey-Asparagus\": 0x465945,\r\n    \"Guardsman Red\": 0x952e31,\r\n    \"Gulf Blue\": 0x343f5c,\r\n    \"Gulf Stream\": 0x74b2a8,\r\n    \"Gull Grey\": 0xa4adb0,\r\n    \"Gum Leaf\": 0xacc9b2,\r\n    Gumbo: 0x718f8a,\r\n    \"Gun Powder\": 0x484753,\r\n    Gunmetal: 0x2c3539,\r\n    Gunsmoke: 0x7a7c76,\r\n    Gurkha: 0x989171,\r\n    Hacienda: 0x9e8022,\r\n    \"Hairy Heath\": 0x633528,\r\n    Haiti: 0x2c2a35,\r\n    \"Half And Half\": 0xede7c8,\r\n    \"Half Baked\": 0x558f93,\r\n    \"Half Colonial White\": 0xf2e5bf,\r\n    \"Half Dutch White\": 0xfbf0d6,\r\n    \"Half Pearl Lusta\": 0xf1ead7,\r\n    \"Half Spanish White\": 0xe6dbc7,\r\n    Hampton: 0xe8d4a2,\r\n    \"Han Purple\": 0x5218fa,\r\n    Harlequin: 0x3fff00,\r\n    \"Harley Davidson Orange\": 0xc93413,\r\n    Harp: 0xcbcec0,\r\n    \"Harvest Gold\": 0xeab76a,\r\n    Havana: 0x3b2b2c,\r\n    \"Havelock Blue\": 0x5784c1,\r\n    \"Hawaiian Tan\": 0x99522b,\r\n    \"Hawkes Blue\": 0xd2daed,\r\n    Heath: 0x4f2a2c,\r\n    Heather: 0xaebbc1,\r\n    \"Heathered Grey\": 0x948c7e,\r\n    \"Heavy Metal\": 0x46473e,\r\n    Heliotrope: 0xdf73ff,\r\n    Hemlock: 0x69684b,\r\n    Hemp: 0x987d73,\r\n    Highball: 0x928c3c,\r\n    Highland: 0x7a9461,\r\n    Hillary: 0xa7a07e,\r\n    Himalaya: 0x736330,\r\n    \"Hint Of Green\": 0xdff1d6,\r\n    \"Hint Of Red\": 0xf5efeb,\r\n    \"Hint Of Yellow\": 0xf6f5d7,\r\n    \"Hippie Blue\": 0x49889a,\r\n    \"Hippie Green\": 0x608a5a,\r\n    \"Hippie Pink\": 0xab495c,\r\n    \"Hit Grey\": 0xa1a9a8,\r\n    \"Hit Pink\": 0xfda470,\r\n    \"Hokey Pokey\": 0xbb8e34,\r\n    Hoki: 0x647d86,\r\n    Holly: 0x25342b,\r\n    \"Hollywood Cerise\": 0xf400a1,\r\n    \"Honey Flower\": 0x5c3c6d,\r\n    Honeysuckle: 0xe8ed69,\r\n    Hopbush: 0xcd6d93,\r\n    Horizon: 0x648894,\r\n    \"Horses Neck\": 0x6d562c,\r\n    \"Hot Curry\": 0x815b28,\r\n    \"Hot Magenta\": 0xff00cc,\r\n    \"Hot Pink\": 0xff69b4,\r\n    \"Hot Purple\": 0x4e2e53,\r\n    \"Hot Toddy\": 0xa7752c,\r\n    \"Humming Bird\": 0xceefe4,\r\n    \"Hunter Green\": 0x355e3b,\r\n    Hurricane: 0x8b7e77,\r\n    Husk: 0xb2994b,\r\n    \"Ice Cold\": 0xafe3d6,\r\n    Iceberg: 0xcae1d9,\r\n    Illusion: 0xef95ae,\r\n    \"Inch Worm\": 0xb0e313,\r\n    \"Indian Red\": 0xcd5c5c,\r\n    \"Indian Tan\": 0x4f301f,\r\n    Indochine: 0x9c5b34,\r\n    \"International Klein Blue\": 0x002fa7,\r\n    \"International Orange\": 0xff4f00,\r\n    \"Iris Blue\": 0x03b4c8,\r\n    \"Irish Coffee\": 0x62422b,\r\n    Iron: 0xcbcdcd,\r\n    \"Ironside Grey\": 0x706e66,\r\n    Ironstone: 0x865040,\r\n    \"Islamic Green\": 0x009900,\r\n    \"Island Spice\": 0xf8eddb,\r\n    Jacarta: 0x3d325d,\r\n    \"Jacko Bean\": 0x413628,\r\n    \"Jacksons Purple\": 0x3d3f7d,\r\n    Jade: 0x00a86b,\r\n    Jaffa: 0xe27945,\r\n    \"Jagged Ice\": 0xcae7e2,\r\n    Jagger: 0x3f2e4c,\r\n    Jaguar: 0x29292f,\r\n    Jambalaya: 0x674834,\r\n    \"Japanese Laurel\": 0x2f7532,\r\n    Japonica: 0xce7259,\r\n    Java: 0x259797,\r\n    Jazz: 0x5f2c2f,\r\n    \"Jazzberry Jam\": 0xa50b5e,\r\n    \"Jelly Bean\": 0x44798e,\r\n    \"Jet Stream\": 0xbbd0c9,\r\n    Jewel: 0x136843,\r\n    Jon: 0x463d3e,\r\n    Jonquil: 0xeef293,\r\n    \"Jordy Blue\": 0x7aaae0,\r\n    \"Judge Grey\": 0x5d5346,\r\n    Jumbo: 0x878785,\r\n    \"Jungle Green\": 0x29ab87,\r\n    \"Jungle Mist\": 0xb0c4c4,\r\n    Juniper: 0x74918e,\r\n    \"Just Right\": 0xdcbfac,\r\n    Kabul: 0x6c5e53,\r\n    \"Kaitoke Green\": 0x245336,\r\n    Kangaroo: 0xc5c3b0,\r\n    Karaka: 0x2d2d24,\r\n    Karry: 0xfedcc1,\r\n    \"Kashmir Blue\": 0x576d8e,\r\n    \"Kelly Green\": 0x4cbb17,\r\n    Kelp: 0x4d503c,\r\n    \"Kenyan Copper\": 0x6c322e,\r\n    Keppel: 0x5fb69c,\r\n    Kidnapper: 0xbfc0ab,\r\n    Kilamanjaro: 0x3a3532,\r\n    Killarney: 0x49764f,\r\n    Kimberly: 0x695d87,\r\n    \"Kingfisher Daisy\": 0x583580,\r\n    Kobi: 0xe093ab,\r\n    Kokoda: 0x7b785a,\r\n    Korma: 0x804e2c,\r\n    Koromiko: 0xfeb552,\r\n    Kournikova: 0xf9d054,\r\n    \"La Palma\": 0x428929,\r\n    \"La Rioja\": 0xbac00e,\r\n    \"Las Palmas\": 0xc6da36,\r\n    Laser: 0xc6a95e,\r\n    \"Laser Lemon\": 0xffff66,\r\n    Laurel: 0x6e8d71,\r\n    \"Lavender Blue\": 0xccccff,\r\n    \"Lavender Blush\": 0xfff0f5,\r\n    \"Lavender Grey\": 0xbdbbd7,\r\n    \"Lavender Pink\": 0xfbaed2,\r\n    \"Lavender Rose\": 0xfba0e3,\r\n    \"Lawn Green\": 0x7cfc00,\r\n    Leather: 0x906a54,\r\n    Lemon: 0xfde910,\r\n    \"Lemon Chiffon\": 0xfffacd,\r\n    \"Lemon Ginger\": 0x968428,\r\n    \"Lemon Grass\": 0x999a86,\r\n    Licorice: 0x2e3749,\r\n    \"Light Blue\": 0xadd8e6,\r\n    \"Light Coral\": 0xf08080,\r\n    \"Light Cyan\": 0xe0ffff,\r\n    \"Light Goldenrod\": 0xeedd82,\r\n    \"Light Goldenrod Yellow\": 0xfafad2,\r\n    \"Light Green\": 0x90ee90,\r\n    \"Light Grey\": 0xd3d3d3,\r\n    \"Light Pink\": 0xffb6c1,\r\n    \"Light Salmon\": 0xffa07a,\r\n    \"Light Sea Green\": 0x20b2aa,\r\n    \"Light Sky Blue\": 0x87cefa,\r\n    \"Light Slate Blue\": 0x8470ff,\r\n    \"Light Slate Grey\": 0x778899,\r\n    \"Light Steel Blue\": 0xb0c4de,\r\n    \"Light Wood\": 0x856363,\r\n    \"Light Yellow\": 0xffffe0,\r\n    \"Lightning Yellow\": 0xf7a233,\r\n    Lilac: 0xc8a2c8,\r\n    \"Lilac Bush\": 0x9470c4,\r\n    Lily: 0xc19fb3,\r\n    \"Lily White\": 0xe9eeeb,\r\n    Lima: 0x7aac21,\r\n    \"Lime Green\": 0x32cd32,\r\n    Limeade: 0x5f9727,\r\n    Limerick: 0x89ac27,\r\n    \"Link Water\": 0xc7cdd8,\r\n    Lipstick: 0x962c54,\r\n    Liver: 0x534b4f,\r\n    \"Livid Brown\": 0x312a29,\r\n    Loafer: 0xdbd9c2,\r\n    Loblolly: 0xb3bbb7,\r\n    Lochinvar: 0x489084,\r\n    Lochmara: 0x316ea0,\r\n    Locust: 0xa2a580,\r\n    \"Log Cabin\": 0x393e2e,\r\n    Logan: 0x9d9cb4,\r\n    Lola: 0xb9acbb,\r\n    \"London Hue\": 0xae94ab,\r\n    Lonestar: 0x522426,\r\n    Lotus: 0x8b504b,\r\n    Loulou: 0x4c3347,\r\n    Lucky: 0xab9a1c,\r\n    \"Lucky Point\": 0x292d4f,\r\n    \"Lunar Green\": 0x4e5541,\r\n    Lusty: 0x782e2c,\r\n    \"Luxor Gold\": 0xab8d3f,\r\n    Lynch: 0x697d89,\r\n    Mabel: 0xcbe8e8,\r\n    \"Macaroni And Cheese\": 0xffb97b,\r\n    Madang: 0xb7e3a8,\r\n    Madison: 0x2d3c54,\r\n    Madras: 0x473e23,\r\n    \"Magic Mint\": 0xaaf0d1,\r\n    Magnolia: 0xf8f4ff,\r\n    Mahogany: 0xca3435,\r\n    \"Mai Tai\": 0xa56531,\r\n    Maire: 0x2a2922,\r\n    Maize: 0xe3b982,\r\n    Makara: 0x695f50,\r\n    Mako: 0x505555,\r\n    Malachite: 0x0bda51,\r\n    \"Malachite Green\": 0x97976f,\r\n    Malibu: 0x66b7e1,\r\n    Mallard: 0x3a4531,\r\n    Malta: 0xa59784,\r\n    Mamba: 0x766d7c,\r\n    Manatee: 0x8d90a1,\r\n    Mandalay: 0xb57b2e,\r\n    \"Mandarian Orange\": 0x8e2323,\r\n    Mandy: 0xcd525b,\r\n    \"Mandys Pink\": 0xf5b799,\r\n    \"Mango Tango\": 0xe77200,\r\n    Manhattan: 0xe2af80,\r\n    Mantis: 0x7fc15c,\r\n    Mantle: 0x96a793,\r\n    Manz: 0xe4db55,\r\n    \"Mardi Gras\": 0x352235,\r\n    Marigold: 0xb88a3d,\r\n    Mariner: 0x42639f,\r\n    Marshland: 0x2b2e26,\r\n    Martini: 0xb7a8a3,\r\n    Martinique: 0x3c3748,\r\n    Marzipan: 0xebc881,\r\n    Masala: 0x57534b,\r\n    Matisse: 0x365c7d,\r\n    Matrix: 0x8e4d45,\r\n    Matterhorn: 0x524b4b,\r\n    Mauve: 0xe0b0ff,\r\n    \"Mauve Taupe\": 0x915f6d,\r\n    Mauvelous: 0xf091a9,\r\n    Maverick: 0xc8b1c0,\r\n    \"Maya Blue\": 0x73c2fb,\r\n    McKenzie: 0x8c6338,\r\n    \"Medium Aquamarine\": 0x66cdaa,\r\n    \"Medium Blue\": 0x0000cd,\r\n    \"Medium Carmine\": 0xaf4035,\r\n    \"Medium Goldenrod\": 0xeaeaae,\r\n    \"Medium Orchid\": 0xba55d3,\r\n    \"Medium Purple\": 0x9370db,\r\n    \"Medium Sea Green\": 0x3cb371,\r\n    \"Medium Slate Blue\": 0x7b68ee,\r\n    \"Medium Spring Green\": 0x00fa9a,\r\n    \"Medium Turquoise\": 0x48d1cc,\r\n    \"Medium Violet Red\": 0xc71585,\r\n    \"Medium Wood\": 0xa68064,\r\n    Melanie: 0xe0b7c2,\r\n    Melanzane: 0x342931,\r\n    Melon: 0xfebaad,\r\n    Melrose: 0xc3b9dd,\r\n    Mercury: 0xd5d2d1,\r\n    Merino: 0xe1dbd0,\r\n    Merlin: 0x4f4e48,\r\n    Merlot: 0x73343a,\r\n    \"Metallic Bronze\": 0x554a3c,\r\n    \"Metallic Copper\": 0x6e3d34,\r\n    \"Metallic Gold\": 0xd4af37,\r\n    Meteor: 0xbb7431,\r\n    Meteorite: 0x4a3b6a,\r\n    \"Mexican Red\": 0x9b3d3d,\r\n    \"Mid Grey\": 0x666a6d,\r\n    Midnight: 0x21303e,\r\n    \"Midnight Blue\": 0x191970,\r\n    \"Midnight Express\": 0x21263a,\r\n    \"Midnight Moss\": 0x242e28,\r\n    Mikado: 0x3f3623,\r\n    Milan: 0xf6f493,\r\n    \"Milano Red\": 0x9e3332,\r\n    \"Milk Punch\": 0xf3e5c0,\r\n    \"Milk White\": 0xdcd9cd,\r\n    Millbrook: 0x595648,\r\n    Mimosa: 0xf5f5cc,\r\n    Mindaro: 0xdaea6f,\r\n    \"Mine Shaft\": 0x373e41,\r\n    \"Mineral Green\": 0x506355,\r\n    Ming: 0x407577,\r\n    Minsk: 0x3e3267,\r\n    \"Mint Cream\": 0xf5fffa,\r\n    \"Mint Green\": 0x98ff98,\r\n    \"Mint Julep\": 0xe0d8a7,\r\n    \"Mint Tulip\": 0xc6eadd,\r\n    Mirage: 0x373f43,\r\n    Mischka: 0xa5a9b2,\r\n    \"Mist Grey\": 0xbab9a9,\r\n    \"Misty Rose\": 0xffe4e1,\r\n    Mobster: 0x605a67,\r\n    Moccaccino: 0x582f2b,\r\n    Mocha: 0x6f372d,\r\n    Mojo: 0x97463c,\r\n    \"Mona Lisa\": 0xff9889,\r\n    Monarch: 0x6b252c,\r\n    Mondo: 0x554d42,\r\n    Mongoose: 0xa58b6f,\r\n    Monsoon: 0x7a7679,\r\n    Montana: 0x393b3c,\r\n    \"Monte Carlo\": 0x7ac5b4,\r\n    \"Moody Blue\": 0x8378c7,\r\n    \"Moon Glow\": 0xf5f3ce,\r\n    \"Moon Mist\": 0xcecdb8,\r\n    \"Moon Raker\": 0xc0b2d7,\r\n    \"Moon Yellow\": 0xf0c420,\r\n    \"Morning Glory\": 0x9ed1d3,\r\n    \"Morocco Brown\": 0x442d21,\r\n    Mortar: 0x565051,\r\n    Mosque: 0x005f5b,\r\n    \"Moss Green\": 0xaddfad,\r\n    \"Mountain Meadow\": 0x1ab385,\r\n    \"Mountain Mist\": 0xa09f9c,\r\n    \"Mountbatten Pink\": 0x997a8d,\r\n    \"Muddy Waters\": 0xa9844f,\r\n    Muesli: 0x9e7e53,\r\n    Mulberry: 0xc54b8c,\r\n    \"Mule Fawn\": 0x884f40,\r\n    \"Mulled Wine\": 0x524d5b,\r\n    Mustard: 0xffdb58,\r\n    \"My Pink\": 0xd68b80,\r\n    \"My Sin\": 0xfdae45,\r\n    Myrtle: 0x21421e,\r\n    Mystic: 0xd8ddda,\r\n    Nandor: 0x4e5d4e,\r\n    Napa: 0xa39a87,\r\n    Narvik: 0xe9e6dc,\r\n    \"Navajo White\": 0xffdead,\r\n    \"Navy Blue\": 0x0066cc,\r\n    Nebula: 0xb8c6be,\r\n    Negroni: 0xeec7a2,\r\n    \"Neon Blue\": 0x4d4dff,\r\n    \"Neon Carrot\": 0xff9933,\r\n    \"Neon Pink\": 0xff6ec7,\r\n    Nepal: 0x93aab9,\r\n    Neptune: 0x77a8ab,\r\n    Nero: 0x252525,\r\n    \"Neutral Green\": 0xaaa583,\r\n    Nevada: 0x666f6f,\r\n    \"New Amber\": 0x6d3b24,\r\n    \"New Midnight Blue\": 0x00009c,\r\n    \"New Orleans\": 0xe4c385,\r\n    \"New Tan\": 0xebc79e,\r\n    \"New York Pink\": 0xdd8374,\r\n    Niagara: 0x29a98b,\r\n    \"Night Rider\": 0x332e2e,\r\n    \"Night Shadz\": 0xa23d54,\r\n    \"Nile Blue\": 0x253f4e,\r\n    Nobel: 0xa99d9d,\r\n    Nomad: 0xa19986,\r\n    Nordic: 0x1d393c,\r\n    Norway: 0xa4b88f,\r\n    Nugget: 0xbc9229,\r\n    Nutmeg: 0x7e4a3b,\r\n    Oasis: 0xfcedc5,\r\n    Observatory: 0x008f70,\r\n    \"Ocean Green\": 0x4ca973,\r\n    Ochre: 0xcc7722,\r\n    \"Off Green\": 0xdff0e2,\r\n    \"Off Yellow\": 0xfaf3dc,\r\n    Oil: 0x313330,\r\n    \"Old Brick\": 0x8a3335,\r\n    \"Old Copper\": 0x73503b,\r\n    \"Old Gold\": 0xcfb53b,\r\n    \"Old Lace\": 0xfdf5e6,\r\n    \"Old Lavender\": 0x796878,\r\n    \"Old Rose\": 0xc02e4c,\r\n    \"Olive Drab\": 0x6b8e23,\r\n    \"Olive Green\": 0xb5b35c,\r\n    \"Olive Haze\": 0x888064,\r\n    Olivetone: 0x747028,\r\n    Olivine: 0x9ab973,\r\n    Onahau: 0xc2e6ec,\r\n    Onion: 0x48412b,\r\n    Opal: 0xa8c3bc,\r\n    Opium: 0x987e7e,\r\n    Oracle: 0x395555,\r\n    \"Orange Peel\": 0xffa000,\r\n    \"Orange Red\": 0xff4500,\r\n    \"Orange Roughy\": 0xa85335,\r\n    \"Orange White\": 0xeae3cd,\r\n    \"Orchid White\": 0xf1ebd9,\r\n    Orient: 0x255b77,\r\n    \"Oriental Pink\": 0xc28e88,\r\n    Orinoco: 0xd2d3b3,\r\n    \"Oslo Grey\": 0x818988,\r\n    Ottoman: 0xd3dbcb,\r\n    \"Outer Space\": 0x2d383a,\r\n    \"Outrageous Orange\": 0xff6037,\r\n    \"Oxford Blue\": 0x28353a,\r\n    Oxley: 0x6d9a78,\r\n    \"Oyster Bay\": 0xd1eaea,\r\n    \"Oyster Pink\": 0xd4b5b0,\r\n    Paarl: 0x864b36,\r\n    Pablo: 0x7a715c,\r\n    \"Pacific Blue\": 0x009dc4,\r\n    Paco: 0x4f4037,\r\n    Padua: 0x7eb394,\r\n    \"Palatinate Purple\": 0x682860,\r\n    \"Pale Brown\": 0x987654,\r\n    \"Pale Chestnut\": 0xddadaf,\r\n    \"Pale Cornflower Blue\": 0xabcdef,\r\n    \"Pale Goldenrod\": 0xeee8aa,\r\n    \"Pale Green\": 0x98fb98,\r\n    \"Pale Leaf\": 0xbdcaa8,\r\n    \"Pale Magenta\": 0xf984e5,\r\n    \"Pale Oyster\": 0x9c8d72,\r\n    \"Pale Pink\": 0xfadadd,\r\n    \"Pale Prim\": 0xf9f59f,\r\n    \"Pale Rose\": 0xefd6da,\r\n    \"Pale Sky\": 0x636d70,\r\n    \"Pale Slate\": 0xc3bebb,\r\n    \"Pale Taupe\": 0xbc987e,\r\n    \"Pale Turquoise\": 0xafeeee,\r\n    \"Pale Violet Red\": 0xdb7093,\r\n    \"Palm Green\": 0x20392c,\r\n    \"Palm Leaf\": 0x36482f,\r\n    Pampas: 0xeae4dc,\r\n    Panache: 0xebf7e4,\r\n    Pancho: 0xdfb992,\r\n    Panda: 0x544f3a,\r\n    \"Papaya Whip\": 0xffefd5,\r\n    Paprika: 0x7c2d37,\r\n    Paradiso: 0x488084,\r\n    Parchment: 0xd0c8b0,\r\n    \"Paris Daisy\": 0xfbeb50,\r\n    \"Paris M\": 0x312760,\r\n    \"Paris White\": 0xbfcdc0,\r\n    Parsley: 0x305d35,\r\n    \"Pastel Green\": 0x77dd77,\r\n    Patina: 0x639283,\r\n    \"Pattens Blue\": 0xd3e5ef,\r\n    Paua: 0x2a2551,\r\n    Pavlova: 0xbaab87,\r\n    \"Payne's Grey\": 0x404048,\r\n    Peach: 0xffcba4,\r\n    \"Peach Puff\": 0xffdab9,\r\n    \"Peach-Orange\": 0xffcc99,\r\n    \"Peach-Yellow\": 0xfadfad,\r\n    Peanut: 0x7a4434,\r\n    Pear: 0xd1e231,\r\n    \"Pearl Bush\": 0xded1c6,\r\n    \"Pearl Lusta\": 0xeae0c8,\r\n    Peat: 0x766d52,\r\n    Pelorous: 0x2599b2,\r\n    Peppermint: 0xd7e7d0,\r\n    Perano: 0xacb9e8,\r\n    Perfume: 0xc2a9db,\r\n    \"Periglacial Blue\": 0xacb6b2,\r\n    Periwinkle: 0xc3cde6,\r\n    \"Persian Blue\": 0x1c39bb,\r\n    \"Persian Green\": 0x00a693,\r\n    \"Persian Indigo\": 0x32127a,\r\n    \"Persian Pink\": 0xf77fbe,\r\n    \"Persian Plum\": 0x683332,\r\n    \"Persian Red\": 0xcc3333,\r\n    \"Persian Rose\": 0xfe28a2,\r\n    Persimmon: 0xec5800,\r\n    \"Peru Tan\": 0x733d1f,\r\n    Pesto: 0x7a7229,\r\n    \"Petite Orchid\": 0xda9790,\r\n    Pewter: 0x91a092,\r\n    Pharlap: 0x826663,\r\n    Picasso: 0xf8ea97,\r\n    \"Picton Blue\": 0x5ba0d0,\r\n    \"Pig Pink\": 0xfdd7e4,\r\n    \"Pigment Green\": 0x00a550,\r\n    \"Pine Cone\": 0x756556,\r\n    \"Pine Glade\": 0xbdc07e,\r\n    \"Pine Green\": 0x01796f,\r\n    \"Pine Tree\": 0x2a2f23,\r\n    \"Pink Flamingo\": 0xff66ff,\r\n    \"Pink Flare\": 0xd8b4b6,\r\n    \"Pink Lace\": 0xf6ccd7,\r\n    \"Pink Lady\": 0xf3d7b6,\r\n    \"Pink Swan\": 0xbfb3b2,\r\n    Piper: 0x9d5432,\r\n    Pipi: 0xf5e6c4,\r\n    Pippin: 0xfcdbd2,\r\n    \"Pirate Gold\": 0xba782a,\r\n    \"Pixie Green\": 0xbbcda5,\r\n    Pizazz: 0xe57f3d,\r\n    Pizza: 0xbf8d3c,\r\n    Plantation: 0x3e594c,\r\n    Pohutukawa: 0x651c26,\r\n    Polar: 0xe5f2e7,\r\n    \"Polo Blue\": 0x8aa7cc,\r\n    Pompadour: 0x6a1f44,\r\n    Porcelain: 0xdddcdb,\r\n    Porsche: 0xdf9d5b,\r\n    \"Port Gore\": 0x3b436c,\r\n    Portafino: 0xf4f09b,\r\n    Portage: 0x8b98d8,\r\n    Portica: 0xf0d555,\r\n    \"Pot Pourri\": 0xefdcd4,\r\n    \"Potters Clay\": 0x845c40,\r\n    \"Powder Blue\": 0xb0e0e6,\r\n    \"Prairie Sand\": 0x883c32,\r\n    Prelude: 0xcab4d4,\r\n    Prim: 0xe2cdd5,\r\n    Primrose: 0xe4de8e,\r\n    Promenade: 0xf8f6df,\r\n    \"Provincial Pink\": 0xf6e3da,\r\n    \"Prussian Blue\": 0x003366,\r\n    \"Psychedelic Purple\": 0xdd00ff,\r\n    Puce: 0xcc8899,\r\n    Pueblo: 0x6e3326,\r\n    \"Puerto Rico\": 0x59baa3,\r\n    Pumice: 0xbac0b4,\r\n    Pumpkin: 0xff7518,\r\n    Punga: 0x534931,\r\n    \"Purple Heart\": 0x652dc1,\r\n    \"Purple Mountain's Majesty\": 0x9678b6,\r\n    \"Purple Taupe\": 0x50404d,\r\n    Putty: 0xcdae70,\r\n    \"Quarter Pearl Lusta\": 0xf2eddd,\r\n    \"Quarter Spanish White\": 0xebe2d2,\r\n    Quartz: 0xd9d9f3,\r\n    Quicksand: 0xc3988b,\r\n    \"Quill Grey\": 0xcbc9c0,\r\n    Quincy: 0x6a5445,\r\n    \"Racing Green\": 0x232f2c,\r\n    \"Radical Red\": 0xff355e,\r\n    Raffia: 0xdcc6a0,\r\n    \"Rain Forest\": 0x667028,\r\n    Rainee: 0xb3c1b1,\r\n    Rajah: 0xfcae60,\r\n    \"Rangoon Green\": 0x2b2e25,\r\n    Raven: 0x6f747b,\r\n    \"Raw Sienna\": 0xd27d46,\r\n    \"Raw Umber\": 0x734a12,\r\n    \"Razzle Dazzle Rose\": 0xff33cc,\r\n    Razzmatazz: 0xe30b5c,\r\n    Rebel: 0x453430,\r\n    \"Red Berry\": 0x701f28,\r\n    \"Red Damask\": 0xcb6f4a,\r\n    \"Red Devil\": 0x662a2c,\r\n    \"Red Orange\": 0xff3f34,\r\n    \"Red Oxide\": 0x5d1f1e,\r\n    \"Red Robin\": 0x7d4138,\r\n    \"Red Stage\": 0xad522e,\r\n    \"Medium Red Violet\": 0xbb3385,\r\n    Redwood: 0x5b342e,\r\n    Reef: 0xd1ef9f,\r\n    \"Reef Gold\": 0xa98d36,\r\n    \"Regal Blue\": 0x203f58,\r\n    \"Regent Grey\": 0x798488,\r\n    \"Regent St Blue\": 0xa0cdd9,\r\n    Remy: 0xf6deda,\r\n    \"Reno Sand\": 0xb26e33,\r\n    \"Resolution Blue\": 0x323f75,\r\n    Revolver: 0x37363f,\r\n    Rhino: 0x3d4653,\r\n    \"Rice Cake\": 0xefecde,\r\n    \"Rice Flower\": 0xeff5d1,\r\n    \"Rich Blue\": 0x5959ab,\r\n    \"Rich Gold\": 0xa15226,\r\n    \"Rio Grande\": 0xb7c61a,\r\n    Riptide: 0x89d9c8,\r\n    \"River Bed\": 0x556061,\r\n    \"Rob Roy\": 0xddad56,\r\n    \"Robin's Egg Blue\": 0x00cccc,\r\n    Rock: 0x5a4d41,\r\n    \"Rock Blue\": 0x93a2ba,\r\n    \"Rock Spray\": 0x9d442d,\r\n    \"Rodeo Dust\": 0xc7a384,\r\n    \"Rolling Stone\": 0x6d7876,\r\n    Roman: 0xd8625b,\r\n    \"Roman Coffee\": 0x7d6757,\r\n    Romance: 0xf4f0e6,\r\n    Romantic: 0xffc69e,\r\n    Ronchi: 0xeab852,\r\n    \"Roof Terracotta\": 0xa14743,\r\n    Rope: 0x8e593c,\r\n    Rose: 0xd3a194,\r\n    \"Rose Bud\": 0xfeab9a,\r\n    \"Rose Bud Cherry\": 0x8a2d52,\r\n    \"Rose Of Sharon\": 0xac512d,\r\n    \"Rose Taupe\": 0x905d5d,\r\n    \"Rose White\": 0xfbeee8,\r\n    \"Rosy Brown\": 0xbc8f8f,\r\n    Roti: 0xb69642,\r\n    Rouge: 0xa94064,\r\n    \"Royal Blue\": 0x4169e1,\r\n    \"Royal Heath\": 0xb54b73,\r\n    \"Royal Purple\": 0x6b3fa0,\r\n    Ruby: 0xe0115f,\r\n    Rum: 0x716675,\r\n    \"Rum Swizzle\": 0xf1edd4,\r\n    Russet: 0x80461b,\r\n    Russett: 0x7d655c,\r\n    Rust: 0xb7410e,\r\n    \"Rustic Red\": 0x3a181a,\r\n    \"Rusty Nail\": 0x8d5f2c,\r\n    Saddle: 0x5d4e46,\r\n    \"Saddle Brown\": 0x8b4513,\r\n    \"Safety Orange\": 0xff6600,\r\n    Saffron: 0xf4c430,\r\n    Sage: 0x989f7a,\r\n    Sahara: 0xb79826,\r\n    Sail: 0xa5ceec,\r\n    Salem: 0x177b4d,\r\n    Salomie: 0xffd67b,\r\n    \"Salt Box\": 0x696268,\r\n    Saltpan: 0xeef3e5,\r\n    Sambuca: 0x3b2e25,\r\n    \"San Felix\": 0x2c6e31,\r\n    \"San Juan\": 0x445761,\r\n    \"San Marino\": 0x4e6c9d,\r\n    \"Sand Dune\": 0x867665,\r\n    Sandal: 0xa3876a,\r\n    Sandrift: 0xaf937d,\r\n    Sandstone: 0x786d5f,\r\n    Sandwisp: 0xdecb81,\r\n    \"Sandy Beach\": 0xfedbb7,\r\n    \"Sandy Brown\": 0xf4a460,\r\n    Sangria: 0x92000a,\r\n    \"Sanguine Brown\": 0x6c3736,\r\n    \"Santas Grey\": 0x9998a7,\r\n    \"Sante Fe\": 0xa96a50,\r\n    Sapling: 0xe1d5a6,\r\n    Sapphire: 0x082567,\r\n    Saratoga: 0x555b2c,\r\n    Sauvignon: 0xf4eae4,\r\n    Sazerac: 0xf5dec4,\r\n    Scampi: 0x6f63a0,\r\n    Scandal: 0xadd9d1,\r\n    Scarlet: 0xff2400,\r\n    \"Scarlet Gum\": 0x4a2d57,\r\n    Scarlett: 0x7e2530,\r\n    \"Scarpa Flow\": 0x6b6a6c,\r\n    Schist: 0x87876f,\r\n    \"School Bus Yellow\": 0xffd800,\r\n    Schooner: 0x8d8478,\r\n    Scooter: 0x308ea0,\r\n    Scorpion: 0x6a6466,\r\n    \"Scotch Mist\": 0xeee7c8,\r\n    \"Screamin' Green\": 0x66ff66,\r\n    Scrub: 0x3d4031,\r\n    \"Sea Buckthorn\": 0xef9548,\r\n    \"Sea Fog\": 0xdfddd6,\r\n    \"Sea Green\": 0x2e8b57,\r\n    \"Sea Mist\": 0xc2d5c4,\r\n    \"Sea Nymph\": 0x8aaea4,\r\n    \"Sea Pink\": 0xdb817e,\r\n    Seagull: 0x77b7d0,\r\n    \"Seal Brown\": 0x321414,\r\n    Seance: 0x69326e,\r\n    Seaweed: 0x37412a,\r\n    Selago: 0xe6dfe7,\r\n    \"Selective Yellow\": 0xffba00,\r\n    \"Semi-Sweet Chocolate\": 0x6b4226,\r\n    Sepia: 0x9e5b40,\r\n    Serenade: 0xfce9d7,\r\n    Shadow: 0x837050,\r\n    \"Shadow Green\": 0x9ac0b6,\r\n    \"Shady Lady\": 0x9f9b9d,\r\n    Shakespeare: 0x609ab8,\r\n    Shalimar: 0xf8f6a8,\r\n    Shamrock: 0x33cc99,\r\n    \"Shamrock Green\": 0x009e60,\r\n    Shark: 0x34363a,\r\n    \"Sherpa Blue\": 0x00494e,\r\n    \"Sherwood Green\": 0x1b4636,\r\n    Shilo: 0xe6b2a6,\r\n    \"Shingle Fawn\": 0x745937,\r\n    \"Ship Cove\": 0x7988ab,\r\n    \"Ship Grey\": 0x4e4e4c,\r\n    Shiraz: 0x842833,\r\n    Shocking: 0xe899be,\r\n    \"Shocking Pink\": 0xfc0fc0,\r\n    \"Shuttle Grey\": 0x61666b,\r\n    Siam: 0x686b50,\r\n    Sidecar: 0xe9d9a9,\r\n    Silk: 0xbbada1,\r\n    \"Silver Chalice\": 0xacaea9,\r\n    \"Silver Sand\": 0xbebdb6,\r\n    \"Silver Tree\": 0x67be90,\r\n    Sinbad: 0xa6d5d0,\r\n    Siren: 0x69293b,\r\n    Sirocco: 0x68766e,\r\n    Sisal: 0xc5baa0,\r\n    Skeptic: 0x9db4aa,\r\n    \"Sky Blue\": 0x87ceeb,\r\n    \"Slate Blue\": 0x6a5acd,\r\n    \"Slate Grey\": 0x708090,\r\n    Slugger: 0x42342b,\r\n    Smalt: 0x003399,\r\n    \"Smalt Blue\": 0x496267,\r\n    \"Smoke Tree\": 0xbb5f34,\r\n    Smoky: 0x605d6b,\r\n    \"Snow Drift\": 0xe3e3dc,\r\n    \"Snow Flurry\": 0xeaf7c9,\r\n    \"Snowy Mint\": 0xd6f0cd,\r\n    Snuff: 0xe4d7e5,\r\n    Soapstone: 0xece5da,\r\n    \"Soft Amber\": 0xcfbea5,\r\n    \"Soft Peach\": 0xeedfde,\r\n    \"Solid Pink\": 0x85494c,\r\n    Solitaire: 0xeadac2,\r\n    Solitude: 0xe9ecf1,\r\n    Sorbus: 0xdd6b38,\r\n    \"Sorrell Brown\": 0x9d7f61,\r\n    \"Sour Dough\": 0xc9b59a,\r\n    \"Soya Bean\": 0x6f634b,\r\n    \"Space Shuttle\": 0x4b433b,\r\n    \"Spanish Green\": 0x7b8976,\r\n    \"Spanish White\": 0xded1b7,\r\n    Spectra: 0x375d4f,\r\n    Spice: 0x6c4f3f,\r\n    \"Spicy Mix\": 0x8b5f4d,\r\n    \"Spicy Pink\": 0xff1cae,\r\n    Spindle: 0xb3c4d8,\r\n    Splash: 0xf1d79e,\r\n    Spray: 0x7ecddd,\r\n    \"Spring Bud\": 0xa7fc00,\r\n    \"Spring Green\": 0x00ff7f,\r\n    \"Spring Rain\": 0xa3bd9c,\r\n    \"Spring Sun\": 0xf1f1c6,\r\n    \"Spring Wood\": 0xe9e1d9,\r\n    Sprout: 0xb8ca9d,\r\n    \"Spun Pearl\": 0xa2a1ac,\r\n    Squirrel: 0x8f7d6b,\r\n    \"St Tropaz\": 0x325482,\r\n    Stack: 0x858885,\r\n    \"Star Dust\": 0xa0a197,\r\n    \"Stark White\": 0xd2c6b6,\r\n    Starship: 0xe3dd39,\r\n    \"Steel Blue\": 0x4682b4,\r\n    \"Steel Grey\": 0x43464b,\r\n    Stiletto: 0x833d3e,\r\n    Stonewall: 0x807661,\r\n    \"Storm Dust\": 0x65645f,\r\n    \"Storm Grey\": 0x747880,\r\n    Straw: 0xdabe82,\r\n    Strikemaster: 0x946a81,\r\n    Stromboli: 0x406356,\r\n    Studio: 0x724aa1,\r\n    Submarine: 0x8c9c9c,\r\n    \"Sugar Cane\": 0xeeefdf,\r\n    Sulu: 0xc6ea80,\r\n    \"Summer Green\": 0x8fb69c,\r\n    \"Summer Sky\": 0x38b0de,\r\n    Sun: 0xef8e38,\r\n    Sundance: 0xc4aa4d,\r\n    Sundown: 0xf8afa9,\r\n    Sunflower: 0xdac01a,\r\n    Sunglo: 0xc76155,\r\n    Sunglow: 0xffcc33,\r\n    Sunset: 0xc0514a,\r\n    \"Sunset Orange\": 0xfe4c40,\r\n    Sunshade: 0xfa9d49,\r\n    Supernova: 0xffb437,\r\n    Surf: 0xb8d4bb,\r\n    \"Surf Crest\": 0xc3d6bd,\r\n    \"Surfie Green\": 0x007b77,\r\n    Sushi: 0x7c9f2f,\r\n    \"Suva Grey\": 0x8b8685,\r\n    Swamp: 0x252f2f,\r\n    \"Swans Down\": 0xdae6dd,\r\n    \"Sweet Corn\": 0xf9e176,\r\n    \"Sweet Pink\": 0xee918d,\r\n    Swirl: 0xd7cec5,\r\n    \"Swiss Coffee\": 0xdbd0ca,\r\n    Tacao: 0xf6ae78,\r\n    Tacha: 0xd2b960,\r\n    \"Tahiti Gold\": 0xdc722a,\r\n    \"Tahuna Sands\": 0xd8cc9b,\r\n    \"Tall Poppy\": 0x853534,\r\n    Tallow: 0xa39977,\r\n    Tamarillo: 0x752b2f,\r\n    Tana: 0xb8b5a1,\r\n    Tangaroa: 0x1e2f3c,\r\n    Tangerine: 0xf28500,\r\n    \"Tangerine Yellow\": 0xffcc00,\r\n    Tango: 0xd46f31,\r\n    Tapa: 0x7c7c72,\r\n    Tapestry: 0xb37084,\r\n    Tara: 0xdef1dd,\r\n    Tarawera: 0x253c48,\r\n    Tasman: 0xbac0b3,\r\n    Taupe: 0x483c32,\r\n    \"Taupe Grey\": 0x8b8589,\r\n    \"Tawny Port\": 0x643a48,\r\n    \"Tax Break\": 0x496569,\r\n    \"Te Papa Green\": 0x2b4b40,\r\n    Tea: 0xbfb5a2,\r\n    \"Tea Green\": 0xd0f0c0,\r\n    \"Tea Rose\": 0xf883c2,\r\n    Teak: 0xab8953,\r\n    \"Teal Blue\": 0x254855,\r\n    Temptress: 0x3c2126,\r\n    \"Tenne (Tawny)\": 0xcd5700,\r\n    Tequila: 0xf4d0a4,\r\n    \"Terra Cotta\": 0xe2725b,\r\n    Texas: 0xece67e,\r\n    \"Texas Rose\": 0xfcb057,\r\n    Thatch: 0xb1948f,\r\n    \"Thatch Green\": 0x544e31,\r\n    Thunder: 0x4d4d4b,\r\n    Thunderbird: 0x923830,\r\n    \"Tia Maria\": 0x97422d,\r\n    Tiara: 0xb9c3be,\r\n    Tiber: 0x184343,\r\n    \"Tickle Me Pink\": 0xfc80a5,\r\n    Tidal: 0xf0f590,\r\n    Tide: 0xbeb4ab,\r\n    \"Timber Green\": 0x324336,\r\n    Timberwolf: 0xd9d6cf,\r\n    \"Titan White\": 0xddd6e1,\r\n    Toast: 0x9f715f,\r\n    \"Tobacco Brown\": 0x6d5843,\r\n    Tobago: 0x44362d,\r\n    Toledo: 0x3e2631,\r\n    Tolopea: 0x2d2541,\r\n    \"Tom Thumb\": 0x4f6348,\r\n    \"Tonys Pink\": 0xe79e88,\r\n    Topaz: 0x817c87,\r\n    \"Torch Red\": 0xfd0e35,\r\n    \"Torea Bay\": 0x353d75,\r\n    \"Tory Blue\": 0x374e88,\r\n    Tosca: 0x744042,\r\n    \"Tower Grey\": 0x9caca5,\r\n    Tradewind: 0x6dafa7,\r\n    Tranquil: 0xddede9,\r\n    Travertine: 0xe2ddc7,\r\n    \"Tree Poppy\": 0xe2813b,\r\n    \"Trendy Green\": 0x7e8424,\r\n    \"Trendy Pink\": 0x805d80,\r\n    Trinidad: 0xc54f33,\r\n    \"Tropical Blue\": 0xaec9eb,\r\n    \"Tropical Rain Forest\": 0x00755e,\r\n    Trout: 0x4c5356,\r\n    \"True V\": 0x8e72c7,\r\n    Tuatara: 0x454642,\r\n    \"Tuft Bush\": 0xf9d3be,\r\n    \"Tulip Tree\": 0xe3ac3d,\r\n    Tumbleweed: 0xdea681,\r\n    Tuna: 0x46494e,\r\n    Tundora: 0x585452,\r\n    Turbo: 0xf5cc23,\r\n    \"Turkish Rose\": 0xa56e75,\r\n    Turmeric: 0xae9041,\r\n    \"Turquoise Blue\": 0x6cdae7,\r\n    \"Turtle Green\": 0x363e1d,\r\n    Tuscany: 0xad6242,\r\n    Tusk: 0xe3e5b1,\r\n    Tussock: 0xbf914b,\r\n    Tutu: 0xf8e4e3,\r\n    Twilight: 0xdac0cd,\r\n    \"Twilight Blue\": 0xf4f6ec,\r\n    Twine: 0xc19156,\r\n    \"Tyrian Purple\": 0x66023c,\r\n    \"Ultra Pink\": 0xff6fff,\r\n    Ultramarine: 0x120a8f,\r\n    Valencia: 0xd4574e,\r\n    Valentino: 0x382c38,\r\n    Valhalla: 0x2a2b41,\r\n    \"Van Cleef\": 0x523936,\r\n    Vanilla: 0xccb69b,\r\n    \"Vanilla Ice\": 0xebd2d1,\r\n    Varden: 0xfdefd3,\r\n    \"Venetian Red\": 0xc80815,\r\n    \"Venice Blue\": 0x2c5778,\r\n    Venus: 0x8b7d82,\r\n    Verdigris: 0x62603e,\r\n    \"Verdun Green\": 0x48531a,\r\n    Vermilion: 0xff4d00,\r\n    \"Very Dark Brown\": 0x5c4033,\r\n    \"Very Light Grey\": 0xcdcdcd,\r\n    Vesuvius: 0xa85533,\r\n    Victoria: 0x564985,\r\n    \"Vida Loca\": 0x5f9228,\r\n    Viking: 0x4db1c8,\r\n    \"Vin Rouge\": 0x955264,\r\n    Viola: 0xc58f9d,\r\n    \"Violent Violet\": 0x2e2249,\r\n    \"Violet Blue\": 0x9f5f9f,\r\n    \"Violet Red\": 0xf7468a,\r\n    Viridian: 0x40826d,\r\n    \"Viridian Green\": 0x4b5f56,\r\n    \"Vis Vis\": 0xf9e496,\r\n    \"Vista Blue\": 0x97d5b3,\r\n    \"Vista White\": 0xe3dfd9,\r\n    \"Vivid Tangerine\": 0xff9980,\r\n    \"Vivid Violet\": 0x803790,\r\n    Volcano: 0x4e2728,\r\n    Voodoo: 0x443240,\r\n    Vulcan: 0x36383c,\r\n    Wafer: 0xd4bbb1,\r\n    \"Waikawa Grey\": 0x5b6e91,\r\n    Waiouru: 0x4c4e31,\r\n    \"Wan White\": 0xe4e2dc,\r\n    Wasabi: 0x849137,\r\n    \"Water Leaf\": 0xb6ecde,\r\n    Watercourse: 0x006e4e,\r\n    Wattle: 0xd6ca3d,\r\n    Watusi: 0xf2cdbb,\r\n    \"Wax Flower\": 0xeeb39e,\r\n    \"We Peep\": 0xfdd7d8,\r\n    Wedgewood: 0x4c6b88,\r\n    \"Well Read\": 0x8e3537,\r\n    \"West Coast\": 0x5c512f,\r\n    \"West Side\": 0xe5823a,\r\n    Westar: 0xd4cfc5,\r\n    Wewak: 0xf1919a,\r\n    Wheatfield: 0xdfd7bd,\r\n    Whiskey: 0xd29062,\r\n    \"Whiskey Sour\": 0xd4915d,\r\n    Whisper: 0xefe6e6,\r\n    \"White Ice\": 0xd7eee4,\r\n    \"White Lilac\": 0xe7e5e8,\r\n    \"White Linen\": 0xeee7dc,\r\n    \"White Nectar\": 0xf8f6d8,\r\n    \"White Pointer\": 0xdad6cc,\r\n    \"White Rock\": 0xd4cfb4,\r\n    \"White Smoke\": 0xf5f5f5,\r\n    \"Wild Blue Yonder\": 0x7a89b8,\r\n    \"Wild Rice\": 0xe3d474,\r\n    \"Wild Sand\": 0xe7e4de,\r\n    \"Wild Strawberry\": 0xff3399,\r\n    \"Wild Watermelon\": 0xfd5b78,\r\n    \"Wild Willow\": 0xbeca60,\r\n    William: 0x53736f,\r\n    \"Willow Brook\": 0xdfe6cf,\r\n    \"Willow Grove\": 0x69755c,\r\n    Windsor: 0x462c77,\r\n    \"Wine Berry\": 0x522c35,\r\n    \"Winter Hazel\": 0xd0c383,\r\n    \"Wisp Pink\": 0xf9e8e2,\r\n    Wisteria: 0xc9a0dc,\r\n    Wistful: 0xa29ecd,\r\n    \"Witch Haze\": 0xfbf073,\r\n    \"Wood Bark\": 0x302621,\r\n    Woodburn: 0x463629,\r\n    Woodland: 0x626746,\r\n    Woodrush: 0x45402b,\r\n    Woodsmoke: 0x2b3230,\r\n    \"Woody Brown\": 0x554545,\r\n    Xanadu: 0x75876e,\r\n    \"Yellow Green\": 0x9acd32,\r\n    \"Yellow Metal\": 0x73633e,\r\n    \"Yellow Orange\": 0xffae42,\r\n    \"Yellow Sea\": 0xf49f35,\r\n    \"Your Pink\": 0xffc5bb,\r\n    \"Yukon Gold\": 0x826a21,\r\n    Yuma: 0xc7b882,\r\n    Zambezi: 0x6b5a5a,\r\n    Zanah: 0xb2c6b1,\r\n    Zest: 0xc6723b,\r\n    Zeus: 0x3b3c38,\r\n    Ziggurat: 0x81a6aa,\r\n    Zinnwaldite: 0xebc2af,\r\n    Zircon: 0xdee3e3,\r\n    Zombie: 0xddc283,\r\n    Zorba: 0xa29589,\r\n    Zuccini: 0x17462e,\r\n    Zumthor: 0xcdd5d5,\r\n};\r\n","import React, { Component, ReactNode, MouseEvent, TouchEvent, PureComponent } from \"react\"\r\nimport { V3, V, M4, DEG } from \"ts3dutils\"\r\n\r\nimport { SpacesCanvas, What, Camera, whats as csWhats } from \"./SpacesCanvas\"\r\nimport { Picker, PickerItem } from \"./Picker\"\r\nimport chroma from \"..\"\r\nimport { DrawableColorSpaces, colorSpaces } from \"./colorSpaces\"\r\nimport { colorsExtended } from \"../src/colorsExtended\"\r\ntype Color = chroma.Color\r\nconst whats: (PickerItem<What> & { detail: (color: Color) => ReactNode })[] = [\r\n\t{\r\n\t\tvalue: \"_50shadesOfGrey\",\r\n\t\ttitle: \"50 shades of grey (+ black and white)\",\r\n\t\tchildren: \"Evenly spaced in HSL color space.\",\r\n\t\tdetail: color => {\r\n\t\t\tconst l = color.hsl()[2]\r\n\t\t\tconst i = (l * 51) | 0\r\n\t\t\treturn (0 == i ? \"black\" : 51 == i ? \"white\" : \"grey \" + i + \"/50\") + \" Lightness: \" + l.toFixed(2)\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tvalue: \"rgbCube16\",\r\n\t\ttitle: \"RGB color cube\",\r\n\t\tchildren: \"Only the faces of the cube though.\",\r\n\t\tdetail: color => color.css(\"rgb\"),\r\n\t},\r\n\t{\r\n\t\tvalue: \"hues\",\r\n\t\ttitle: \"Hues\",\r\n\t\tchildren: \"All the colors of the rainbow.\",\r\n\t\tdetail: color => \"Hue: \" + (color.hsl()[0] | 0),\r\n\t},\r\n\t{\r\n\t\tvalue: \"w3cx11\",\r\n\t\ttitle: \"CSS Colors\",\r\n\t\tchildren: \"All the named CSS colors.\",\r\n\t\tdetail: color => color.name(),\r\n\t},\r\n\t{\r\n\t\tvalue: \"ks\",\r\n\t\ttitle: \"Temperatures\",\r\n\t\tchildren: \"\",\r\n\t\tdetail: color => \"Temperature: \" + (color.temperature() | 0),\r\n\t},\r\n\t{\r\n\t\tvalue: \"cubehelix\",\r\n\t\ttitle: \"chroma.cubehelix()\",\r\n\t\tchildren: \"100 samples of the default settings.\",\r\n\t\tdetail: () => \"\",\r\n\t},\r\n\t{\r\n\t\tvalue: \"scalePaired\",\r\n\t\ttitle: \"chroma.scale('Paired')\",\r\n\t\tchildren: \"100 samples.\",\r\n\t\tdetail: () => \"\",\r\n\t},\r\n\t{\r\n\t\tvalue: \"hslCylinder\",\r\n\t\ttitle: \"HSL cylinder\",\r\n\t\tchildren: \"Lightness goes from 1% to 99%, as 0% (black) and 100% (white) colors collapse into a single point.\",\r\n\t\tdetail: color => color.css(\"hsl\"),\r\n\t},\r\n\t{\r\n\t\tvalue: \"colors2\",\r\n\t\ttitle: \"Extended Colors\",\r\n\t\tdetail: color => {\r\n\t\t\tconst num = color.num()\r\n\t\t\treturn (Object.keys(colorsExtended) as (keyof typeof colorsExtended)[]).find(\r\n\t\t\t\tname => colorsExtended[name] === num,\r\n\t\t\t)\r\n\t\t},\r\n\t\tchildren: \"\",\r\n\t},\r\n\t{\r\n\t\tvalue: \"l05\",\r\n\t\ttitle: \"HSL Cylinder Slice at L=50%\",\r\n\t\tchildren: \"\",\r\n\t\tdetail: () => \"\",\r\n\t},\r\n]\r\nlet m\r\nif ((m = (window.location.hash || \"\").match(/^#(.*?)-((?:[a-f\\d]{6})+)$/))) {\r\n\tconst [, name, hexes] = m\r\n\tconst colors = hexes.match(/.{6}/g)!.map(hex => chroma.css(hex))\r\n\twhats.push({ value: \"hash\", title: decodeURI(name), children: \"from the URL hash\", detail: () => \"\" } as any)\r\n\t;(csWhats as any).hash = () => colors\r\n}\r\nclass AppState {\r\n\tpublic readonly colorSpace: DrawableColorSpaces = \"rgb\"\r\n\tpublic readonly what: What = (csWhats as any).hash ? (\"hash\" as any) : \"hslCylinder\"\r\n\tpublic readonly rotation: boolean = true\r\n\tpublic readonly highlightedColor: Color | undefined = undefined\r\n\tpublic readonly selectedColor: Color | undefined = undefined\r\n\r\n\tpublic readonly camera = new Camera()\r\n}\r\nconst colorSpaceItems: PickerItem<DrawableColorSpaces>[] = (Object.keys(colorSpaces) as DrawableColorSpaces[]).map(\r\n\tkey => {\r\n\t\tconst colorSpace = colorSpaces[key]\r\n\t\treturn {\r\n\t\t\tvalue: key,\r\n\t\t\ttitle: colorSpace.title,\r\n\t\t\tchildren: colorSpace.children,\r\n\t\t}\r\n\t},\r\n)\r\nexport class App extends PureComponent<{}, AppState> {\r\n\tpublic state = new AppState()\r\n\r\n\tprotected canvasMousePos = V3.O\r\n\r\n\t/** Use when dragging. */\r\n\tprotected cancelNextClick = false\r\n\r\n\tpublic render() {\r\n\t\tconst { highlightedColor, selectedColor, colorSpace, what, rotation, camera } = this.state\r\n\t\tconst displayColor = highlightedColor || selectedColor\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Picker\r\n\t\t\t\t\tid=\"colorSpace\"\r\n\t\t\t\t\ttitle=\"Choose a color space...\"\r\n\t\t\t\t\titems={colorSpaceItems}\r\n\t\t\t\t\tclassName=\"picker\"\r\n\t\t\t\t\tonchange={colorSpace => this.setState({ colorSpace })}\r\n\t\t\t\t\tvalue={this.state.colorSpace}\r\n\t\t\t\t/>\r\n\t\t\t\t<Picker\r\n\t\t\t\t\tid=\"what\"\r\n\t\t\t\t\ttitle=\"...and what to draw:\"\r\n\t\t\t\t\titems={whats}\r\n\t\t\t\t\tclassName=\"picker\"\r\n\t\t\t\t\tonchange={what => this.setState({ what })}\r\n\t\t\t\t\tvalue={this.state.what}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvasContainer\">\r\n\t\t\t\t\t<SpacesCanvas\r\n\t\t\t\t\t\tid=\"spacesCanvas\"\r\n\t\t\t\t\t\tcolorSpace={this.state.colorSpace}\r\n\t\t\t\t\t\tstyle={{ cursor: highlightedColor ? \"crosshair\" : \"move\" }}\r\n\t\t\t\t\t\twhat={this.state.what}\r\n\t\t\t\t\t\trotation={rotation}\r\n\t\t\t\t\t\tcolorHighlight={displayColor}\r\n\t\t\t\t\t\tonHoverChange={highlightedColor => this.setState({ highlightedColor })}\r\n\t\t\t\t\t\tonClick={this.canvasClick}\r\n\t\t\t\t\t\tcamera={camera}\r\n\t\t\t\t\t\tonMouseMove={this.canvasMove}\r\n\t\t\t\t\t\tonTouchMove={this.canvasMove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div id=\"info\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid=\"activeColorPreview\"\r\n\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\tdisplayColor && {\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: displayColor.css(),\r\n\t\t\t\t\t\t\t\t\tcolor: displayColor.textColor().name(),\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div id=\"activeColorHex\">{displayColor && displayColor.hex()}</div>\r\n\t\t\t\t\t\t\t<div id=\"activeColorDetail\">\r\n\t\t\t\t\t\t\t\t{displayColor && whats.find(cs => cs.value == what)!.detail(displayColor)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\tchecked={rotation}\r\n\t\t\t\t\t\t\t\tonChange={e => this.setState({ rotation: e.target.checked })}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\tRotation\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<button onClick={() => this.setCamera(V(5, 0, 0.5), V(0, 0, 0.5), V3.Z)}>X</button>\r\n\t\t\t\t\t\t<button onClick={() => this.setCamera(V(0, 5, 0.5), V(0, 0, 0.5), V3.Z)}>Y</button>\r\n\t\t\t\t\t\t<button onClick={() => this.setCamera(V(0, 0, 5.5), V(0, 0, 0.5), V3.Y)}>Z</button>\r\n\t\t\t\t\t\t<button onClick={() => this.setState({ camera: new Camera() })}>Default</button>\r\n\t\t\t\t\t\t<div style={{ textAlign: \"right\" }}>\r\n\t\t\t\t\t\t\t<a href=\"github.com/NaridaL/chroma.ts\">view source on github</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tprotected setCamera(eye: V3, center: V3, up: V3) {\r\n\t\tthis.setState({ camera: { eye, center, up } })\r\n\t}\r\n\r\n\tprotected canvasMove = (e: MouseEvent<HTMLCanvasElement> | TouchEvent<HTMLCanvasElement>) => {\r\n\t\tlet eventOffset\r\n\t\tif (e.type == \"mousemove\") {\r\n\t\t\tconst me = e as MouseEvent\r\n\t\t\teventOffset = V(me.nativeEvent.offsetX, me.nativeEvent.offsetY)\r\n\t\t} else {\r\n\t\t\tconst te = e as TouchEvent\r\n\t\t\tif (te.targetTouches.length !== 1) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\teventOffset = V(te.targetTouches[0].clientX, te.targetTouches[0].clientY)\r\n\t\t}\r\n\t\tif (e.type !== \"mousemove\" || (e as MouseEvent).buttons & 1) {\r\n\t\t\tconst delta = this.canvasMousePos.to(eventOffset)\r\n\t\t\tconst { eye, center, up } = this.state.camera\r\n\t\t\tconst transformation = M4.multiply(\r\n\t\t\t\tM4.rotateZ((-delta.x * DEG) / 10),\r\n\t\t\t\tM4.rotate((-delta.y * DEG) / 10, eye.to(center).cross(up)),\r\n\t\t\t)\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tcamera: { eye: transformation.transformPoint(eye), center, up: transformation.transformVector(up) },\r\n\t\t\t})\r\n\t\t\tthis.cancelNextClick = true\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\t\tthis.canvasMousePos = eventOffset\r\n\t}\r\n\r\n\tprotected canvasClick = () => {\r\n\t\tif (!this.cancelNextClick) {\r\n\t\t\tthis.setState({ selectedColor: this.state.highlightedColor })\r\n\t\t}\r\n\t\tthis.cancelNextClick = false\r\n\t}\r\n}\r\n","import { App } from \"./App\"\r\nimport ReactDOM from \"react-dom\"\r\nimport React from \"react\"\r\n\r\nReactDOM.render(React.createElement(App), document.getElementById(\"vcs-root\"))\r\n"],"names":["floatHashCode","CustomMap","PI","abs","V","KEYWORD_REGEXP","__awaiter","currentGL","WGL","Buffer","Mesh","pushQuad","Shader","Texture","TSGLContextBase","time","TSGLContext","global","Map","eq","toSource","React","Component","memoize","ntc.names","classNames","whats","colorsExtended","csWhats","PureComponent"],"mappings":"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CAAC,CAAC,CAAC,CAAC,CAAA;UAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAEhC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAEjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAEhC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACnD,IAAI,CAAC,GAAG,CAAC,CAAA;UACT,OAAO,CAAC,EAAE,EAAE;cACX,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAA;WACX;UAED,OAAO,MAAM,CAAA;OACb;;MAGD,SAAS,CAAC,SAAiB,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;UACrD,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;UAC1B,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;UAClD,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAA;UACtD,MAAM,CAAC,MAAM,IAAI,IAAI,MAAM,CAAC,CAAA;UAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EACf,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;;;;UAKb,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;UACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACtE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;UACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAGhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACtE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;UACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;UACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAGhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAClE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UAG/D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACtE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC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,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;UACjE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;UACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;UAEnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;UACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;UACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC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"}